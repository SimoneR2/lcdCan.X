

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Feb 02 17:20:16 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  001682                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _delay_quartz_frequency_value
    38  001682  08                 	db	8
    39  0000                     _RXB1CON	set	3920
    40  0000                     _RXB1CONbits	set	3920
    41  0000                     _RXB1D0	set	3926
    42  0000                     _RXB1D1	set	3927
    43  0000                     _RXB1D2	set	3928
    44  0000                     _RXB1D3	set	3929
    45  0000                     _RXB1D4	set	3930
    46  0000                     _RXB1D5	set	3931
    47  0000                     _RXB1D6	set	3932
    48  0000                     _RXB1D7	set	3933
    49  0000                     _RXB1DLC	set	3925
    50  0000                     _RXB1DLCbits	set	3925
    51  0000                     _RXB1EIDH	set	3923
    52  0000                     _RXB1EIDL	set	3924
    53  0000                     _RXB1SIDH	set	3921
    54  0000                     _RXB1SIDL	set	3922
    55  0000                     _RXB1SIDLbits	set	3922
    56  0000                     _RXF0EIDH	set	3842
    57  0000                     _RXF0EIDL	set	3843
    58  0000                     _RXF0SIDH	set	3840
    59  0000                     _RXF0SIDL	set	3841
    60  0000                     _RXF0SIDLbits	set	3841
    61  0000                     _RXF1EIDH	set	3846
    62  0000                     _RXF1EIDL	set	3847
    63  0000                     _RXF1SIDH	set	3844
    64  0000                     _RXF1SIDL	set	3845
    65  0000                     _RXF1SIDLbits	set	3845
    66  0000                     _RXF2EIDH	set	3850
    67  0000                     _RXF2EIDL	set	3851
    68  0000                     _RXF2SIDH	set	3848
    69  0000                     _RXF2SIDL	set	3849
    70  0000                     _RXF2SIDLbits	set	3849
    71  0000                     _RXF3EIDH	set	3854
    72  0000                     _RXF3EIDL	set	3855
    73  0000                     _RXF3SIDH	set	3852
    74  0000                     _RXF3SIDL	set	3853
    75  0000                     _RXF3SIDLbits	set	3853
    76  0000                     _RXF4EIDH	set	3858
    77  0000                     _RXF4EIDL	set	3859
    78  0000                     _RXF4SIDH	set	3856
    79  0000                     _RXF4SIDL	set	3857
    80  0000                     _RXF4SIDLbits	set	3857
    81  0000                     _RXF5EIDH	set	3862
    82  0000                     _RXF5EIDL	set	3863
    83  0000                     _RXF5SIDH	set	3860
    84  0000                     _RXF5SIDL	set	3861
    85  0000                     _RXF5SIDLbits	set	3861
    86  0000                     _RXM0EIDH	set	3866
    87  0000                     _RXM0EIDL	set	3867
    88  0000                     _RXM0SIDH	set	3864
    89  0000                     _RXM0SIDL	set	3865
    90  0000                     _RXM0SIDLbits	set	3865
    91  0000                     _RXM1EIDH	set	3870
    92  0000                     _RXM1EIDL	set	3871
    93  0000                     _RXM1SIDH	set	3868
    94  0000                     _RXM1SIDL	set	3869
    95  0000                     _RXM1SIDLbits	set	3869
    96  0000                     _TXB0CONbits	set	3904
    97  0000                     _TXB0D0	set	3910
    98  0000                     _TXB0D1	set	3911
    99  0000                     _TXB0D2	set	3912
   100  0000                     _TXB0D3	set	3913
   101  0000                     _TXB0D4	set	3914
   102  0000                     _TXB0D5	set	3915
   103  0000                     _TXB0D6	set	3916
   104  0000                     _TXB0D7	set	3917
   105  0000                     _TXB0DLC	set	3909
   106  0000                     _TXB0DLCbits	set	3909
   107  0000                     _TXB0EIDH	set	3907
   108  0000                     _TXB0EIDL	set	3908
   109  0000                     _TXB0SIDH	set	3905
   110  0000                     _TXB0SIDL	set	3906
   111  0000                     _TXB0SIDLbits	set	3906
   112  0000                     _TXB1CONbits	set	3888
   113  0000                     _TXB1D0	set	3894
   114  0000                     _TXB1D1	set	3895
   115  0000                     _TXB1D2	set	3896
   116  0000                     _TXB1D3	set	3897
   117  0000                     _TXB1D4	set	3898
   118  0000                     _TXB1D5	set	3899
   119  0000                     _TXB1D6	set	3900
   120  0000                     _TXB1D7	set	3901
   121  0000                     _TXB1DLC	set	3893
   122  0000                     _TXB1DLCbits	set	3893
   123  0000                     _TXB1EIDH	set	3891
   124  0000                     _TXB1EIDL	set	3892
   125  0000                     _TXB1SIDH	set	3889
   126  0000                     _TXB1SIDL	set	3890
   127  0000                     _TXB1SIDLbits	set	3890
   128  0000                     _TXB2CONbits	set	3872
   129  0000                     _TXB2D0	set	3878
   130  0000                     _TXB2D1	set	3879
   131  0000                     _TXB2D2	set	3880
   132  0000                     _TXB2D3	set	3881
   133  0000                     _TXB2D4	set	3882
   134  0000                     _TXB2D5	set	3883
   135  0000                     _TXB2D6	set	3884
   136  0000                     _TXB2D7	set	3885
   137  0000                     _TXB2DLC	set	3877
   138  0000                     _TXB2DLCbits	set	3877
   139  0000                     _TXB2EIDH	set	3875
   140  0000                     _TXB2EIDL	set	3876
   141  0000                     _TXB2SIDH	set	3873
   142  0000                     _TXB2SIDL	set	3874
   143  0000                     _TXB2SIDLbits	set	3874
   144  0000                     _BRGCON1	set	3952
   145  0000                     _BRGCON2	set	3953
   146  0000                     _BRGCON2bits	set	3953
   147  0000                     _BRGCON3	set	3954
   148  0000                     _BRGCON3bits	set	3954
   149  0000                     _CANCON	set	3951
   150  0000                     _CANCONbits	set	3951
   151  0000                     _CANSTAT	set	3950
   152  0000                     _COMSTATbits	set	3956
   153  0000                     _IPR3bits	set	4005
   154  0000                     _LATA	set	3977
   155  0000                     _LATB	set	3978
   156  0000                     _LATC	set	3979
   157  0000                     _LATCbits	set	3979
   158  0000                     _LATD	set	3980
   159  0000                     _LATDbits	set	3980
   160  0000                     _LATE	set	3981
   161  0000                     _PIE3bits	set	4003
   162  0000                     _PIR3bits	set	4004
   163  0000                     _RXB0CON	set	3936
   164  0000                     _RXB0CONbits	set	3936
   165  0000                     _RXB0D0	set	3942
   166  0000                     _RXB0D1	set	3943
   167  0000                     _RXB0D2	set	3944
   168  0000                     _RXB0D3	set	3945
   169  0000                     _RXB0D4	set	3946
   170  0000                     _RXB0D5	set	3947
   171  0000                     _RXB0D6	set	3948
   172  0000                     _RXB0D7	set	3949
   173  0000                     _RXB0DLC	set	3941
   174  0000                     _RXB0DLCbits	set	3941
   175  0000                     _RXB0EIDH	set	3939
   176  0000                     _RXB0EIDL	set	3940
   177  0000                     _RXB0SIDH	set	3937
   178  0000                     _RXB0SIDL	set	3938
   179  0000                     _RXB0SIDLbits	set	3938
   180  0000                     _RXERRCNT	set	3957
   181  0000                     _TRISA	set	3986
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISC	set	3988
   184  0000                     _TRISD	set	3989
   185  0000                     _TRISE	set	3990
   186  0000                     _TXERRCNT	set	3958
   187                           
   188                           ; #config settings
   189  0000                     
   190                           	psect	cinit
   191  001588                     __pcinit:
   192                           	opt stack 0
   193  001588                     start_initialization:
   194                           	opt stack 0
   195  001588                     __initialization:
   196                           	opt stack 0
   197                           
   198                           ; Clear objects allocated to COMRAM (23 bytes)
   199  001588  EE00  F02D         	lfsr	0,__pbssCOMRAM
   200  00158C  0E17               	movlw	23
   201  00158E                     clear_0:
   202  00158E  6AEE               	clrf	postinc0,c
   203  001590  06E8               	decf	wreg,f,c
   204  001592  E1FD               	bnz	clear_0
   205                           
   206                           ; Initialize objects allocated to COMRAM (1 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208  001594  0E82               	movlw	low __pidataCOMRAM
   209  001596  6EF6               	movwf	tblptrl,c
   210  001598  0E16               	movlw	high __pidataCOMRAM
   211  00159A  6EF7               	movwf	tblptrh,c
   212  00159C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213  00159E  6EF8               	movwf	tblptru,c
   214  0015A0  0009               	tblrd		*+	;fetch initializer
   215  0015A2  CFF5 F044          	movff	tablat,__pdataCOMRAM
   216  0015A6                     end_of_initialization:
   217                           	opt stack 0
   218  0015A6                     __end_of__initialization:
   219                           	opt stack 0
   220  0015A6  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   221  0015A8  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   222  0015AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223  0015AC  6EF8               	movwf	tblptru,c
   224  0015AE  0100               	movlb	0
   225  0015B0  EF37  F00B         	goto	_main	;jump to C main() function
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssCOMRAM
   234  00002D                     __pbssCOMRAM:
   235                           	opt stack 0
   236  00002D                     LCD_write_integer@F16315:
   237                           	opt stack 0
   238  00002D                     	ds	6
   239  000033                     _clock_counter_reference:
   240                           	opt stack 0
   241  000033                     	ds	2
   242  000035                     _msg:
   243                           	opt stack 0
   244  000035                     	ds	15
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	dataCOMRAM
   253  000044                     __pdataCOMRAM:
   254                           	opt stack 0
   255  000044                     _delay_quartz_frequency_value:
   256                           	opt stack 0
   257  000044                     	ds	1
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           
   265                           	psect	cstackBANK0
   266  000060                     __pcstackBANK0:
   267                           	opt stack 0
   268  000060                     CANInitialize@phaseSeg1:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x0
   272  000060                     	ds	1
   273  000061                     CANInitialize@phaseSeg2:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x1
   277  000061                     	ds	1
   278  000062                     CANInitialize@SJW:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x2
   282  000062                     	ds	1
   283  000063                     CANInitialize@BRP:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287  000063                     	ds	1
   288  000064                     CANInitialize@flags:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x4
   292  000064                     	ds	1
   293  000065                     CANInitialize@propSeg:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x5
   297  000065                     	ds	1
   298  000066                     CANInitialize@FilterConfig1:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x6
   302  000066                     	ds	1
   303  000067                     CANInitialize@FilterConfig2:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x7
   307  000067                     	ds	1
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           
   315                           	psect	cstackCOMRAM
   316  000001                     __pcstackCOMRAM:
   317                           	opt stack 0
   318  000001                     _CANisRxReady$2542:
   319                           	opt stack 0
   320  000001                     CANreceiveMessage@msg:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x0
   324  000001                     	ds	2
   325  000003                     ??_CANreceiveMessage:
   326                           
   327                           ; 1 bytes @ 0x2
   328  000003                     	ds	8
   329  00000B                     CANreceiveMessage@error:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xA
   333  00000B                     	ds	1
   334  00000C                     CANreceiveMessage@tamp:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0xB
   338  00000C                     	ds	1
   339  00000D                     ??_ISR_Alta:
   340                           
   341                           ; 1 bytes @ 0xC
   342  00000D                     	ds	14
   343  00001B                     ?___wmul:
   344                           	opt stack 0
   345  00001B                     CANOperationMode@mode:
   346                           	opt stack 0
   347  00001B                     delay_set_quartz@frequency:
   348                           	opt stack 0
   349  00001B                     ___wmul@multiplier:
   350                           	opt stack 0
   351  00001B                     CANSetMask@mask:
   352                           	opt stack 0
   353  00001B                     CANSetFilter@filter:
   354                           	opt stack 0
   355                           
   356                           ; 4 bytes @ 0x1A
   357  00001B                     	ds	2
   358  00001D                     ___wmul@multiplicand:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x1C
   362  00001D                     	ds	2
   363  00001F                     CANSetMask@type:
   364                           	opt stack 0
   365  00001F                     CANSetFilter@type:
   366                           	opt stack 0
   367  00001F                     ___wmul@product:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x1E
   371  00001F                     	ds	1
   372  000020                     ??_CANSetMask:
   373  000020                     ??_CANSetFilter:
   374                           
   375                           ; 1 bytes @ 0x1F
   376  000020                     	ds	1
   377  000021                     delay_ms@value_ms:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x20
   381  000021                     	ds	2
   382  000023                     LCD_send_command@D2:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x22
   386  000023                     	ds	1
   387  000024                     CANSetMask@numBuffer:
   388                           	opt stack 0
   389  000024                     CANSetFilter@numBuffer:
   390                           	opt stack 0
   391  000024                     LCD_send_command@D1:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x23
   395  000024                     	ds	1
   396  000025                     LCD_send_command@D0:
   397                           	opt stack 0
   398  000025                     CANSetMask@tamp:
   399                           	opt stack 0
   400  000025                     CANSetFilter@tamp:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0x24
   404  000025                     	ds	1
   405  000026                     LCD_send_command@D3:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x25
   409  000026                     	ds	1
   410  000027                     LCD_cursor@blinking:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x26
   414  000027                     	ds	1
   415  000028                     LCD_cursor@active:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x27
   419  000028                     	ds	1
   420  000029                     ??_CANInitialize:
   421  000029                     LCD_initialize@quartz_frequency:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x28
   425  000029                     	ds	4
   426  00002D                     tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           
   433                           ; 1 bytes @ 0x2C
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 21 in file "lcdCan.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   453 ;;      Params:         0       0       0       0
   454 ;;      Locals:         0       0       0       0
   455 ;;      Temps:          0       0       0       0
   456 ;;      Totals:         0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels required when called:    8
   459 ;; This function calls:
   460 ;;		_LCD_initialize
   461 ;;		_configurazione
   462 ;; This function is called by:
   463 ;;		Startup code after reset
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text0
   468  00166E                     __ptext0:
   469                           	opt stack 0
   470  00166E                     _main:
   471                           	opt stack 23
   472                           
   473                           ;lcdCan.c: 22: configurazione();
   474                           
   475                           ;incstack = 0
   476  00166E  EC6A  F00A         	call	_configurazione	;wreg free
   477                           
   478                           ;lcdCan.c: 23: LCD_initialize(16);
   479  001672  0E10               	movlw	16
   480  001674  EC99  F009         	call	_LCD_initialize
   481  001678                     l627:
   482  001678  D7FF               	goto	l627
   483  00167A                     __end_of_main:
   484                           	opt stack 0
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           
   492 ;; *************** function _configurazione *****************
   493 ;; Defined at:
   494 ;;		line 29 in file "lcdCan.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   508 ;;      Params:         0       0       0       0
   509 ;;      Locals:         0       0       0       0
   510 ;;      Temps:          0       0       0       0
   511 ;;      Totals:         0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    4
   515 ;; This function calls:
   516 ;;		_CANInitialize
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text1
   523  0014D4                     __ptext1:
   524                           	opt stack 0
   525  0014D4                     _configurazione:
   526                           	opt stack 26
   527                           
   528                           ;lcdCan.c: 30: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAMP
      +                          LE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
   529                           
   530                           ;incstack = 0
   531  0014D4  0E06               	movlw	6
   532  0014D6  0100               	movlb	0	; () banked
   533  0014D8  6F60               	movwf	CANInitialize@phaseSeg1& (0+255),b
   534  0014DA  0E05               	movlw	5
   535  0014DC  0100               	movlb	0	; () banked
   536  0014DE  6F61               	movwf	CANInitialize@phaseSeg2& (0+255),b
   537  0014E0  0E01               	movlw	1
   538  0014E2  0100               	movlb	0	; () banked
   539  0014E4  6F62               	movwf	CANInitialize@SJW& (0+255),b
   540  0014E6  0E03               	movlw	3
   541  0014E8  0100               	movlb	0	; () banked
   542  0014EA  6F63               	movwf	CANInitialize@BRP& (0+255),b
   543  0014EC  0E9D               	movlw	157
   544  0014EE  0100               	movlb	0	; () banked
   545  0014F0  6F64               	movwf	CANInitialize@flags& (0+255),b
   546  0014F2  0E04               	movlw	4
   547  0014F4  ECC9  F008         	call	_CANInitialize
   548                           
   549                           ;lcdCan.c: 31: LATA = 0x00;
   550  0014F8  0E00               	movlw	0
   551  0014FA  6E89               	movwf	3977,c	;volatile
   552                           
   553                           ;lcdCan.c: 32: TRISA = 0xff;
   554  0014FC  6892               	setf	3986,c	;volatile
   555                           
   556                           ;lcdCan.c: 33: LATB = 0x00;
   557  0014FE  0E00               	movlw	0
   558  001500  6E8A               	movwf	3978,c	;volatile
   559                           
   560                           ;lcdCan.c: 34: TRISB = 0xff;
   561  001502  6893               	setf	3987,c	;volatile
   562                           
   563                           ;lcdCan.c: 35: LATC = 0x00;
   564  001504  0E00               	movlw	0
   565  001506  6E8B               	movwf	3979,c	;volatile
   566                           
   567                           ;lcdCan.c: 36: TRISC = 0xff;
   568  001508  6894               	setf	3988,c	;volatile
   569                           
   570                           ;lcdCan.c: 37: LATD = 0x00;
   571  00150A  0E00               	movlw	0
   572  00150C  6E8C               	movwf	3980,c	;volatile
   573                           
   574                           ;lcdCan.c: 38: TRISD = 0x00;
   575  00150E  0E00               	movlw	0
   576  001510  6E95               	movwf	3989,c	;volatile
   577                           
   578                           ;lcdCan.c: 39: LATE = 0x00;
   579  001512  0E00               	movlw	0
   580  001514  6E8D               	movwf	3981,c	;volatile
   581                           
   582                           ;lcdCan.c: 40: TRISE = 0xFF;
   583  001516  6896               	setf	3990,c	;volatile
   584                           
   585                           ;lcdCan.c: 41: PIR3bits.RXB1IF = 0;
   586  001518  92A4               	bcf	4004,1,c	;volatile
   587                           
   588                           ;lcdCan.c: 42: PIR3bits.RXB0IF = 0;
   589  00151A  90A4               	bcf	4004,0,c	;volatile
   590                           
   591                           ;lcdCan.c: 43: IPR3bits.RXB1IP = 1;
   592  00151C  82A5               	bsf	4005,1,c	;volatile
   593                           
   594                           ;lcdCan.c: 44: IPR3bits.RXB0IP = 1;
   595  00151E  80A5               	bsf	4005,0,c	;volatile
   596                           
   597                           ;lcdCan.c: 45: PIE3bits.RXB1IE = 1;
   598  001520  82A3               	bsf	4003,1,c	;volatile
   599                           
   600                           ;lcdCan.c: 46: PIE3bits.RXB0IE = 1;
   601  001522  80A3               	bsf	4003,0,c	;volatile
   602  001524  0012               	return		;funcret
   603  001526                     __end_of_configurazione:
   604                           	opt stack 0
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           postinc0	equ	0xFEE
   610                           wreg	equ	0xFE8
   611                           
   612 ;; *************** function _CANInitialize *****************
   613 ;; Defined at:
   614 ;;		line 218 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   615 ;; Parameters:    Size  Location     Type
   616 ;;  propSeg         1    wreg     unsigned char 
   617 ;;  phaseSeg1       1    0[BANK0 ] unsigned char 
   618 ;;  phaseSeg2       1    1[BANK0 ] unsigned char 
   619 ;;  SJW             1    2[BANK0 ] unsigned char 
   620 ;;  BRP             1    3[BANK0 ] unsigned char 
   621 ;;  flags           1    4[BANK0 ] enum E15929
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  propSeg         1    5[BANK0 ] unsigned char 
   624 ;;  FilterConfig    1    7[BANK0 ] unsigned char 
   625 ;;  FilterConfig    1    6[BANK0 ] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   635 ;;      Params:         0       5       0       0
   636 ;;      Locals:         0       3       0       0
   637 ;;      Temps:          4       0       0       0
   638 ;;      Totals:         4       8       0       0
   639 ;;Total ram usage:       12 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    3
   642 ;; This function calls:
   643 ;;		_CANOperationMode
   644 ;;		_CANSetFilter
   645 ;;		_CANSetMask
   646 ;; This function is called by:
   647 ;;		_configurazione
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text2
   652  001192                     __ptext2:
   653                           	opt stack 0
   654  001192                     _CANInitialize:
   655                           	opt stack 26
   656                           
   657                           ;incstack = 0
   658                           ;CANInitialize@propSeg stored from wreg
   659  001192  0100               	movlb	0	; () banked
   660  001194  6F65               	movwf	CANInitialize@propSeg& (0+255),b
   661                           
   662                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
   663                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
   664                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
   665  001196  0E80               	movlw	128
   666  001198  EC2E  F00B         	call	_CANOperationMode
   667                           
   668                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
   669  00119C  0E00               	movlw	0
   670  00119E  6E70               	movwf	3952,c	;volatile
   671                           
   672                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
   673  0011A0  0E00               	movlw	0
   674  0011A2  6E71               	movwf	3953,c	;volatile
   675                           
   676                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
   677  0011A4  0E00               	movlw	0
   678  0011A6  6E72               	movwf	3954,c	;volatile
   679                           
   680                           ;inc\CANlib.h: 229: SJW= SJW << 6;
   681  0011A8  0100               	movlb	0	; () banked
   682  0011AA  4162               	rrncf	CANInitialize@SJW& (0+255),w,b
   683  0011AC  42E8               	rrncf	wreg,f,c
   684  0011AE  0BC0               	andlw	192
   685  0011B0  0100               	movlb	0	; () banked
   686  0011B2  6F62               	movwf	CANInitialize@SJW& (0+255),b
   687                           
   688                           ; BSR set to: 0
   689                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
   690  0011B4  0100               	movlb	0	; () banked
   691  0011B6  5162               	movf	CANInitialize@SJW& (0+255),w,b
   692  0011B8  1270               	iorwf	3952,f,c	;volatile
   693                           
   694                           ; BSR set to: 0
   695                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
   696  0011BA  0100               	movlb	0	; () banked
   697  0011BC  5163               	movf	CANInitialize@BRP& (0+255),w,b
   698  0011BE  1270               	iorwf	3952,f,c	;volatile
   699                           
   700                           ; BSR set to: 0
   701                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
   702  0011C0  0100               	movlb	0	; () banked
   703  0011C2  5165               	movf	CANInitialize@propSeg& (0+255),w,b
   704  0011C4  1271               	iorwf	3953,f,c	;volatile
   705                           
   706                           ; BSR set to: 0
   707                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
   708  0011C6  0100               	movlb	0	; () banked
   709  0011C8  3960               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
   710  0011CA  42E8               	rrncf	wreg,f,c
   711  0011CC  0BF8               	andlw	248
   712  0011CE  0100               	movlb	0	; () banked
   713  0011D0  6F60               	movwf	CANInitialize@phaseSeg1& (0+255),b
   714                           
   715                           ; BSR set to: 0
   716                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
   717  0011D2  0100               	movlb	0	; () banked
   718  0011D4  5160               	movf	CANInitialize@phaseSeg1& (0+255),w,b
   719  0011D6  1271               	iorwf	3953,f,c	;volatile
   720                           
   721                           ; BSR set to: 0
   722                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
   723  0011D8  0100               	movlb	0	; () banked
   724  0011DA  A564               	btfss	CANInitialize@flags& (0+255),2,b
   725                           
   726                           ; BSR set to: 0
   727                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
   728  0011DC  8C71               	bsf	3953,6,c	;volatile
   729                           
   730                           ; BSR set to: 0
   731                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
   732  0011DE  0100               	movlb	0	; () banked
   733  0011E0  B164               	btfsc	CANInitialize@flags& (0+255),0,b
   734                           
   735                           ; BSR set to: 0
   736                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
   737  0011E2  8E71               	bsf	3953,7,c	;volatile
   738                           
   739                           ; BSR set to: 0
   740                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
   741                           
   742                           ; BSR set to: 0
   743  0011E4  0100               	movlb	0	; () banked
   744  0011E6  5161               	movf	CANInitialize@phaseSeg2& (0+255),w,b
   745  0011E8  1272               	iorwf	3954,f,c	;volatile
   746                           
   747                           ; BSR set to: 0
   748                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
   749  0011EA  0100               	movlb	0	; () banked
   750  0011EC  B364               	btfsc	CANInitialize@flags& (0+255),1,b
   751                           
   752                           ; BSR set to: 0
   753                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
   754  0011EE  8C72               	bsf	3954,6,c	;volatile
   755                           
   756                           ; BSR set to: 0
   757                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
   758                           
   759                           ; BSR set to: 0
   760  0011F0  0100               	movlb	0	; () banked
   761  0011F2  5164               	movf	CANInitialize@flags& (0+255),w,b
   762  0011F4  0B60               	andlw	96
   763  0011F6  6E60               	movwf	3936,c	;volatile
   764                           
   765                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
   766  0011F8  0100               	movlb	0	; () banked
   767  0011FA  5164               	movf	CANInitialize@flags& (0+255),w,b
   768  0011FC  0B10               	andlw	16
   769  0011FE  0AFF               	xorlw	255
   770  001200  B4D8               	btfsc	status,2,c
   771                           
   772                           ; BSR set to: 0
   773                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
   774  001202  8460               	bsf	3936,2,c	;volatile
   775                           
   776                           ; BSR set to: 0
   777                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
   778  001204  CF60 FF50          	movff	3936,3920	;volatile
   779                           
   780                           ; BSR set to: 0
   781                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
   782  001208  0E00               	movlw	0
   783  00120A  6E1B               	movwf	CANSetMask@mask,c
   784  00120C  0E00               	movlw	0
   785  00120E  6E1C               	movwf	CANSetMask@mask+1,c
   786  001210  0E00               	movlw	0
   787  001212  6E1D               	movwf	CANSetMask@mask+2,c
   788  001214  0E00               	movlw	0
   789  001216  6E1E               	movwf	CANSetMask@mask+3,c
   790  001218  0EF7               	movlw	247
   791  00121A  6E1F               	movwf	CANSetMask@type,c
   792  00121C  0E01               	movlw	1
   793  00121E  EC41  F007         	call	_CANSetMask
   794                           
   795                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
   796  001222  0E00               	movlw	0
   797  001224  6E1B               	movwf	CANSetMask@mask,c
   798  001226  0E00               	movlw	0
   799  001228  6E1C               	movwf	CANSetMask@mask+1,c
   800  00122A  0E00               	movlw	0
   801  00122C  6E1D               	movwf	CANSetMask@mask+2,c
   802  00122E  0E00               	movlw	0
   803  001230  6E1E               	movwf	CANSetMask@mask+3,c
   804  001232  0EF7               	movlw	247
   805  001234  6E1F               	movwf	CANSetMask@type,c
   806  001236  0E02               	movlw	2
   807  001238  EC41  F007         	call	_CANSetMask
   808                           
   809                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
   810  00123C  D00F               	goto	l3689
   811  00123E                     l3683:
   812                           
   813                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
   814  00123E  0EF7               	movlw	247
   815  001240  0100               	movlb	0	; () banked
   816  001242  6F66               	movwf	CANInitialize@FilterConfig1& (0+255),b
   817  001244  D007               	goto	l3685
   818  001246                     l322:
   819                           
   820                           ; BSR set to: 0
   821                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
   822  001246  0100               	movlb	0	; () banked
   823  001248  6966               	setf	CANInitialize@FilterConfig1& (0+255),b
   824                           
   825                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
   826  00124A  0100               	movlb	0	; () banked
   827  00124C  6967               	setf	CANInitialize@FilterConfig2& (0+255),b
   828                           
   829                           ;inc\CANlib.h: 273: break;
   830  00124E  D01F               	goto	l3691
   831  001250                     l323:
   832                           
   833                           ; BSR set to: 0
   834                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
   835  001250  0100               	movlb	0	; () banked
   836  001252  6966               	setf	CANInitialize@FilterConfig1& (0+255),b
   837  001254                     l3685:
   838                           
   839                           ; BSR set to: 0
   840                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
   841  001254  0EF7               	movlw	247
   842  001256  0100               	movlb	0	; () banked
   843  001258  6F67               	movwf	CANInitialize@FilterConfig2& (0+255),b
   844                           
   845                           ; BSR set to: 0
   846                           ;inc\CANlib.h: 278: }
   847                           
   848                           ;inc\CANlib.h: 277: break;
   849  00125A  D019               	goto	l3691
   850  00125C                     l3689:
   851  00125C  0E9F               	movlw	159
   852  00125E  6E29               	movwf	??_CANInitialize& (0+255),c
   853  001260  0EFF               	movlw	255
   854  001262  6E2A               	movwf	(??_CANInitialize+1)& (0+255),c
   855  001264  0100               	movlb	0	; () banked
   856  001266  5164               	movf	CANInitialize@flags& (0+255),w,b
   857  001268  0B60               	andlw	96
   858  00126A  6E2B               	movwf	(??_CANInitialize+2)& (0+255),c
   859  00126C  6A2C               	clrf	(??_CANInitialize+3)& (0+255),c
   860  00126E  5029               	movf	??_CANInitialize,w,c
   861  001270  122B               	iorwf	??_CANInitialize+2,f,c
   862  001272  502A               	movf	??_CANInitialize+1,w,c
   863  001274  122C               	iorwf	??_CANInitialize+3,f,c
   864                           
   865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   866                           ; Switch size 1, requested type "space"
   867                           ; Number of cases is 1, Range of values is 0 to 0
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; simple_byte            4     3 (average)
   871                           ;	Chosen strategy is simple_byte
   872  001276  502C               	movf	??_CANInitialize+3,w,c
   873  001278  0A00               	xorlw	0	; case 0
   874  00127A  A4D8               	btfss	status,2,c
   875  00127C  D7E9               	goto	l323
   876                           
   877                           ; BSR set to: 0
   878                           ; Switch size 1, requested type "space"
   879                           ; Number of cases is 2, Range of values is 191 to 223
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte            7     4 (average)
   883                           ;	Chosen strategy is simple_byte
   884  00127E  502B               	movf	??_CANInitialize+2,w,c
   885  001280  0ABF               	xorlw	191	; case 191
   886  001282  B4D8               	btfsc	status,2,c
   887  001284  D7E0               	goto	l322
   888  001286  0A60               	xorlw	96	; case 223
   889  001288  B4D8               	btfsc	status,2,c
   890  00128A  D7D9               	goto	l3683
   891  00128C  D7E1               	goto	l323
   892  00128E                     l3691:
   893                           
   894                           ; BSR set to: 0
   895                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
   896  00128E  0E00               	movlw	0
   897  001290  6E1B               	movwf	CANSetFilter@filter,c
   898  001292  0E00               	movlw	0
   899  001294  6E1C               	movwf	CANSetFilter@filter+1,c
   900  001296  0E00               	movlw	0
   901  001298  6E1D               	movwf	CANSetFilter@filter+2,c
   902  00129A  0E00               	movlw	0
   903  00129C  6E1E               	movwf	CANSetFilter@filter+3,c
   904  00129E  C066  F01F         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
   905  0012A2  0E00               	movlw	0
   906  0012A4  EC0D  F000         	call	_CANSetFilter
   907                           
   908                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
   909  0012A8  0E00               	movlw	0
   910  0012AA  6E1B               	movwf	CANSetFilter@filter,c
   911  0012AC  0E00               	movlw	0
   912  0012AE  6E1C               	movwf	CANSetFilter@filter+1,c
   913  0012B0  0E00               	movlw	0
   914  0012B2  6E1D               	movwf	CANSetFilter@filter+2,c
   915  0012B4  0E00               	movlw	0
   916  0012B6  6E1E               	movwf	CANSetFilter@filter+3,c
   917  0012B8  C066  F01F         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
   918  0012BC  0E01               	movlw	1
   919  0012BE  EC0D  F000         	call	_CANSetFilter
   920                           
   921                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
   922  0012C2  0E00               	movlw	0
   923  0012C4  6E1B               	movwf	CANSetFilter@filter,c
   924  0012C6  0E00               	movlw	0
   925  0012C8  6E1C               	movwf	CANSetFilter@filter+1,c
   926  0012CA  0E00               	movlw	0
   927  0012CC  6E1D               	movwf	CANSetFilter@filter+2,c
   928  0012CE  0E00               	movlw	0
   929  0012D0  6E1E               	movwf	CANSetFilter@filter+3,c
   930  0012D2  C067  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
   931  0012D6  0E02               	movlw	2
   932  0012D8  EC0D  F000         	call	_CANSetFilter
   933                           
   934                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
   935  0012DC  0E00               	movlw	0
   936  0012DE  6E1B               	movwf	CANSetFilter@filter,c
   937  0012E0  0E00               	movlw	0
   938  0012E2  6E1C               	movwf	CANSetFilter@filter+1,c
   939  0012E4  0E00               	movlw	0
   940  0012E6  6E1D               	movwf	CANSetFilter@filter+2,c
   941  0012E8  0E00               	movlw	0
   942  0012EA  6E1E               	movwf	CANSetFilter@filter+3,c
   943  0012EC  C067  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
   944  0012F0  0E03               	movlw	3
   945  0012F2  EC0D  F000         	call	_CANSetFilter
   946                           
   947                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
   948  0012F6  0E00               	movlw	0
   949  0012F8  6E1B               	movwf	CANSetFilter@filter,c
   950  0012FA  0E00               	movlw	0
   951  0012FC  6E1C               	movwf	CANSetFilter@filter+1,c
   952  0012FE  0E00               	movlw	0
   953  001300  6E1D               	movwf	CANSetFilter@filter+2,c
   954  001302  0E00               	movlw	0
   955  001304  6E1E               	movwf	CANSetFilter@filter+3,c
   956  001306  C067  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
   957  00130A  0E04               	movlw	4
   958  00130C  EC0D  F000         	call	_CANSetFilter
   959                           
   960                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
   961  001310  0E00               	movlw	0
   962  001312  6E1B               	movwf	CANSetFilter@filter,c
   963  001314  0E00               	movlw	0
   964  001316  6E1C               	movwf	CANSetFilter@filter+1,c
   965  001318  0E00               	movlw	0
   966  00131A  6E1D               	movwf	CANSetFilter@filter+2,c
   967  00131C  0E00               	movlw	0
   968  00131E  6E1E               	movwf	CANSetFilter@filter+3,c
   969  001320  C067  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
   970  001324  0E05               	movlw	5
   971  001326  EC0D  F000         	call	_CANSetFilter
   972                           
   973                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
   974  00132A  0E00               	movlw	0
   975  00132C  EC2E  F00B         	call	_CANOperationMode
   976  001330  0012               	return		;funcret
   977  001332                     __end_of_CANInitialize:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           postinc0	equ	0xFEE
   984                           wreg	equ	0xFE8
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _CANSetMask *****************
   988 ;; Defined at:
   989 ;;		line 640 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  numBuffer       1    wreg     enum E15963
   992 ;;  mask            4   26[COMRAM] unsigned long 
   993 ;;  type            1   30[COMRAM] enum E15929
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  numBuffer       1   35[COMRAM] enum E15963
   996 ;;  tamp            4   36[COMRAM] unsigned long 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1006 ;;      Params:         5       0       0       0
  1007 ;;      Locals:         5       0       0       0
  1008 ;;      Temps:          4       0       0       0
  1009 ;;      Totals:        14       0       0       0
  1010 ;;Total ram usage:       14 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_CANInitialize
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text3
  1021  000E82                     __ptext3:
  1022                           	opt stack 0
  1023  000E82                     _CANSetMask:
  1024                           	opt stack 26
  1025                           
  1026                           ;incstack = 0
  1027                           ;CANSetMask@numBuffer stored from wreg
  1028  000E82  6E24               	movwf	CANSetMask@numBuffer,c
  1029                           
  1030                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  1031  000E84  0424               	decf	CANSetMask@numBuffer,w,c
  1032  000E86  A4D8               	btfss	status,2,c
  1033  000E88  D049               	goto	l3253
  1034  000E8A  281F               	incf	CANSetMask@type,w,c
  1035  000E8C  A4D8               	btfss	status,2,c
  1036  000E8E  D046               	goto	l3253
  1037                           
  1038                           ;inc\CANlib.h: 644: {
  1039                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  1040  000E90  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1041  000E94  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1042  000E98  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1043  000E9C  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1044  000EA0  0E04               	movlw	4
  1045  000EA2  D005               	goto	u3360
  1046  000EA4                     u3365:
  1047  000EA4  90D8               	bcf	status,0,c
  1048  000EA6  3223               	rrcf	??_CANSetMask+3,f,c
  1049  000EA8  3222               	rrcf	??_CANSetMask+2,f,c
  1050  000EAA  3221               	rrcf	??_CANSetMask+1,f,c
  1051  000EAC  3220               	rrcf	??_CANSetMask,f,c
  1052  000EAE                     u3360:
  1053  000EAE  2EE8               	decfsz	wreg,f,c
  1054  000EB0  D7F9               	goto	u3365
  1055  000EB2  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1056  000EB6  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1057  000EBA  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1058  000EBE  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1059                           
  1060                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  1061  000EC2  5025               	movf	CANSetMask@tamp,w,c
  1062  000EC4  6E25               	movwf	CANSetMask@tamp,c
  1063  000EC6  6A26               	clrf	CANSetMask@tamp+1,c
  1064  000EC8  6A27               	clrf	CANSetMask@tamp+2,c
  1065  000ECA  6A28               	clrf	CANSetMask@tamp+3,c
  1066                           
  1067                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  1068  000ECC  C025  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1069                           
  1070                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  1071  000ED0  0E07               	movlw	7
  1072  000ED2  141B               	andwf	CANSetMask@mask,w,c
  1073  000ED4  6E25               	movwf	CANSetMask@tamp,c
  1074  000ED6  0E00               	movlw	0
  1075  000ED8  141C               	andwf	CANSetMask@mask+1,w,c
  1076  000EDA  6E26               	movwf	CANSetMask@tamp+1,c
  1077  000EDC  0E00               	movlw	0
  1078  000EDE  141D               	andwf	CANSetMask@mask+2,w,c
  1079  000EE0  6E27               	movwf	CANSetMask@tamp+2,c
  1080  000EE2  0E00               	movlw	0
  1081  000EE4  141E               	andwf	CANSetMask@mask+3,w,c
  1082  000EE6  6E28               	movwf	CANSetMask@tamp+3,c
  1083                           
  1084                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  1085  000EE8  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1086  000EEC  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1087  000EF0  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1088  000EF4  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1089  000EF8  0E05               	movlw	5
  1090  000EFA                     u3375:
  1091  000EFA  90D8               	bcf	status,0,c
  1092  000EFC  3620               	rlcf	??_CANSetMask,f,c
  1093  000EFE  3621               	rlcf	??_CANSetMask+1,f,c
  1094  000F00  3622               	rlcf	??_CANSetMask+2,f,c
  1095  000F02  3623               	rlcf	??_CANSetMask+3,f,c
  1096  000F04  2EE8               	decfsz	wreg,f,c
  1097  000F06  D7F9               	goto	u3375
  1098  000F08  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1099  000F0C  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1100  000F10  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1101  000F14  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1102                           
  1103                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  1104  000F18  C025  FF19         	movff	CANSetMask@tamp,3865	;volatile
  1105  000F1C                     l3253:
  1106                           
  1107                           ;inc\CANlib.h: 652: }
  1108                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  1109  000F1C  0E02               	movlw	2
  1110  000F1E  1824               	xorwf	CANSetMask@numBuffer,w,c
  1111  000F20  A4D8               	btfss	status,2,c
  1112  000F22  D049               	goto	l3269
  1113  000F24  281F               	incf	CANSetMask@type,w,c
  1114  000F26  A4D8               	btfss	status,2,c
  1115  000F28  D046               	goto	l3269
  1116                           
  1117                           ;inc\CANlib.h: 655: {
  1118                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  1119  000F2A  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1120  000F2E  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1121  000F32  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1122  000F36  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1123  000F3A  0E04               	movlw	4
  1124  000F3C  D005               	goto	u3400
  1125  000F3E                     u3405:
  1126  000F3E  90D8               	bcf	status,0,c
  1127  000F40  3223               	rrcf	??_CANSetMask+3,f,c
  1128  000F42  3222               	rrcf	??_CANSetMask+2,f,c
  1129  000F44  3221               	rrcf	??_CANSetMask+1,f,c
  1130  000F46  3220               	rrcf	??_CANSetMask,f,c
  1131  000F48                     u3400:
  1132  000F48  2EE8               	decfsz	wreg,f,c
  1133  000F4A  D7F9               	goto	u3405
  1134  000F4C  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1135  000F50  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1136  000F54  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1137  000F58  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1138                           
  1139                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  1140  000F5C  5025               	movf	CANSetMask@tamp,w,c
  1141  000F5E  6E25               	movwf	CANSetMask@tamp,c
  1142  000F60  6A26               	clrf	CANSetMask@tamp+1,c
  1143  000F62  6A27               	clrf	CANSetMask@tamp+2,c
  1144  000F64  6A28               	clrf	CANSetMask@tamp+3,c
  1145                           
  1146                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  1147  000F66  C025  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1148                           
  1149                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  1150  000F6A  0E07               	movlw	7
  1151  000F6C  141B               	andwf	CANSetMask@mask,w,c
  1152  000F6E  6E25               	movwf	CANSetMask@tamp,c
  1153  000F70  0E00               	movlw	0
  1154  000F72  141C               	andwf	CANSetMask@mask+1,w,c
  1155  000F74  6E26               	movwf	CANSetMask@tamp+1,c
  1156  000F76  0E00               	movlw	0
  1157  000F78  141D               	andwf	CANSetMask@mask+2,w,c
  1158  000F7A  6E27               	movwf	CANSetMask@tamp+2,c
  1159  000F7C  0E00               	movlw	0
  1160  000F7E  141E               	andwf	CANSetMask@mask+3,w,c
  1161  000F80  6E28               	movwf	CANSetMask@tamp+3,c
  1162                           
  1163                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  1164  000F82  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1165  000F86  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1166  000F8A  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1167  000F8E  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1168  000F92  0E05               	movlw	5
  1169  000F94                     u3415:
  1170  000F94  90D8               	bcf	status,0,c
  1171  000F96  3620               	rlcf	??_CANSetMask,f,c
  1172  000F98  3621               	rlcf	??_CANSetMask+1,f,c
  1173  000F9A  3622               	rlcf	??_CANSetMask+2,f,c
  1174  000F9C  3623               	rlcf	??_CANSetMask+3,f,c
  1175  000F9E  2EE8               	decfsz	wreg,f,c
  1176  000FA0  D7F9               	goto	u3415
  1177  000FA2  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1178  000FA6  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1179  000FAA  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1180  000FAE  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1181                           
  1182                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  1183  000FB2  C025  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  1184  000FB6                     l3269:
  1185                           
  1186                           ;inc\CANlib.h: 663: }
  1187                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  1188  000FB6  0424               	decf	CANSetMask@numBuffer,w,c
  1189  000FB8  A4D8               	btfss	status,2,c
  1190  000FBA  D073               	goto	l3301
  1191  000FBC  0EF7               	movlw	247
  1192  000FBE  181F               	xorwf	CANSetMask@type,w,c
  1193  000FC0  A4D8               	btfss	status,2,c
  1194  000FC2  D06F               	goto	l3301
  1195                           
  1196                           ;inc\CANlib.h: 666: {
  1197                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  1198  000FC4  501B               	movf	CANSetMask@mask,w,c
  1199  000FC6  6E25               	movwf	CANSetMask@tamp,c
  1200  000FC8  6A26               	clrf	CANSetMask@tamp+1,c
  1201  000FCA  6A27               	clrf	CANSetMask@tamp+2,c
  1202  000FCC  6A28               	clrf	CANSetMask@tamp+3,c
  1203                           
  1204                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  1205  000FCE  C025  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  1206                           
  1207                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  1208  000FD2  0E00               	movlw	0
  1209  000FD4  141B               	andwf	CANSetMask@mask,w,c
  1210  000FD6  6E25               	movwf	CANSetMask@tamp,c
  1211  000FD8  0EFF               	movlw	255
  1212  000FDA  141C               	andwf	CANSetMask@mask+1,w,c
  1213  000FDC  6E26               	movwf	CANSetMask@tamp+1,c
  1214  000FDE  0E00               	movlw	0
  1215  000FE0  141D               	andwf	CANSetMask@mask+2,w,c
  1216  000FE2  6E27               	movwf	CANSetMask@tamp+2,c
  1217  000FE4  0E00               	movlw	0
  1218  000FE6  141E               	andwf	CANSetMask@mask+3,w,c
  1219  000FE8  6E28               	movwf	CANSetMask@tamp+3,c
  1220                           
  1221                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  1222  000FEA  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1223  000FEE  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1224  000FF2  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1225  000FF6  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1226  000FFA  C021  F020         	movff	??_CANSetMask+1,??_CANSetMask
  1227  000FFE  C022  F021         	movff	??_CANSetMask+2,??_CANSetMask+1
  1228  001002  C023  F022         	movff	??_CANSetMask+3,??_CANSetMask+2
  1229  001006  6A23               	clrf	??_CANSetMask+3,c
  1230  001008  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1231  00100C  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1232  001010  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1233  001014  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1234                           
  1235                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  1236  001018  C025  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  1237                           
  1238                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  1239  00101C  A01D               	btfss	CANSetMask@mask+2,0,c
  1240  00101E  D003               	goto	l396
  1241                           
  1242                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  1243  001020  010F               	movlb	15	; () banked
  1244  001022  8119               	bsf	25,0,b	;volatile
  1245  001024  D002               	goto	l397
  1246  001026                     l396:
  1247                           
  1248                           ;inc\CANlib.h: 676: else
  1249                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  1250  001026  010F               	movlb	15	; () banked
  1251  001028  9119               	bcf	25,0,b	;volatile
  1252  00102A                     l397:
  1253                           
  1254                           ; BSR set to: 15
  1255                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  1256  00102A  A21D               	btfss	CANSetMask@mask+2,1,c
  1257  00102C  D003               	goto	l398
  1258                           
  1259                           ; BSR set to: 15
  1260                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  1261  00102E  010F               	movlb	15	; () banked
  1262  001030  8319               	bsf	25,1,b	;volatile
  1263  001032  D002               	goto	l399
  1264  001034                     l398:
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;inc\CANlib.h: 681: else
  1268                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  1269  001034  010F               	movlb	15	; () banked
  1270  001036  9319               	bcf	25,1,b	;volatile
  1271  001038                     l399:
  1272                           
  1273                           ; BSR set to: 15
  1274                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  1275  001038  A41D               	btfss	CANSetMask@mask+2,2,c
  1276  00103A  D003               	goto	l400
  1277                           
  1278                           ; BSR set to: 15
  1279                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  1280  00103C  010F               	movlb	15	; () banked
  1281  00103E  8B19               	bsf	25,5,b	;volatile
  1282  001040  D002               	goto	l401
  1283  001042                     l400:
  1284                           
  1285                           ; BSR set to: 15
  1286                           ;inc\CANlib.h: 686: else
  1287                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  1288  001042  010F               	movlb	15	; () banked
  1289  001044  9B19               	bcf	25,5,b	;volatile
  1290  001046                     l401:
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  1294  001046  A61D               	btfss	CANSetMask@mask+2,3,c
  1295  001048  D003               	goto	l402
  1296                           
  1297                           ; BSR set to: 15
  1298                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  1299  00104A  010F               	movlb	15	; () banked
  1300  00104C  8D19               	bsf	25,6,b	;volatile
  1301  00104E  D002               	goto	l403
  1302  001050                     l402:
  1303                           
  1304                           ; BSR set to: 15
  1305                           ;inc\CANlib.h: 691: else
  1306                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  1307  001050  010F               	movlb	15	; () banked
  1308  001052  9D19               	bcf	25,6,b	;volatile
  1309  001054                     l403:
  1310                           
  1311                           ; BSR set to: 15
  1312                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  1313  001054  A81D               	btfss	CANSetMask@mask+2,4,c
  1314  001056  D003               	goto	l404
  1315                           
  1316                           ; BSR set to: 15
  1317                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  1318  001058  010F               	movlb	15	; () banked
  1319  00105A  8F19               	bsf	25,7,b	;volatile
  1320  00105C  D002               	goto	l3295
  1321  00105E                     l404:
  1322                           
  1323                           ; BSR set to: 15
  1324                           ;inc\CANlib.h: 696: else
  1325                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  1326  00105E  010F               	movlb	15	; () banked
  1327  001060  9F19               	bcf	25,7,b	;volatile
  1328  001062                     l3295:
  1329                           
  1330                           ; BSR set to: 15
  1331                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  1332  001062  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1333  001066  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1334  00106A  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1335  00106E  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1336  001072  0E16               	movlw	22
  1337  001074  D005               	goto	u3490
  1338  001076                     u3495:
  1339  001076  90D8               	bcf	status,0,c
  1340  001078  3223               	rrcf	??_CANSetMask+3,f,c
  1341  00107A  3222               	rrcf	??_CANSetMask+2,f,c
  1342  00107C  3221               	rrcf	??_CANSetMask+1,f,c
  1343  00107E  3220               	rrcf	??_CANSetMask,f,c
  1344  001080                     u3490:
  1345  001080  2EE8               	decfsz	wreg,f,c
  1346  001082  D7F9               	goto	u3495
  1347  001084  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1348  001088  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1349  00108C  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1350  001090  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1351                           
  1352                           ; BSR set to: 15
  1353                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  1354  001094  5025               	movf	CANSetMask@tamp,w,c
  1355  001096  6E25               	movwf	CANSetMask@tamp,c
  1356  001098  6A26               	clrf	CANSetMask@tamp+1,c
  1357  00109A  6A27               	clrf	CANSetMask@tamp+2,c
  1358  00109C  6A28               	clrf	CANSetMask@tamp+3,c
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  1362  00109E  C025  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1363  0010A2                     l3301:
  1364                           
  1365                           ;inc\CANlib.h: 702: }
  1366                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  1367  0010A2  0E02               	movlw	2
  1368  0010A4  1824               	xorwf	CANSetMask@numBuffer,w,c
  1369  0010A6  A4D8               	btfss	status,2,c
  1370  0010A8  0012               	return	
  1371  0010AA  0EF7               	movlw	247
  1372  0010AC  181F               	xorwf	CANSetMask@type,w,c
  1373  0010AE  A4D8               	btfss	status,2,c
  1374  0010B0  0012               	return	
  1375                           
  1376                           ;inc\CANlib.h: 705: {
  1377                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  1378  0010B2  501B               	movf	CANSetMask@mask,w,c
  1379  0010B4  6E25               	movwf	CANSetMask@tamp,c
  1380  0010B6  6A26               	clrf	CANSetMask@tamp+1,c
  1381  0010B8  6A27               	clrf	CANSetMask@tamp+2,c
  1382  0010BA  6A28               	clrf	CANSetMask@tamp+3,c
  1383                           
  1384                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  1385  0010BC  C025  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  1386                           
  1387                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  1388  0010C0  0E00               	movlw	0
  1389  0010C2  141B               	andwf	CANSetMask@mask,w,c
  1390  0010C4  6E25               	movwf	CANSetMask@tamp,c
  1391  0010C6  0EFF               	movlw	255
  1392  0010C8  141C               	andwf	CANSetMask@mask+1,w,c
  1393  0010CA  6E26               	movwf	CANSetMask@tamp+1,c
  1394  0010CC  0E00               	movlw	0
  1395  0010CE  141D               	andwf	CANSetMask@mask+2,w,c
  1396  0010D0  6E27               	movwf	CANSetMask@tamp+2,c
  1397  0010D2  0E00               	movlw	0
  1398  0010D4  141E               	andwf	CANSetMask@mask+3,w,c
  1399  0010D6  6E28               	movwf	CANSetMask@tamp+3,c
  1400                           
  1401                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  1402  0010D8  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1403  0010DC  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1404  0010E0  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1405  0010E4  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1406  0010E8  C021  F020         	movff	??_CANSetMask+1,??_CANSetMask
  1407  0010EC  C022  F021         	movff	??_CANSetMask+2,??_CANSetMask+1
  1408  0010F0  C023  F022         	movff	??_CANSetMask+3,??_CANSetMask+2
  1409  0010F4  6A23               	clrf	??_CANSetMask+3,c
  1410  0010F6  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1411  0010FA  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1412  0010FE  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1413  001102  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1414                           
  1415                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  1416  001106  C025  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  1417                           
  1418                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  1419  00110A  A01D               	btfss	CANSetMask@mask+2,0,c
  1420  00110C  D003               	goto	l407
  1421                           
  1422                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  1423  00110E  010F               	movlb	15	; () banked
  1424  001110  811D               	bsf	29,0,b	;volatile
  1425  001112  D002               	goto	l408
  1426  001114                     l407:
  1427                           
  1428                           ;inc\CANlib.h: 715: else
  1429                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  1430  001114  010F               	movlb	15	; () banked
  1431  001116  911D               	bcf	29,0,b	;volatile
  1432  001118                     l408:
  1433                           
  1434                           ; BSR set to: 15
  1435                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  1436  001118  A21D               	btfss	CANSetMask@mask+2,1,c
  1437  00111A  D003               	goto	l409
  1438                           
  1439                           ; BSR set to: 15
  1440                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  1441  00111C  010F               	movlb	15	; () banked
  1442  00111E  831D               	bsf	29,1,b	;volatile
  1443  001120  D002               	goto	l410
  1444  001122                     l409:
  1445                           
  1446                           ; BSR set to: 15
  1447                           ;inc\CANlib.h: 720: else
  1448                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  1449  001122  010F               	movlb	15	; () banked
  1450  001124  931D               	bcf	29,1,b	;volatile
  1451  001126                     l410:
  1452                           
  1453                           ; BSR set to: 15
  1454                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  1455  001126  A41D               	btfss	CANSetMask@mask+2,2,c
  1456  001128  D003               	goto	l411
  1457                           
  1458                           ; BSR set to: 15
  1459                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  1460  00112A  010F               	movlb	15	; () banked
  1461  00112C  8B1D               	bsf	29,5,b	;volatile
  1462  00112E  D002               	goto	l412
  1463  001130                     l411:
  1464                           
  1465                           ; BSR set to: 15
  1466                           ;inc\CANlib.h: 725: else
  1467                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  1468  001130  010F               	movlb	15	; () banked
  1469  001132  9B1D               	bcf	29,5,b	;volatile
  1470  001134                     l412:
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  1474  001134  A61D               	btfss	CANSetMask@mask+2,3,c
  1475  001136  D003               	goto	l413
  1476                           
  1477                           ; BSR set to: 15
  1478                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  1479  001138  010F               	movlb	15	; () banked
  1480  00113A  8D1D               	bsf	29,6,b	;volatile
  1481  00113C  D002               	goto	l414
  1482  00113E                     l413:
  1483                           
  1484                           ; BSR set to: 15
  1485                           ;inc\CANlib.h: 730: else
  1486                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  1487  00113E  010F               	movlb	15	; () banked
  1488  001140  9D1D               	bcf	29,6,b	;volatile
  1489  001142                     l414:
  1490                           
  1491                           ; BSR set to: 15
  1492                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  1493  001142  A81D               	btfss	CANSetMask@mask+2,4,c
  1494  001144  D003               	goto	l415
  1495                           
  1496                           ; BSR set to: 15
  1497                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  1498  001146  010F               	movlb	15	; () banked
  1499  001148  8F1D               	bsf	29,7,b	;volatile
  1500  00114A  D002               	goto	l3327
  1501  00114C                     l415:
  1502                           
  1503                           ; BSR set to: 15
  1504                           ;inc\CANlib.h: 735: else
  1505                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  1506  00114C  010F               	movlb	15	; () banked
  1507  00114E  9F1D               	bcf	29,7,b	;volatile
  1508  001150                     l3327:
  1509                           
  1510                           ; BSR set to: 15
  1511                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  1512  001150  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1513  001154  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1514  001158  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1515  00115C  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1516  001160  0E16               	movlw	22
  1517  001162  D005               	goto	u3570
  1518  001164                     u3575:
  1519  001164  90D8               	bcf	status,0,c
  1520  001166  3223               	rrcf	??_CANSetMask+3,f,c
  1521  001168  3222               	rrcf	??_CANSetMask+2,f,c
  1522  00116A  3221               	rrcf	??_CANSetMask+1,f,c
  1523  00116C  3220               	rrcf	??_CANSetMask,f,c
  1524  00116E                     u3570:
  1525  00116E  2EE8               	decfsz	wreg,f,c
  1526  001170  D7F9               	goto	u3575
  1527  001172  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1528  001176  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1529  00117A  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1530  00117E  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  1534  001182  5025               	movf	CANSetMask@tamp,w,c
  1535  001184  6E25               	movwf	CANSetMask@tamp,c
  1536  001186  6A26               	clrf	CANSetMask@tamp+1,c
  1537  001188  6A27               	clrf	CANSetMask@tamp+2,c
  1538  00118A  6A28               	clrf	CANSetMask@tamp+3,c
  1539                           
  1540                           ; BSR set to: 15
  1541                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  1542  00118C  C025  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1543  001190  0012               	return	
  1544  001192                     __end_of_CANSetMask:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           status	equ	0xFD8
  1553                           
  1554 ;; *************** function _CANSetFilter *****************
  1555 ;; Defined at:
  1556 ;;		line 748 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  numBuffer       1    wreg     enum E15966
  1559 ;;  filter          4   26[COMRAM] unsigned long 
  1560 ;;  type            1   30[COMRAM] enum E15929
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  numBuffer       1   35[COMRAM] enum E15966
  1563 ;;  tamp            4   36[COMRAM] unsigned long 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1573 ;;      Params:         5       0       0       0
  1574 ;;      Locals:         5       0       0       0
  1575 ;;      Temps:          4       0       0       0
  1576 ;;      Totals:        14       0       0       0
  1577 ;;Total ram usage:       14 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    2
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_CANInitialize
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text4
  1588  00001A                     __ptext4:
  1589                           	opt stack 0
  1590  00001A                     _CANSetFilter:
  1591                           	opt stack 26
  1592                           
  1593                           ;incstack = 0
  1594                           ;CANSetFilter@numBuffer stored from wreg
  1595  00001A  6E24               	movwf	CANSetFilter@numBuffer,c
  1596                           
  1597                           ;inc\CANlib.h: 750: unsigned long tamp;
  1598                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  1599  00001C  5024               	movf	CANSetFilter@numBuffer,w,c
  1600  00001E  A4D8               	btfss	status,2,c
  1601  000020  D04B               	goto	l3351
  1602  000022  281F               	incf	CANSetFilter@type,w,c
  1603  000024  A4D8               	btfss	status,2,c
  1604  000026  D048               	goto	l3351
  1605                           
  1606                           ;inc\CANlib.h: 753: {
  1607                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  1608  000028  010F               	movlb	15	; () banked
  1609  00002A  9701               	bcf	1,3,b	;volatile
  1610                           
  1611                           ; BSR set to: 15
  1612                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  1613  00002C  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1614  000030  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1615  000034  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1616  000038  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1617  00003C  0E04               	movlw	4
  1618  00003E  D005               	goto	u3600
  1619  000040                     u3605:
  1620  000040  90D8               	bcf	status,0,c
  1621  000042  3223               	rrcf	??_CANSetFilter+3,f,c
  1622  000044  3222               	rrcf	??_CANSetFilter+2,f,c
  1623  000046  3221               	rrcf	??_CANSetFilter+1,f,c
  1624  000048  3220               	rrcf	??_CANSetFilter,f,c
  1625  00004A                     u3600:
  1626  00004A  2EE8               	decfsz	wreg,f,c
  1627  00004C  D7F9               	goto	u3605
  1628  00004E  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1629  000052  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1630  000056  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1631  00005A  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1632                           
  1633                           ; BSR set to: 15
  1634                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  1635  00005E  5025               	movf	CANSetFilter@tamp,w,c
  1636  000060  6E25               	movwf	CANSetFilter@tamp,c
  1637  000062  6A26               	clrf	CANSetFilter@tamp+1,c
  1638  000064  6A27               	clrf	CANSetFilter@tamp+2,c
  1639  000066  6A28               	clrf	CANSetFilter@tamp+3,c
  1640                           
  1641                           ; BSR set to: 15
  1642                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  1643  000068  C025  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  1644                           
  1645                           ; BSR set to: 15
  1646                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  1647  00006C  0E07               	movlw	7
  1648  00006E  141B               	andwf	CANSetFilter@filter,w,c
  1649  000070  6E25               	movwf	CANSetFilter@tamp,c
  1650  000072  0E00               	movlw	0
  1651  000074  141C               	andwf	CANSetFilter@filter+1,w,c
  1652  000076  6E26               	movwf	CANSetFilter@tamp+1,c
  1653  000078  0E00               	movlw	0
  1654  00007A  141D               	andwf	CANSetFilter@filter+2,w,c
  1655  00007C  6E27               	movwf	CANSetFilter@tamp+2,c
  1656  00007E  0E00               	movlw	0
  1657  000080  141E               	andwf	CANSetFilter@filter+3,w,c
  1658  000082  6E28               	movwf	CANSetFilter@tamp+3,c
  1659                           
  1660                           ; BSR set to: 15
  1661                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  1662  000084  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1663  000088  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1664  00008C  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1665  000090  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1666  000094  0E05               	movlw	5
  1667  000096                     u3615:
  1668  000096  90D8               	bcf	status,0,c
  1669  000098  3620               	rlcf	??_CANSetFilter,f,c
  1670  00009A  3621               	rlcf	??_CANSetFilter+1,f,c
  1671  00009C  3622               	rlcf	??_CANSetFilter+2,f,c
  1672  00009E  3623               	rlcf	??_CANSetFilter+3,f,c
  1673  0000A0  2EE8               	decfsz	wreg,f,c
  1674  0000A2  D7F9               	goto	u3615
  1675  0000A4  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1676  0000A8  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1677  0000AC  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1678  0000B0  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1679                           
  1680                           ; BSR set to: 15
  1681                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  1682  0000B4  C025  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  1683  0000B8                     l3351:
  1684                           
  1685                           ;inc\CANlib.h: 763: }
  1686                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  1687  0000B8  0424               	decf	CANSetFilter@numBuffer,w,c
  1688  0000BA  A4D8               	btfss	status,2,c
  1689  0000BC  D04B               	goto	l3369
  1690  0000BE  281F               	incf	CANSetFilter@type,w,c
  1691  0000C0  A4D8               	btfss	status,2,c
  1692  0000C2  D048               	goto	l3369
  1693                           
  1694                           ;inc\CANlib.h: 766: {
  1695                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  1696  0000C4  010F               	movlb	15	; () banked
  1697  0000C6  9705               	bcf	5,3,b	;volatile
  1698                           
  1699                           ; BSR set to: 15
  1700                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  1701  0000C8  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1702  0000CC  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1703  0000D0  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1704  0000D4  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1705  0000D8  0E04               	movlw	4
  1706  0000DA  D005               	goto	u3640
  1707  0000DC                     u3645:
  1708  0000DC  90D8               	bcf	status,0,c
  1709  0000DE  3223               	rrcf	??_CANSetFilter+3,f,c
  1710  0000E0  3222               	rrcf	??_CANSetFilter+2,f,c
  1711  0000E2  3221               	rrcf	??_CANSetFilter+1,f,c
  1712  0000E4  3220               	rrcf	??_CANSetFilter,f,c
  1713  0000E6                     u3640:
  1714  0000E6  2EE8               	decfsz	wreg,f,c
  1715  0000E8  D7F9               	goto	u3645
  1716  0000EA  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1717  0000EE  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1718  0000F2  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1719  0000F6  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1720                           
  1721                           ; BSR set to: 15
  1722                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  1723  0000FA  5025               	movf	CANSetFilter@tamp,w,c
  1724  0000FC  6E25               	movwf	CANSetFilter@tamp,c
  1725  0000FE  6A26               	clrf	CANSetFilter@tamp+1,c
  1726  000100  6A27               	clrf	CANSetFilter@tamp+2,c
  1727  000102  6A28               	clrf	CANSetFilter@tamp+3,c
  1728                           
  1729                           ; BSR set to: 15
  1730                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  1731  000104  C025  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  1732                           
  1733                           ; BSR set to: 15
  1734                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  1735  000108  0E07               	movlw	7
  1736  00010A  141B               	andwf	CANSetFilter@filter,w,c
  1737  00010C  6E25               	movwf	CANSetFilter@tamp,c
  1738  00010E  0E00               	movlw	0
  1739  000110  141C               	andwf	CANSetFilter@filter+1,w,c
  1740  000112  6E26               	movwf	CANSetFilter@tamp+1,c
  1741  000114  0E00               	movlw	0
  1742  000116  141D               	andwf	CANSetFilter@filter+2,w,c
  1743  000118  6E27               	movwf	CANSetFilter@tamp+2,c
  1744  00011A  0E00               	movlw	0
  1745  00011C  141E               	andwf	CANSetFilter@filter+3,w,c
  1746  00011E  6E28               	movwf	CANSetFilter@tamp+3,c
  1747                           
  1748                           ; BSR set to: 15
  1749                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  1750  000120  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1751  000124  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1752  000128  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1753  00012C  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1754  000130  0E05               	movlw	5
  1755  000132                     u3655:
  1756  000132  90D8               	bcf	status,0,c
  1757  000134  3620               	rlcf	??_CANSetFilter,f,c
  1758  000136  3621               	rlcf	??_CANSetFilter+1,f,c
  1759  000138  3622               	rlcf	??_CANSetFilter+2,f,c
  1760  00013A  3623               	rlcf	??_CANSetFilter+3,f,c
  1761  00013C  2EE8               	decfsz	wreg,f,c
  1762  00013E  D7F9               	goto	u3655
  1763  000140  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1764  000144  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1765  000148  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1766  00014C  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1767                           
  1768                           ; BSR set to: 15
  1769                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  1770  000150  C025  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  1771  000154                     l3369:
  1772                           
  1773                           ;inc\CANlib.h: 776: }
  1774                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  1775  000154  0E02               	movlw	2
  1776  000156  1824               	xorwf	CANSetFilter@numBuffer,w,c
  1777  000158  A4D8               	btfss	status,2,c
  1778  00015A  D04B               	goto	l3387
  1779  00015C  281F               	incf	CANSetFilter@type,w,c
  1780  00015E  A4D8               	btfss	status,2,c
  1781  000160  D048               	goto	l3387
  1782                           
  1783                           ;inc\CANlib.h: 779: {
  1784                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  1785  000162  010F               	movlb	15	; () banked
  1786  000164  9709               	bcf	9,3,b	;volatile
  1787                           
  1788                           ; BSR set to: 15
  1789                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  1790  000166  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1791  00016A  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1792  00016E  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1793  000172  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1794  000176  0E04               	movlw	4
  1795  000178  D005               	goto	u3680
  1796  00017A                     u3685:
  1797  00017A  90D8               	bcf	status,0,c
  1798  00017C  3223               	rrcf	??_CANSetFilter+3,f,c
  1799  00017E  3222               	rrcf	??_CANSetFilter+2,f,c
  1800  000180  3221               	rrcf	??_CANSetFilter+1,f,c
  1801  000182  3220               	rrcf	??_CANSetFilter,f,c
  1802  000184                     u3680:
  1803  000184  2EE8               	decfsz	wreg,f,c
  1804  000186  D7F9               	goto	u3685
  1805  000188  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1806  00018C  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1807  000190  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1808  000194  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1809                           
  1810                           ; BSR set to: 15
  1811                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  1812  000198  5025               	movf	CANSetFilter@tamp,w,c
  1813  00019A  6E25               	movwf	CANSetFilter@tamp,c
  1814  00019C  6A26               	clrf	CANSetFilter@tamp+1,c
  1815  00019E  6A27               	clrf	CANSetFilter@tamp+2,c
  1816  0001A0  6A28               	clrf	CANSetFilter@tamp+3,c
  1817                           
  1818                           ; BSR set to: 15
  1819                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  1820  0001A2  C025  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  1824  0001A6  0E07               	movlw	7
  1825  0001A8  141B               	andwf	CANSetFilter@filter,w,c
  1826  0001AA  6E25               	movwf	CANSetFilter@tamp,c
  1827  0001AC  0E00               	movlw	0
  1828  0001AE  141C               	andwf	CANSetFilter@filter+1,w,c
  1829  0001B0  6E26               	movwf	CANSetFilter@tamp+1,c
  1830  0001B2  0E00               	movlw	0
  1831  0001B4  141D               	andwf	CANSetFilter@filter+2,w,c
  1832  0001B6  6E27               	movwf	CANSetFilter@tamp+2,c
  1833  0001B8  0E00               	movlw	0
  1834  0001BA  141E               	andwf	CANSetFilter@filter+3,w,c
  1835  0001BC  6E28               	movwf	CANSetFilter@tamp+3,c
  1836                           
  1837                           ; BSR set to: 15
  1838                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  1839  0001BE  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1840  0001C2  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1841  0001C6  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1842  0001CA  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1843  0001CE  0E05               	movlw	5
  1844  0001D0                     u3695:
  1845  0001D0  90D8               	bcf	status,0,c
  1846  0001D2  3620               	rlcf	??_CANSetFilter,f,c
  1847  0001D4  3621               	rlcf	??_CANSetFilter+1,f,c
  1848  0001D6  3622               	rlcf	??_CANSetFilter+2,f,c
  1849  0001D8  3623               	rlcf	??_CANSetFilter+3,f,c
  1850  0001DA  2EE8               	decfsz	wreg,f,c
  1851  0001DC  D7F9               	goto	u3695
  1852  0001DE  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1853  0001E2  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1854  0001E6  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1855  0001EA  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1856                           
  1857                           ; BSR set to: 15
  1858                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  1859  0001EE  C025  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  1860  0001F2                     l3387:
  1861                           
  1862                           ;inc\CANlib.h: 789: }
  1863                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  1864  0001F2  0E03               	movlw	3
  1865  0001F4  1824               	xorwf	CANSetFilter@numBuffer,w,c
  1866  0001F6  A4D8               	btfss	status,2,c
  1867  0001F8  D04B               	goto	l3405
  1868  0001FA  281F               	incf	CANSetFilter@type,w,c
  1869  0001FC  A4D8               	btfss	status,2,c
  1870  0001FE  D048               	goto	l3405
  1871                           
  1872                           ;inc\CANlib.h: 792: {
  1873                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  1874  000200  010F               	movlb	15	; () banked
  1875  000202  970D               	bcf	13,3,b	;volatile
  1876                           
  1877                           ; BSR set to: 15
  1878                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  1879  000204  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1880  000208  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1881  00020C  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1882  000210  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1883  000214  0E04               	movlw	4
  1884  000216  D005               	goto	u3720
  1885  000218                     u3725:
  1886  000218  90D8               	bcf	status,0,c
  1887  00021A  3223               	rrcf	??_CANSetFilter+3,f,c
  1888  00021C  3222               	rrcf	??_CANSetFilter+2,f,c
  1889  00021E  3221               	rrcf	??_CANSetFilter+1,f,c
  1890  000220  3220               	rrcf	??_CANSetFilter,f,c
  1891  000222                     u3720:
  1892  000222  2EE8               	decfsz	wreg,f,c
  1893  000224  D7F9               	goto	u3725
  1894  000226  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1895  00022A  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1896  00022E  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1897  000232  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  1901  000236  5025               	movf	CANSetFilter@tamp,w,c
  1902  000238  6E25               	movwf	CANSetFilter@tamp,c
  1903  00023A  6A26               	clrf	CANSetFilter@tamp+1,c
  1904  00023C  6A27               	clrf	CANSetFilter@tamp+2,c
  1905  00023E  6A28               	clrf	CANSetFilter@tamp+3,c
  1906                           
  1907                           ; BSR set to: 15
  1908                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  1909  000240  C025  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  1910                           
  1911                           ; BSR set to: 15
  1912                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  1913  000244  0E07               	movlw	7
  1914  000246  141B               	andwf	CANSetFilter@filter,w,c
  1915  000248  6E25               	movwf	CANSetFilter@tamp,c
  1916  00024A  0E00               	movlw	0
  1917  00024C  141C               	andwf	CANSetFilter@filter+1,w,c
  1918  00024E  6E26               	movwf	CANSetFilter@tamp+1,c
  1919  000250  0E00               	movlw	0
  1920  000252  141D               	andwf	CANSetFilter@filter+2,w,c
  1921  000254  6E27               	movwf	CANSetFilter@tamp+2,c
  1922  000256  0E00               	movlw	0
  1923  000258  141E               	andwf	CANSetFilter@filter+3,w,c
  1924  00025A  6E28               	movwf	CANSetFilter@tamp+3,c
  1925                           
  1926                           ; BSR set to: 15
  1927                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  1928  00025C  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1929  000260  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1930  000264  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1931  000268  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1932  00026C  0E05               	movlw	5
  1933  00026E                     u3735:
  1934  00026E  90D8               	bcf	status,0,c
  1935  000270  3620               	rlcf	??_CANSetFilter,f,c
  1936  000272  3621               	rlcf	??_CANSetFilter+1,f,c
  1937  000274  3622               	rlcf	??_CANSetFilter+2,f,c
  1938  000276  3623               	rlcf	??_CANSetFilter+3,f,c
  1939  000278  2EE8               	decfsz	wreg,f,c
  1940  00027A  D7F9               	goto	u3735
  1941  00027C  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1942  000280  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1943  000284  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1944  000288  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1945                           
  1946                           ; BSR set to: 15
  1947                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  1948  00028C  C025  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  1949  000290                     l3405:
  1950                           
  1951                           ;inc\CANlib.h: 802: }
  1952                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  1953  000290  0E04               	movlw	4
  1954  000292  1824               	xorwf	CANSetFilter@numBuffer,w,c
  1955  000294  A4D8               	btfss	status,2,c
  1956  000296  D04B               	goto	l3423
  1957  000298  281F               	incf	CANSetFilter@type,w,c
  1958  00029A  A4D8               	btfss	status,2,c
  1959  00029C  D048               	goto	l3423
  1960                           
  1961                           ;inc\CANlib.h: 805: {
  1962                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  1963  00029E  010F               	movlb	15	; () banked
  1964  0002A0  9711               	bcf	17,3,b	;volatile
  1965                           
  1966                           ; BSR set to: 15
  1967                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  1968  0002A2  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1969  0002A6  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1970  0002AA  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1971  0002AE  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1972  0002B2  0E04               	movlw	4
  1973  0002B4  D005               	goto	u3760
  1974  0002B6                     u3765:
  1975  0002B6  90D8               	bcf	status,0,c
  1976  0002B8  3223               	rrcf	??_CANSetFilter+3,f,c
  1977  0002BA  3222               	rrcf	??_CANSetFilter+2,f,c
  1978  0002BC  3221               	rrcf	??_CANSetFilter+1,f,c
  1979  0002BE  3220               	rrcf	??_CANSetFilter,f,c
  1980  0002C0                     u3760:
  1981  0002C0  2EE8               	decfsz	wreg,f,c
  1982  0002C2  D7F9               	goto	u3765
  1983  0002C4  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1984  0002C8  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1985  0002CC  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1986  0002D0  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1987                           
  1988                           ; BSR set to: 15
  1989                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  1990  0002D4  5025               	movf	CANSetFilter@tamp,w,c
  1991  0002D6  6E25               	movwf	CANSetFilter@tamp,c
  1992  0002D8  6A26               	clrf	CANSetFilter@tamp+1,c
  1993  0002DA  6A27               	clrf	CANSetFilter@tamp+2,c
  1994  0002DC  6A28               	clrf	CANSetFilter@tamp+3,c
  1995                           
  1996                           ; BSR set to: 15
  1997                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  1998  0002DE  C025  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  1999                           
  2000                           ; BSR set to: 15
  2001                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  2002  0002E2  0E07               	movlw	7
  2003  0002E4  141B               	andwf	CANSetFilter@filter,w,c
  2004  0002E6  6E25               	movwf	CANSetFilter@tamp,c
  2005  0002E8  0E00               	movlw	0
  2006  0002EA  141C               	andwf	CANSetFilter@filter+1,w,c
  2007  0002EC  6E26               	movwf	CANSetFilter@tamp+1,c
  2008  0002EE  0E00               	movlw	0
  2009  0002F0  141D               	andwf	CANSetFilter@filter+2,w,c
  2010  0002F2  6E27               	movwf	CANSetFilter@tamp+2,c
  2011  0002F4  0E00               	movlw	0
  2012  0002F6  141E               	andwf	CANSetFilter@filter+3,w,c
  2013  0002F8  6E28               	movwf	CANSetFilter@tamp+3,c
  2014                           
  2015                           ; BSR set to: 15
  2016                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  2017  0002FA  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2018  0002FE  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2019  000302  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2020  000306  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2021  00030A  0E05               	movlw	5
  2022  00030C                     u3775:
  2023  00030C  90D8               	bcf	status,0,c
  2024  00030E  3620               	rlcf	??_CANSetFilter,f,c
  2025  000310  3621               	rlcf	??_CANSetFilter+1,f,c
  2026  000312  3622               	rlcf	??_CANSetFilter+2,f,c
  2027  000314  3623               	rlcf	??_CANSetFilter+3,f,c
  2028  000316  2EE8               	decfsz	wreg,f,c
  2029  000318  D7F9               	goto	u3775
  2030  00031A  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2031  00031E  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2032  000322  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2033  000326  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2034                           
  2035                           ; BSR set to: 15
  2036                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  2037  00032A  C025  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  2038  00032E                     l3423:
  2039                           
  2040                           ;inc\CANlib.h: 815: }
  2041                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  2042  00032E  0E05               	movlw	5
  2043  000330  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2044  000332  A4D8               	btfss	status,2,c
  2045  000334  D04B               	goto	l3441
  2046  000336  281F               	incf	CANSetFilter@type,w,c
  2047  000338  A4D8               	btfss	status,2,c
  2048  00033A  D048               	goto	l3441
  2049                           
  2050                           ;inc\CANlib.h: 818: {
  2051                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  2052  00033C  010F               	movlb	15	; () banked
  2053  00033E  9715               	bcf	21,3,b	;volatile
  2054                           
  2055                           ; BSR set to: 15
  2056                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  2057  000340  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2058  000344  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2059  000348  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2060  00034C  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2061  000350  0E04               	movlw	4
  2062  000352  D005               	goto	u3800
  2063  000354                     u3805:
  2064  000354  90D8               	bcf	status,0,c
  2065  000356  3223               	rrcf	??_CANSetFilter+3,f,c
  2066  000358  3222               	rrcf	??_CANSetFilter+2,f,c
  2067  00035A  3221               	rrcf	??_CANSetFilter+1,f,c
  2068  00035C  3220               	rrcf	??_CANSetFilter,f,c
  2069  00035E                     u3800:
  2070  00035E  2EE8               	decfsz	wreg,f,c
  2071  000360  D7F9               	goto	u3805
  2072  000362  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2073  000366  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2074  00036A  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2075  00036E  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2076                           
  2077                           ; BSR set to: 15
  2078                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  2079  000372  5025               	movf	CANSetFilter@tamp,w,c
  2080  000374  6E25               	movwf	CANSetFilter@tamp,c
  2081  000376  6A26               	clrf	CANSetFilter@tamp+1,c
  2082  000378  6A27               	clrf	CANSetFilter@tamp+2,c
  2083  00037A  6A28               	clrf	CANSetFilter@tamp+3,c
  2084                           
  2085                           ; BSR set to: 15
  2086                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  2087  00037C  C025  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  2088                           
  2089                           ; BSR set to: 15
  2090                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  2091  000380  0E07               	movlw	7
  2092  000382  141B               	andwf	CANSetFilter@filter,w,c
  2093  000384  6E25               	movwf	CANSetFilter@tamp,c
  2094  000386  0E00               	movlw	0
  2095  000388  141C               	andwf	CANSetFilter@filter+1,w,c
  2096  00038A  6E26               	movwf	CANSetFilter@tamp+1,c
  2097  00038C  0E00               	movlw	0
  2098  00038E  141D               	andwf	CANSetFilter@filter+2,w,c
  2099  000390  6E27               	movwf	CANSetFilter@tamp+2,c
  2100  000392  0E00               	movlw	0
  2101  000394  141E               	andwf	CANSetFilter@filter+3,w,c
  2102  000396  6E28               	movwf	CANSetFilter@tamp+3,c
  2103                           
  2104                           ; BSR set to: 15
  2105                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  2106  000398  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2107  00039C  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2108  0003A0  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2109  0003A4  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2110  0003A8  0E05               	movlw	5
  2111  0003AA                     u3815:
  2112  0003AA  90D8               	bcf	status,0,c
  2113  0003AC  3620               	rlcf	??_CANSetFilter,f,c
  2114  0003AE  3621               	rlcf	??_CANSetFilter+1,f,c
  2115  0003B0  3622               	rlcf	??_CANSetFilter+2,f,c
  2116  0003B2  3623               	rlcf	??_CANSetFilter+3,f,c
  2117  0003B4  2EE8               	decfsz	wreg,f,c
  2118  0003B6  D7F9               	goto	u3815
  2119  0003B8  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2120  0003BC  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2121  0003C0  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2122  0003C4  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2123                           
  2124                           ; BSR set to: 15
  2125                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  2126  0003C8  C025  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  2127  0003CC                     l3441:
  2128                           
  2129                           ;inc\CANlib.h: 828: }
  2130                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  2131  0003CC  5024               	movf	CANSetFilter@numBuffer,w,c
  2132  0003CE  A4D8               	btfss	status,2,c
  2133  0003D0  D075               	goto	l3475
  2134  0003D2  0EF7               	movlw	247
  2135  0003D4  181F               	xorwf	CANSetFilter@type,w,c
  2136  0003D6  A4D8               	btfss	status,2,c
  2137  0003D8  D071               	goto	l3475
  2138                           
  2139                           ;inc\CANlib.h: 832: {
  2140                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  2141  0003DA  010F               	movlb	15	; () banked
  2142  0003DC  8701               	bsf	1,3,b	;volatile
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  2146  0003DE  501B               	movf	CANSetFilter@filter,w,c
  2147  0003E0  6E25               	movwf	CANSetFilter@tamp,c
  2148  0003E2  6A26               	clrf	CANSetFilter@tamp+1,c
  2149  0003E4  6A27               	clrf	CANSetFilter@tamp+2,c
  2150  0003E6  6A28               	clrf	CANSetFilter@tamp+3,c
  2151                           
  2152                           ; BSR set to: 15
  2153                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  2154  0003E8  C025  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  2155                           
  2156                           ; BSR set to: 15
  2157                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  2158  0003EC  0E00               	movlw	0
  2159  0003EE  141B               	andwf	CANSetFilter@filter,w,c
  2160  0003F0  6E25               	movwf	CANSetFilter@tamp,c
  2161  0003F2  0EFF               	movlw	255
  2162  0003F4  141C               	andwf	CANSetFilter@filter+1,w,c
  2163  0003F6  6E26               	movwf	CANSetFilter@tamp+1,c
  2164  0003F8  0E00               	movlw	0
  2165  0003FA  141D               	andwf	CANSetFilter@filter+2,w,c
  2166  0003FC  6E27               	movwf	CANSetFilter@tamp+2,c
  2167  0003FE  0E00               	movlw	0
  2168  000400  141E               	andwf	CANSetFilter@filter+3,w,c
  2169  000402  6E28               	movwf	CANSetFilter@tamp+3,c
  2170                           
  2171                           ; BSR set to: 15
  2172                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  2173  000404  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2174  000408  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2175  00040C  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2176  000410  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2177  000414  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2178  000418  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2179  00041C  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2180  000420  6A23               	clrf	??_CANSetFilter+3,c
  2181  000422  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2182  000426  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2183  00042A  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2184  00042E  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2185                           
  2186                           ; BSR set to: 15
  2187                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  2188  000432  C025  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  2189                           
  2190                           ; BSR set to: 15
  2191                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  2192  000436  A01D               	btfss	CANSetFilter@filter+2,0,c
  2193  000438  D003               	goto	l427
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  2197  00043A  010F               	movlb	15	; () banked
  2198  00043C  8101               	bsf	1,0,b	;volatile
  2199  00043E  D002               	goto	l428
  2200  000440                     l427:
  2201                           
  2202                           ; BSR set to: 15
  2203                           ;inc\CANlib.h: 844: else
  2204                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  2205  000440  010F               	movlb	15	; () banked
  2206  000442  9101               	bcf	1,0,b	;volatile
  2207  000444                     l428:
  2208                           
  2209                           ; BSR set to: 15
  2210                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  2211  000444  A21D               	btfss	CANSetFilter@filter+2,1,c
  2212  000446  D003               	goto	l429
  2213                           
  2214                           ; BSR set to: 15
  2215                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  2216  000448  010F               	movlb	15	; () banked
  2217  00044A  8301               	bsf	1,1,b	;volatile
  2218  00044C  D002               	goto	l430
  2219  00044E                     l429:
  2220                           
  2221                           ; BSR set to: 15
  2222                           ;inc\CANlib.h: 849: else
  2223                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  2224  00044E  010F               	movlb	15	; () banked
  2225  000450  9301               	bcf	1,1,b	;volatile
  2226  000452                     l430:
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  2230  000452  A41D               	btfss	CANSetFilter@filter+2,2,c
  2231  000454  D003               	goto	l431
  2232                           
  2233                           ; BSR set to: 15
  2234                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  2235  000456  010F               	movlb	15	; () banked
  2236  000458  8B01               	bsf	1,5,b	;volatile
  2237  00045A  D002               	goto	l432
  2238  00045C                     l431:
  2239                           
  2240                           ; BSR set to: 15
  2241                           ;inc\CANlib.h: 854: else
  2242                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  2243  00045C  010F               	movlb	15	; () banked
  2244  00045E  9B01               	bcf	1,5,b	;volatile
  2245  000460                     l432:
  2246                           
  2247                           ; BSR set to: 15
  2248                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  2249  000460  A61D               	btfss	CANSetFilter@filter+2,3,c
  2250  000462  D003               	goto	l433
  2251                           
  2252                           ; BSR set to: 15
  2253                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  2254  000464  010F               	movlb	15	; () banked
  2255  000466  8D01               	bsf	1,6,b	;volatile
  2256  000468  D002               	goto	l434
  2257  00046A                     l433:
  2258                           
  2259                           ; BSR set to: 15
  2260                           ;inc\CANlib.h: 859: else
  2261                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  2262  00046A  010F               	movlb	15	; () banked
  2263  00046C  9D01               	bcf	1,6,b	;volatile
  2264  00046E                     l434:
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  2268  00046E  A81D               	btfss	CANSetFilter@filter+2,4,c
  2269  000470  D003               	goto	l435
  2270                           
  2271                           ; BSR set to: 15
  2272                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  2273  000472  010F               	movlb	15	; () banked
  2274  000474  8F01               	bsf	1,7,b	;volatile
  2275  000476  D002               	goto	l3469
  2276  000478                     l435:
  2277                           
  2278                           ; BSR set to: 15
  2279                           ;inc\CANlib.h: 864: else
  2280                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  2281  000478  010F               	movlb	15	; () banked
  2282  00047A  9F01               	bcf	1,7,b	;volatile
  2283  00047C                     l3469:
  2284                           
  2285                           ; BSR set to: 15
  2286                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  2287  00047C  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2288  000480  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2289  000484  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2290  000488  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2291  00048C  0E16               	movlw	22
  2292  00048E  D005               	goto	u3890
  2293  000490                     u3895:
  2294  000490  90D8               	bcf	status,0,c
  2295  000492  3223               	rrcf	??_CANSetFilter+3,f,c
  2296  000494  3222               	rrcf	??_CANSetFilter+2,f,c
  2297  000496  3221               	rrcf	??_CANSetFilter+1,f,c
  2298  000498  3220               	rrcf	??_CANSetFilter,f,c
  2299  00049A                     u3890:
  2300  00049A  2EE8               	decfsz	wreg,f,c
  2301  00049C  D7F9               	goto	u3895
  2302  00049E  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2303  0004A2  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2304  0004A6  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2305  0004AA  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2306                           
  2307                           ; BSR set to: 15
  2308                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  2309  0004AE  5025               	movf	CANSetFilter@tamp,w,c
  2310  0004B0  6E25               	movwf	CANSetFilter@tamp,c
  2311  0004B2  6A26               	clrf	CANSetFilter@tamp+1,c
  2312  0004B4  6A27               	clrf	CANSetFilter@tamp+2,c
  2313  0004B6  6A28               	clrf	CANSetFilter@tamp+3,c
  2314                           
  2315                           ; BSR set to: 15
  2316                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  2317  0004B8  C025  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2318  0004BC                     l3475:
  2319                           
  2320                           ;inc\CANlib.h: 870: }
  2321                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  2322  0004BC  0424               	decf	CANSetFilter@numBuffer,w,c
  2323  0004BE  A4D8               	btfss	status,2,c
  2324  0004C0  D075               	goto	l3509
  2325  0004C2  0EF7               	movlw	247
  2326  0004C4  181F               	xorwf	CANSetFilter@type,w,c
  2327  0004C6  A4D8               	btfss	status,2,c
  2328  0004C8  D071               	goto	l3509
  2329                           
  2330                           ;inc\CANlib.h: 873: {
  2331                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  2332  0004CA  010F               	movlb	15	; () banked
  2333  0004CC  8705               	bsf	5,3,b	;volatile
  2334                           
  2335                           ; BSR set to: 15
  2336                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  2337  0004CE  501B               	movf	CANSetFilter@filter,w,c
  2338  0004D0  6E25               	movwf	CANSetFilter@tamp,c
  2339  0004D2  6A26               	clrf	CANSetFilter@tamp+1,c
  2340  0004D4  6A27               	clrf	CANSetFilter@tamp+2,c
  2341  0004D6  6A28               	clrf	CANSetFilter@tamp+3,c
  2342                           
  2343                           ; BSR set to: 15
  2344                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  2345  0004D8  C025  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  2346                           
  2347                           ; BSR set to: 15
  2348                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  2349  0004DC  0E00               	movlw	0
  2350  0004DE  141B               	andwf	CANSetFilter@filter,w,c
  2351  0004E0  6E25               	movwf	CANSetFilter@tamp,c
  2352  0004E2  0EFF               	movlw	255
  2353  0004E4  141C               	andwf	CANSetFilter@filter+1,w,c
  2354  0004E6  6E26               	movwf	CANSetFilter@tamp+1,c
  2355  0004E8  0E00               	movlw	0
  2356  0004EA  141D               	andwf	CANSetFilter@filter+2,w,c
  2357  0004EC  6E27               	movwf	CANSetFilter@tamp+2,c
  2358  0004EE  0E00               	movlw	0
  2359  0004F0  141E               	andwf	CANSetFilter@filter+3,w,c
  2360  0004F2  6E28               	movwf	CANSetFilter@tamp+3,c
  2361                           
  2362                           ; BSR set to: 15
  2363                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  2364  0004F4  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2365  0004F8  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2366  0004FC  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2367  000500  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2368  000504  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2369  000508  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2370  00050C  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2371  000510  6A23               	clrf	??_CANSetFilter+3,c
  2372  000512  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2373  000516  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2374  00051A  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2375  00051E  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2376                           
  2377                           ; BSR set to: 15
  2378                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  2379  000522  C025  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  2380                           
  2381                           ; BSR set to: 15
  2382                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  2383  000526  A01D               	btfss	CANSetFilter@filter+2,0,c
  2384  000528  D003               	goto	l438
  2385                           
  2386                           ; BSR set to: 15
  2387                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  2388  00052A  010F               	movlb	15	; () banked
  2389  00052C  8105               	bsf	5,0,b	;volatile
  2390  00052E  D002               	goto	l439
  2391  000530                     l438:
  2392                           
  2393                           ; BSR set to: 15
  2394                           ;inc\CANlib.h: 885: else
  2395                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  2396  000530  010F               	movlb	15	; () banked
  2397  000532  9105               	bcf	5,0,b	;volatile
  2398  000534                     l439:
  2399                           
  2400                           ; BSR set to: 15
  2401                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  2402  000534  A21D               	btfss	CANSetFilter@filter+2,1,c
  2403  000536  D003               	goto	l440
  2404                           
  2405                           ; BSR set to: 15
  2406                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  2407  000538  010F               	movlb	15	; () banked
  2408  00053A  8305               	bsf	5,1,b	;volatile
  2409  00053C  D002               	goto	l441
  2410  00053E                     l440:
  2411                           
  2412                           ; BSR set to: 15
  2413                           ;inc\CANlib.h: 890: else
  2414                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  2415  00053E  010F               	movlb	15	; () banked
  2416  000540  9305               	bcf	5,1,b	;volatile
  2417  000542                     l441:
  2418                           
  2419                           ; BSR set to: 15
  2420                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  2421  000542  A41D               	btfss	CANSetFilter@filter+2,2,c
  2422  000544  D003               	goto	l442
  2423                           
  2424                           ; BSR set to: 15
  2425                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  2426  000546  010F               	movlb	15	; () banked
  2427  000548  8B05               	bsf	5,5,b	;volatile
  2428  00054A  D002               	goto	l443
  2429  00054C                     l442:
  2430                           
  2431                           ; BSR set to: 15
  2432                           ;inc\CANlib.h: 895: else
  2433                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  2434  00054C  010F               	movlb	15	; () banked
  2435  00054E  9B05               	bcf	5,5,b	;volatile
  2436  000550                     l443:
  2437                           
  2438                           ; BSR set to: 15
  2439                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  2440  000550  A61D               	btfss	CANSetFilter@filter+2,3,c
  2441  000552  D003               	goto	l444
  2442                           
  2443                           ; BSR set to: 15
  2444                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  2445  000554  010F               	movlb	15	; () banked
  2446  000556  8D05               	bsf	5,6,b	;volatile
  2447  000558  D002               	goto	l445
  2448  00055A                     l444:
  2449                           
  2450                           ; BSR set to: 15
  2451                           ;inc\CANlib.h: 900: else
  2452                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  2453  00055A  010F               	movlb	15	; () banked
  2454  00055C  9D05               	bcf	5,6,b	;volatile
  2455  00055E                     l445:
  2456                           
  2457                           ; BSR set to: 15
  2458                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  2459  00055E  A81D               	btfss	CANSetFilter@filter+2,4,c
  2460  000560  D003               	goto	l446
  2461                           
  2462                           ; BSR set to: 15
  2463                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  2464  000562  010F               	movlb	15	; () banked
  2465  000564  8F05               	bsf	5,7,b	;volatile
  2466  000566  D002               	goto	l3503
  2467  000568                     l446:
  2468                           
  2469                           ; BSR set to: 15
  2470                           ;inc\CANlib.h: 905: else
  2471                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  2472  000568  010F               	movlb	15	; () banked
  2473  00056A  9F05               	bcf	5,7,b	;volatile
  2474  00056C                     l3503:
  2475                           
  2476                           ; BSR set to: 15
  2477                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  2478  00056C  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2479  000570  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2480  000574  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2481  000578  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2482  00057C  0E16               	movlw	22
  2483  00057E  D005               	goto	u3970
  2484  000580                     u3975:
  2485  000580  90D8               	bcf	status,0,c
  2486  000582  3223               	rrcf	??_CANSetFilter+3,f,c
  2487  000584  3222               	rrcf	??_CANSetFilter+2,f,c
  2488  000586  3221               	rrcf	??_CANSetFilter+1,f,c
  2489  000588  3220               	rrcf	??_CANSetFilter,f,c
  2490  00058A                     u3970:
  2491  00058A  2EE8               	decfsz	wreg,f,c
  2492  00058C  D7F9               	goto	u3975
  2493  00058E  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2494  000592  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2495  000596  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2496  00059A  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2497                           
  2498                           ; BSR set to: 15
  2499                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  2500  00059E  5025               	movf	CANSetFilter@tamp,w,c
  2501  0005A0  6E25               	movwf	CANSetFilter@tamp,c
  2502  0005A2  6A26               	clrf	CANSetFilter@tamp+1,c
  2503  0005A4  6A27               	clrf	CANSetFilter@tamp+2,c
  2504  0005A6  6A28               	clrf	CANSetFilter@tamp+3,c
  2505                           
  2506                           ; BSR set to: 15
  2507                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  2508  0005A8  C025  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  2509  0005AC                     l3509:
  2510                           
  2511                           ;inc\CANlib.h: 911: }
  2512                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  2513  0005AC  0E02               	movlw	2
  2514  0005AE  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2515  0005B0  A4D8               	btfss	status,2,c
  2516  0005B2  D075               	goto	l3543
  2517  0005B4  0EF7               	movlw	247
  2518  0005B6  181F               	xorwf	CANSetFilter@type,w,c
  2519  0005B8  A4D8               	btfss	status,2,c
  2520  0005BA  D071               	goto	l3543
  2521                           
  2522                           ;inc\CANlib.h: 915: {
  2523                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  2524  0005BC  010F               	movlb	15	; () banked
  2525  0005BE  8709               	bsf	9,3,b	;volatile
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  2529  0005C0  501B               	movf	CANSetFilter@filter,w,c
  2530  0005C2  6E25               	movwf	CANSetFilter@tamp,c
  2531  0005C4  6A26               	clrf	CANSetFilter@tamp+1,c
  2532  0005C6  6A27               	clrf	CANSetFilter@tamp+2,c
  2533  0005C8  6A28               	clrf	CANSetFilter@tamp+3,c
  2534                           
  2535                           ; BSR set to: 15
  2536                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  2537  0005CA  C025  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  2541  0005CE  0E00               	movlw	0
  2542  0005D0  141B               	andwf	CANSetFilter@filter,w,c
  2543  0005D2  6E25               	movwf	CANSetFilter@tamp,c
  2544  0005D4  0EFF               	movlw	255
  2545  0005D6  141C               	andwf	CANSetFilter@filter+1,w,c
  2546  0005D8  6E26               	movwf	CANSetFilter@tamp+1,c
  2547  0005DA  0E00               	movlw	0
  2548  0005DC  141D               	andwf	CANSetFilter@filter+2,w,c
  2549  0005DE  6E27               	movwf	CANSetFilter@tamp+2,c
  2550  0005E0  0E00               	movlw	0
  2551  0005E2  141E               	andwf	CANSetFilter@filter+3,w,c
  2552  0005E4  6E28               	movwf	CANSetFilter@tamp+3,c
  2553                           
  2554                           ; BSR set to: 15
  2555                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  2556  0005E6  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2557  0005EA  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2558  0005EE  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2559  0005F2  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2560  0005F6  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2561  0005FA  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2562  0005FE  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2563  000602  6A23               	clrf	??_CANSetFilter+3,c
  2564  000604  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2565  000608  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2566  00060C  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2567  000610  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2568                           
  2569                           ; BSR set to: 15
  2570                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  2571  000614  C025  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  2572                           
  2573                           ; BSR set to: 15
  2574                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  2575  000618  A01D               	btfss	CANSetFilter@filter+2,0,c
  2576  00061A  D003               	goto	l449
  2577                           
  2578                           ; BSR set to: 15
  2579                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  2580  00061C  010F               	movlb	15	; () banked
  2581  00061E  8109               	bsf	9,0,b	;volatile
  2582  000620  D002               	goto	l450
  2583  000622                     l449:
  2584                           
  2585                           ; BSR set to: 15
  2586                           ;inc\CANlib.h: 927: else
  2587                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  2588  000622  010F               	movlb	15	; () banked
  2589  000624  9109               	bcf	9,0,b	;volatile
  2590  000626                     l450:
  2591                           
  2592                           ; BSR set to: 15
  2593                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  2594  000626  A21D               	btfss	CANSetFilter@filter+2,1,c
  2595  000628  D003               	goto	l451
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  2599  00062A  010F               	movlb	15	; () banked
  2600  00062C  8309               	bsf	9,1,b	;volatile
  2601  00062E  D002               	goto	l452
  2602  000630                     l451:
  2603                           
  2604                           ; BSR set to: 15
  2605                           ;inc\CANlib.h: 932: else
  2606                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  2607  000630  010F               	movlb	15	; () banked
  2608  000632  9309               	bcf	9,1,b	;volatile
  2609  000634                     l452:
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  2613  000634  A41D               	btfss	CANSetFilter@filter+2,2,c
  2614  000636  D003               	goto	l453
  2615                           
  2616                           ; BSR set to: 15
  2617                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  2618  000638  010F               	movlb	15	; () banked
  2619  00063A  8B09               	bsf	9,5,b	;volatile
  2620  00063C  D002               	goto	l454
  2621  00063E                     l453:
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;inc\CANlib.h: 937: else
  2625                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  2626  00063E  010F               	movlb	15	; () banked
  2627  000640  9B09               	bcf	9,5,b	;volatile
  2628  000642                     l454:
  2629                           
  2630                           ; BSR set to: 15
  2631                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  2632  000642  A61D               	btfss	CANSetFilter@filter+2,3,c
  2633  000644  D003               	goto	l455
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  2637  000646  010F               	movlb	15	; () banked
  2638  000648  8D09               	bsf	9,6,b	;volatile
  2639  00064A  D002               	goto	l456
  2640  00064C                     l455:
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;inc\CANlib.h: 942: else
  2644                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  2645  00064C  010F               	movlb	15	; () banked
  2646  00064E  9D09               	bcf	9,6,b	;volatile
  2647  000650                     l456:
  2648                           
  2649                           ; BSR set to: 15
  2650                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  2651  000650  A81D               	btfss	CANSetFilter@filter+2,4,c
  2652  000652  D003               	goto	l457
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  2656  000654  010F               	movlb	15	; () banked
  2657  000656  8F09               	bsf	9,7,b	;volatile
  2658  000658  D002               	goto	l3537
  2659  00065A                     l457:
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;inc\CANlib.h: 947: else
  2663                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  2664  00065A  010F               	movlb	15	; () banked
  2665  00065C  9F09               	bcf	9,7,b	;volatile
  2666  00065E                     l3537:
  2667                           
  2668                           ; BSR set to: 15
  2669                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  2670  00065E  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2671  000662  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2672  000666  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2673  00066A  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2674  00066E  0E16               	movlw	22
  2675  000670  D005               	goto	u4050
  2676  000672                     u4055:
  2677  000672  90D8               	bcf	status,0,c
  2678  000674  3223               	rrcf	??_CANSetFilter+3,f,c
  2679  000676  3222               	rrcf	??_CANSetFilter+2,f,c
  2680  000678  3221               	rrcf	??_CANSetFilter+1,f,c
  2681  00067A  3220               	rrcf	??_CANSetFilter,f,c
  2682  00067C                     u4050:
  2683  00067C  2EE8               	decfsz	wreg,f,c
  2684  00067E  D7F9               	goto	u4055
  2685  000680  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2686  000684  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2687  000688  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2688  00068C  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2689                           
  2690                           ; BSR set to: 15
  2691                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  2692  000690  5025               	movf	CANSetFilter@tamp,w,c
  2693  000692  6E25               	movwf	CANSetFilter@tamp,c
  2694  000694  6A26               	clrf	CANSetFilter@tamp+1,c
  2695  000696  6A27               	clrf	CANSetFilter@tamp+2,c
  2696  000698  6A28               	clrf	CANSetFilter@tamp+3,c
  2697                           
  2698                           ; BSR set to: 15
  2699                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  2700  00069A  C025  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  2701  00069E                     l3543:
  2702                           
  2703                           ;inc\CANlib.h: 953: }
  2704                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  2705  00069E  0E03               	movlw	3
  2706  0006A0  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2707  0006A2  A4D8               	btfss	status,2,c
  2708  0006A4  D075               	goto	l3577
  2709  0006A6  0EF7               	movlw	247
  2710  0006A8  181F               	xorwf	CANSetFilter@type,w,c
  2711  0006AA  A4D8               	btfss	status,2,c
  2712  0006AC  D071               	goto	l3577
  2713                           
  2714                           ;inc\CANlib.h: 956: {
  2715                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  2716  0006AE  010F               	movlb	15	; () banked
  2717  0006B0  870D               	bsf	13,3,b	;volatile
  2718                           
  2719                           ; BSR set to: 15
  2720                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  2721  0006B2  501B               	movf	CANSetFilter@filter,w,c
  2722  0006B4  6E25               	movwf	CANSetFilter@tamp,c
  2723  0006B6  6A26               	clrf	CANSetFilter@tamp+1,c
  2724  0006B8  6A27               	clrf	CANSetFilter@tamp+2,c
  2725  0006BA  6A28               	clrf	CANSetFilter@tamp+3,c
  2726                           
  2727                           ; BSR set to: 15
  2728                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  2729  0006BC  C025  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  2730                           
  2731                           ; BSR set to: 15
  2732                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  2733  0006C0  0E00               	movlw	0
  2734  0006C2  141B               	andwf	CANSetFilter@filter,w,c
  2735  0006C4  6E25               	movwf	CANSetFilter@tamp,c
  2736  0006C6  0EFF               	movlw	255
  2737  0006C8  141C               	andwf	CANSetFilter@filter+1,w,c
  2738  0006CA  6E26               	movwf	CANSetFilter@tamp+1,c
  2739  0006CC  0E00               	movlw	0
  2740  0006CE  141D               	andwf	CANSetFilter@filter+2,w,c
  2741  0006D0  6E27               	movwf	CANSetFilter@tamp+2,c
  2742  0006D2  0E00               	movlw	0
  2743  0006D4  141E               	andwf	CANSetFilter@filter+3,w,c
  2744  0006D6  6E28               	movwf	CANSetFilter@tamp+3,c
  2745                           
  2746                           ; BSR set to: 15
  2747                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  2748  0006D8  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2749  0006DC  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2750  0006E0  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2751  0006E4  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2752  0006E8  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2753  0006EC  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2754  0006F0  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2755  0006F4  6A23               	clrf	??_CANSetFilter+3,c
  2756  0006F6  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2757  0006FA  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2758  0006FE  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2759  000702  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2760                           
  2761                           ; BSR set to: 15
  2762                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  2763  000706  C025  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  2764                           
  2765                           ; BSR set to: 15
  2766                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  2767  00070A  A01D               	btfss	CANSetFilter@filter+2,0,c
  2768  00070C  D003               	goto	l460
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  2772  00070E  010F               	movlb	15	; () banked
  2773  000710  810D               	bsf	13,0,b	;volatile
  2774  000712  D002               	goto	l461
  2775  000714                     l460:
  2776                           
  2777                           ; BSR set to: 15
  2778                           ;inc\CANlib.h: 968: else
  2779                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  2780  000714  010F               	movlb	15	; () banked
  2781  000716  910D               	bcf	13,0,b	;volatile
  2782  000718                     l461:
  2783                           
  2784                           ; BSR set to: 15
  2785                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  2786  000718  A21D               	btfss	CANSetFilter@filter+2,1,c
  2787  00071A  D003               	goto	l462
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  2791  00071C  010F               	movlb	15	; () banked
  2792  00071E  830D               	bsf	13,1,b	;volatile
  2793  000720  D002               	goto	l463
  2794  000722                     l462:
  2795                           
  2796                           ; BSR set to: 15
  2797                           ;inc\CANlib.h: 973: else
  2798                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  2799  000722  010F               	movlb	15	; () banked
  2800  000724  930D               	bcf	13,1,b	;volatile
  2801  000726                     l463:
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  2805  000726  A41D               	btfss	CANSetFilter@filter+2,2,c
  2806  000728  D003               	goto	l464
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  2810  00072A  010F               	movlb	15	; () banked
  2811  00072C  8B0D               	bsf	13,5,b	;volatile
  2812  00072E  D002               	goto	l465
  2813  000730                     l464:
  2814                           
  2815                           ; BSR set to: 15
  2816                           ;inc\CANlib.h: 978: else
  2817                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  2818  000730  010F               	movlb	15	; () banked
  2819  000732  9B0D               	bcf	13,5,b	;volatile
  2820  000734                     l465:
  2821                           
  2822                           ; BSR set to: 15
  2823                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  2824  000734  A61D               	btfss	CANSetFilter@filter+2,3,c
  2825  000736  D003               	goto	l466
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  2829  000738  010F               	movlb	15	; () banked
  2830  00073A  8D0D               	bsf	13,6,b	;volatile
  2831  00073C  D002               	goto	l467
  2832  00073E                     l466:
  2833                           
  2834                           ; BSR set to: 15
  2835                           ;inc\CANlib.h: 983: else
  2836                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  2837  00073E  010F               	movlb	15	; () banked
  2838  000740  9D0D               	bcf	13,6,b	;volatile
  2839  000742                     l467:
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  2843  000742  A81D               	btfss	CANSetFilter@filter+2,4,c
  2844  000744  D003               	goto	l468
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  2848  000746  010F               	movlb	15	; () banked
  2849  000748  8F0D               	bsf	13,7,b	;volatile
  2850  00074A  D002               	goto	l3571
  2851  00074C                     l468:
  2852                           
  2853                           ; BSR set to: 15
  2854                           ;inc\CANlib.h: 988: else
  2855                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  2856  00074C  010F               	movlb	15	; () banked
  2857  00074E  9F0D               	bcf	13,7,b	;volatile
  2858  000750                     l3571:
  2859                           
  2860                           ; BSR set to: 15
  2861                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  2862  000750  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2863  000754  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2864  000758  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2865  00075C  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2866  000760  0E16               	movlw	22
  2867  000762  D005               	goto	u4130
  2868  000764                     u4135:
  2869  000764  90D8               	bcf	status,0,c
  2870  000766  3223               	rrcf	??_CANSetFilter+3,f,c
  2871  000768  3222               	rrcf	??_CANSetFilter+2,f,c
  2872  00076A  3221               	rrcf	??_CANSetFilter+1,f,c
  2873  00076C  3220               	rrcf	??_CANSetFilter,f,c
  2874  00076E                     u4130:
  2875  00076E  2EE8               	decfsz	wreg,f,c
  2876  000770  D7F9               	goto	u4135
  2877  000772  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2878  000776  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2879  00077A  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2880  00077E  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2881                           
  2882                           ; BSR set to: 15
  2883                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  2884  000782  5025               	movf	CANSetFilter@tamp,w,c
  2885  000784  6E25               	movwf	CANSetFilter@tamp,c
  2886  000786  6A26               	clrf	CANSetFilter@tamp+1,c
  2887  000788  6A27               	clrf	CANSetFilter@tamp+2,c
  2888  00078A  6A28               	clrf	CANSetFilter@tamp+3,c
  2889                           
  2890                           ; BSR set to: 15
  2891                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  2892  00078C  C025  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  2893  000790                     l3577:
  2894                           
  2895                           ;inc\CANlib.h: 994: }
  2896                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  2897  000790  0E04               	movlw	4
  2898  000792  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2899  000794  A4D8               	btfss	status,2,c
  2900  000796  D075               	goto	l3611
  2901  000798  0EF7               	movlw	247
  2902  00079A  181F               	xorwf	CANSetFilter@type,w,c
  2903  00079C  A4D8               	btfss	status,2,c
  2904  00079E  D071               	goto	l3611
  2905                           
  2906                           ;inc\CANlib.h: 997: {
  2907                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  2908  0007A0  010F               	movlb	15	; () banked
  2909  0007A2  8711               	bsf	17,3,b	;volatile
  2910                           
  2911                           ; BSR set to: 15
  2912                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  2913  0007A4  501B               	movf	CANSetFilter@filter,w,c
  2914  0007A6  6E25               	movwf	CANSetFilter@tamp,c
  2915  0007A8  6A26               	clrf	CANSetFilter@tamp+1,c
  2916  0007AA  6A27               	clrf	CANSetFilter@tamp+2,c
  2917  0007AC  6A28               	clrf	CANSetFilter@tamp+3,c
  2918                           
  2919                           ; BSR set to: 15
  2920                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  2921  0007AE  C025  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  2922                           
  2923                           ; BSR set to: 15
  2924                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  2925  0007B2  0E00               	movlw	0
  2926  0007B4  141B               	andwf	CANSetFilter@filter,w,c
  2927  0007B6  6E25               	movwf	CANSetFilter@tamp,c
  2928  0007B8  0EFF               	movlw	255
  2929  0007BA  141C               	andwf	CANSetFilter@filter+1,w,c
  2930  0007BC  6E26               	movwf	CANSetFilter@tamp+1,c
  2931  0007BE  0E00               	movlw	0
  2932  0007C0  141D               	andwf	CANSetFilter@filter+2,w,c
  2933  0007C2  6E27               	movwf	CANSetFilter@tamp+2,c
  2934  0007C4  0E00               	movlw	0
  2935  0007C6  141E               	andwf	CANSetFilter@filter+3,w,c
  2936  0007C8  6E28               	movwf	CANSetFilter@tamp+3,c
  2937                           
  2938                           ; BSR set to: 15
  2939                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  2940  0007CA  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2941  0007CE  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2942  0007D2  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2943  0007D6  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2944  0007DA  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2945  0007DE  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2946  0007E2  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2947  0007E6  6A23               	clrf	??_CANSetFilter+3,c
  2948  0007E8  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2949  0007EC  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2950  0007F0  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2951  0007F4  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2952                           
  2953                           ; BSR set to: 15
  2954                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  2955  0007F8  C025  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  2956                           
  2957                           ; BSR set to: 15
  2958                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  2959  0007FC  A01D               	btfss	CANSetFilter@filter+2,0,c
  2960  0007FE  D003               	goto	l471
  2961                           
  2962                           ; BSR set to: 15
  2963                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  2964  000800  010F               	movlb	15	; () banked
  2965  000802  8111               	bsf	17,0,b	;volatile
  2966  000804  D002               	goto	l472
  2967  000806                     l471:
  2968                           
  2969                           ; BSR set to: 15
  2970                           ;inc\CANlib.h: 1009: else
  2971                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  2972  000806  010F               	movlb	15	; () banked
  2973  000808  9111               	bcf	17,0,b	;volatile
  2974  00080A                     l472:
  2975                           
  2976                           ; BSR set to: 15
  2977                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  2978  00080A  A21D               	btfss	CANSetFilter@filter+2,1,c
  2979  00080C  D003               	goto	l473
  2980                           
  2981                           ; BSR set to: 15
  2982                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  2983  00080E  010F               	movlb	15	; () banked
  2984  000810  8311               	bsf	17,1,b	;volatile
  2985  000812  D002               	goto	l474
  2986  000814                     l473:
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;inc\CANlib.h: 1014: else
  2990                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  2991  000814  010F               	movlb	15	; () banked
  2992  000816  9311               	bcf	17,1,b	;volatile
  2993  000818                     l474:
  2994                           
  2995                           ; BSR set to: 15
  2996                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  2997  000818  A41D               	btfss	CANSetFilter@filter+2,2,c
  2998  00081A  D003               	goto	l475
  2999                           
  3000                           ; BSR set to: 15
  3001                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  3002  00081C  010F               	movlb	15	; () banked
  3003  00081E  8B11               	bsf	17,5,b	;volatile
  3004  000820  D002               	goto	l476
  3005  000822                     l475:
  3006                           
  3007                           ; BSR set to: 15
  3008                           ;inc\CANlib.h: 1019: else
  3009                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  3010  000822  010F               	movlb	15	; () banked
  3011  000824  9B11               	bcf	17,5,b	;volatile
  3012  000826                     l476:
  3013                           
  3014                           ; BSR set to: 15
  3015                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  3016  000826  A61D               	btfss	CANSetFilter@filter+2,3,c
  3017  000828  D003               	goto	l477
  3018                           
  3019                           ; BSR set to: 15
  3020                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  3021  00082A  010F               	movlb	15	; () banked
  3022  00082C  8D11               	bsf	17,6,b	;volatile
  3023  00082E  D002               	goto	l478
  3024  000830                     l477:
  3025                           
  3026                           ; BSR set to: 15
  3027                           ;inc\CANlib.h: 1024: else
  3028                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  3029  000830  010F               	movlb	15	; () banked
  3030  000832  9D11               	bcf	17,6,b	;volatile
  3031  000834                     l478:
  3032                           
  3033                           ; BSR set to: 15
  3034                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  3035  000834  A81D               	btfss	CANSetFilter@filter+2,4,c
  3036  000836  D003               	goto	l479
  3037                           
  3038                           ; BSR set to: 15
  3039                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  3040  000838  010F               	movlb	15	; () banked
  3041  00083A  8F11               	bsf	17,7,b	;volatile
  3042  00083C  D002               	goto	l3605
  3043  00083E                     l479:
  3044                           
  3045                           ; BSR set to: 15
  3046                           ;inc\CANlib.h: 1029: else
  3047                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  3048  00083E  010F               	movlb	15	; () banked
  3049  000840  9F11               	bcf	17,7,b	;volatile
  3050  000842                     l3605:
  3051                           
  3052                           ; BSR set to: 15
  3053                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  3054  000842  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  3055  000846  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3056  00084A  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3057  00084E  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3058  000852  0E16               	movlw	22
  3059  000854  D005               	goto	u4210
  3060  000856                     u4215:
  3061  000856  90D8               	bcf	status,0,c
  3062  000858  3223               	rrcf	??_CANSetFilter+3,f,c
  3063  00085A  3222               	rrcf	??_CANSetFilter+2,f,c
  3064  00085C  3221               	rrcf	??_CANSetFilter+1,f,c
  3065  00085E  3220               	rrcf	??_CANSetFilter,f,c
  3066  000860                     u4210:
  3067  000860  2EE8               	decfsz	wreg,f,c
  3068  000862  D7F9               	goto	u4215
  3069  000864  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3070  000868  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3071  00086C  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3072  000870  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3073                           
  3074                           ; BSR set to: 15
  3075                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  3076  000874  5025               	movf	CANSetFilter@tamp,w,c
  3077  000876  6E25               	movwf	CANSetFilter@tamp,c
  3078  000878  6A26               	clrf	CANSetFilter@tamp+1,c
  3079  00087A  6A27               	clrf	CANSetFilter@tamp+2,c
  3080  00087C  6A28               	clrf	CANSetFilter@tamp+3,c
  3081                           
  3082                           ; BSR set to: 15
  3083                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  3084  00087E  C025  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3085  000882                     l3611:
  3086                           
  3087                           ;inc\CANlib.h: 1035: }
  3088                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  3089  000882  0E05               	movlw	5
  3090  000884  1824               	xorwf	CANSetFilter@numBuffer,w,c
  3091  000886  A4D8               	btfss	status,2,c
  3092  000888  0012               	return	
  3093  00088A  0EF7               	movlw	247
  3094  00088C  181F               	xorwf	CANSetFilter@type,w,c
  3095  00088E  A4D8               	btfss	status,2,c
  3096  000890  0012               	return	
  3097                           
  3098                           ;inc\CANlib.h: 1038: {
  3099                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  3100  000892  010F               	movlb	15	; () banked
  3101  000894  8715               	bsf	21,3,b	;volatile
  3102                           
  3103                           ; BSR set to: 15
  3104                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  3105  000896  501B               	movf	CANSetFilter@filter,w,c
  3106  000898  6E25               	movwf	CANSetFilter@tamp,c
  3107  00089A  6A26               	clrf	CANSetFilter@tamp+1,c
  3108  00089C  6A27               	clrf	CANSetFilter@tamp+2,c
  3109  00089E  6A28               	clrf	CANSetFilter@tamp+3,c
  3110                           
  3111                           ; BSR set to: 15
  3112                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  3113  0008A0  C025  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  3114                           
  3115                           ; BSR set to: 15
  3116                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  3117  0008A4  0E00               	movlw	0
  3118  0008A6  141B               	andwf	CANSetFilter@filter,w,c
  3119  0008A8  6E25               	movwf	CANSetFilter@tamp,c
  3120  0008AA  0EFF               	movlw	255
  3121  0008AC  141C               	andwf	CANSetFilter@filter+1,w,c
  3122  0008AE  6E26               	movwf	CANSetFilter@tamp+1,c
  3123  0008B0  0E00               	movlw	0
  3124  0008B2  141D               	andwf	CANSetFilter@filter+2,w,c
  3125  0008B4  6E27               	movwf	CANSetFilter@tamp+2,c
  3126  0008B6  0E00               	movlw	0
  3127  0008B8  141E               	andwf	CANSetFilter@filter+3,w,c
  3128  0008BA  6E28               	movwf	CANSetFilter@tamp+3,c
  3129                           
  3130                           ; BSR set to: 15
  3131                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  3132  0008BC  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  3133  0008C0  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3134  0008C4  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3135  0008C8  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3136  0008CC  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  3137  0008D0  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3138  0008D4  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3139  0008D8  6A23               	clrf	??_CANSetFilter+3,c
  3140  0008DA  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3141  0008DE  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3142  0008E2  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3143  0008E6  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3144                           
  3145                           ; BSR set to: 15
  3146                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  3147  0008EA  C025  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  3148                           
  3149                           ; BSR set to: 15
  3150                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  3151  0008EE  A01D               	btfss	CANSetFilter@filter+2,0,c
  3152  0008F0  D003               	goto	l482
  3153                           
  3154                           ; BSR set to: 15
  3155                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  3156  0008F2  010F               	movlb	15	; () banked
  3157  0008F4  8115               	bsf	21,0,b	;volatile
  3158  0008F6  D002               	goto	l483
  3159  0008F8                     l482:
  3160                           
  3161                           ; BSR set to: 15
  3162                           ;inc\CANlib.h: 1050: else
  3163                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  3164  0008F8  010F               	movlb	15	; () banked
  3165  0008FA  9115               	bcf	21,0,b	;volatile
  3166  0008FC                     l483:
  3167                           
  3168                           ; BSR set to: 15
  3169                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  3170  0008FC  A21D               	btfss	CANSetFilter@filter+2,1,c
  3171  0008FE  D003               	goto	l484
  3172                           
  3173                           ; BSR set to: 15
  3174                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  3175  000900  010F               	movlb	15	; () banked
  3176  000902  8315               	bsf	21,1,b	;volatile
  3177  000904  D002               	goto	l485
  3178  000906                     l484:
  3179                           
  3180                           ; BSR set to: 15
  3181                           ;inc\CANlib.h: 1055: else
  3182                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  3183  000906  010F               	movlb	15	; () banked
  3184  000908  9315               	bcf	21,1,b	;volatile
  3185  00090A                     l485:
  3186                           
  3187                           ; BSR set to: 15
  3188                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  3189  00090A  A41D               	btfss	CANSetFilter@filter+2,2,c
  3190  00090C  D003               	goto	l486
  3191                           
  3192                           ; BSR set to: 15
  3193                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  3194  00090E  010F               	movlb	15	; () banked
  3195  000910  8B15               	bsf	21,5,b	;volatile
  3196  000912  D002               	goto	l487
  3197  000914                     l486:
  3198                           
  3199                           ; BSR set to: 15
  3200                           ;inc\CANlib.h: 1060: else
  3201                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  3202  000914  010F               	movlb	15	; () banked
  3203  000916  9B15               	bcf	21,5,b	;volatile
  3204  000918                     l487:
  3205                           
  3206                           ; BSR set to: 15
  3207                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  3208  000918  A61D               	btfss	CANSetFilter@filter+2,3,c
  3209  00091A  D003               	goto	l488
  3210                           
  3211                           ; BSR set to: 15
  3212                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  3213  00091C  010F               	movlb	15	; () banked
  3214  00091E  8D15               	bsf	21,6,b	;volatile
  3215  000920  D002               	goto	l489
  3216  000922                     l488:
  3217                           
  3218                           ; BSR set to: 15
  3219                           ;inc\CANlib.h: 1065: else
  3220                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  3221  000922  010F               	movlb	15	; () banked
  3222  000924  9D15               	bcf	21,6,b	;volatile
  3223  000926                     l489:
  3224                           
  3225                           ; BSR set to: 15
  3226                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  3227  000926  A81D               	btfss	CANSetFilter@filter+2,4,c
  3228  000928  D003               	goto	l490
  3229                           
  3230                           ; BSR set to: 15
  3231                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  3232  00092A  010F               	movlb	15	; () banked
  3233  00092C  8F15               	bsf	21,7,b	;volatile
  3234  00092E  D002               	goto	l3639
  3235  000930                     l490:
  3236                           
  3237                           ; BSR set to: 15
  3238                           ;inc\CANlib.h: 1070: else
  3239                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  3240  000930  010F               	movlb	15	; () banked
  3241  000932  9F15               	bcf	21,7,b	;volatile
  3242  000934                     l3639:
  3243                           
  3244                           ; BSR set to: 15
  3245                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  3246  000934  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  3247  000938  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3248  00093C  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3249  000940  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3250  000944  0E16               	movlw	22
  3251  000946  D005               	goto	u4290
  3252  000948                     u4295:
  3253  000948  90D8               	bcf	status,0,c
  3254  00094A  3223               	rrcf	??_CANSetFilter+3,f,c
  3255  00094C  3222               	rrcf	??_CANSetFilter+2,f,c
  3256  00094E  3221               	rrcf	??_CANSetFilter+1,f,c
  3257  000950  3220               	rrcf	??_CANSetFilter,f,c
  3258  000952                     u4290:
  3259  000952  2EE8               	decfsz	wreg,f,c
  3260  000954  D7F9               	goto	u4295
  3261  000956  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3262  00095A  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3263  00095E  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3264  000962  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3265                           
  3266                           ; BSR set to: 15
  3267                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  3268  000966  5025               	movf	CANSetFilter@tamp,w,c
  3269  000968  6E25               	movwf	CANSetFilter@tamp,c
  3270  00096A  6A26               	clrf	CANSetFilter@tamp+1,c
  3271  00096C  6A27               	clrf	CANSetFilter@tamp+2,c
  3272  00096E  6A28               	clrf	CANSetFilter@tamp+3,c
  3273                           
  3274                           ; BSR set to: 15
  3275                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  3276  000970  C025  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3277  000974  0012               	return	
  3278  000976                     __end_of_CANSetFilter:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           postinc0	equ	0xFEE
  3285                           wreg	equ	0xFE8
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function _CANOperationMode *****************
  3289 ;; Defined at:
  3290 ;;		line 206 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  mode            1    wreg     enum E15923
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  mode            1   26[COMRAM] enum E15923
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3304 ;;      Params:         0       0       0       0
  3305 ;;      Locals:         1       0       0       0
  3306 ;;      Temps:          0       0       0       0
  3307 ;;      Totals:         1       0       0       0
  3308 ;;Total ram usage:        1 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    2
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_CANInitialize
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text5
  3319  00165C                     __ptext5:
  3320                           	opt stack 0
  3321  00165C                     _CANOperationMode:
  3322                           	opt stack 26
  3323                           
  3324                           ;incstack = 0
  3325                           ;CANOperationMode@mode stored from wreg
  3326  00165C  6E1B               	movwf	CANOperationMode@mode,c
  3327                           
  3328                           ;inc\CANlib.h: 208: CANCON = mode;
  3329  00165E  C01B  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  3330  001662                     l3235:
  3331  001662  506E               	movf	3950,w,c	;volatile
  3332  001664  0BE0               	andlw	224
  3333  001666  181B               	xorwf	CANOperationMode@mode,w,c
  3334  001668  B4D8               	btfsc	status,2,c
  3335  00166A  0012               	return	
  3336  00166C  D7FA               	goto	l3235
  3337  00166E                     __end_of_CANOperationMode:
  3338                           	opt stack 0
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _LCD_initialize *****************
  3348 ;; Defined at:
  3349 ;;		line 283 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  quartz_frequ    1    wreg     unsigned char 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  quartz_frequ    1   40[COMRAM] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3363 ;;      Params:         0       0       0       0
  3364 ;;      Locals:         1       0       0       0
  3365 ;;      Temps:          0       0       0       0
  3366 ;;      Totals:         1       0       0       0
  3367 ;;Total ram usage:        1 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    7
  3370 ;; This function calls:
  3371 ;;		_LCD_clear
  3372 ;;		_LCD_cursor
  3373 ;;		_LCD_send_command
  3374 ;;		_delay_ms
  3375 ;;		_delay_set_quartz
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text6
  3382  001332                     __ptext6:
  3383                           	opt stack 0
  3384  001332                     _LCD_initialize:
  3385                           	opt stack 23
  3386                           
  3387                           ;incstack = 0
  3388                           ;LCD_initialize@quartz_frequency stored from wreg
  3389  001332  6E29               	movwf	LCD_initialize@quartz_frequency,c
  3390                           
  3391                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  3392  001334  5029               	movf	LCD_initialize@quartz_frequency,w,c
  3393  001336  EC3D  F00B         	call	_delay_set_quartz
  3394                           
  3395                           ;src\LCD_44780.c: 287: LATDbits.LATD2 = 0x00;
  3396  00133A  948C               	bcf	3980,2,c	;volatile
  3397                           
  3398                           ;src\LCD_44780.c: 288: LATDbits.LATD3 = 0x00;
  3399  00133C  968C               	bcf	3980,3,c	;volatile
  3400                           
  3401                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  3402  00133E  928C               	bcf	3980,1,c	;volatile
  3403                           
  3404                           ;src\LCD_44780.c: 291: delay_ms (100);
  3405  001340  0E00               	movlw	0
  3406  001342  6E22               	movwf	delay_ms@value_ms+1,c
  3407  001344  0E64               	movlw	100
  3408  001346  6E21               	movwf	delay_ms@value_ms,c
  3409  001348  EC93  F00A         	call	_delay_ms	;wreg free
  3410                           
  3411                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  3412  00134C  0E00               	movlw	0
  3413  00134E  6E23               	movwf	LCD_send_command@D2,c
  3414  001350  0E01               	movlw	1
  3415  001352  6E24               	movwf	LCD_send_command@D1,c
  3416  001354  0E01               	movlw	1
  3417  001356  6E25               	movwf	LCD_send_command@D0,c
  3418  001358  0E00               	movlw	0
  3419  00135A  ECAC  F00A         	call	_LCD_send_command
  3420                           
  3421                           ;src\LCD_44780.c: 293: delay_ms (100);
  3422  00135E  0E00               	movlw	0
  3423  001360  6E22               	movwf	delay_ms@value_ms+1,c
  3424  001362  0E64               	movlw	100
  3425  001364  6E21               	movwf	delay_ms@value_ms,c
  3426  001366  EC93  F00A         	call	_delay_ms	;wreg free
  3427                           
  3428                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  3429  00136A  0E00               	movlw	0
  3430  00136C  6E23               	movwf	LCD_send_command@D2,c
  3431  00136E  0E01               	movlw	1
  3432  001370  6E24               	movwf	LCD_send_command@D1,c
  3433  001372  0E01               	movlw	1
  3434  001374  6E25               	movwf	LCD_send_command@D0,c
  3435  001376  0E00               	movlw	0
  3436  001378  ECAC  F00A         	call	_LCD_send_command
  3437                           
  3438                           ;src\LCD_44780.c: 295: delay_ms (10);
  3439  00137C  0E00               	movlw	0
  3440  00137E  6E22               	movwf	delay_ms@value_ms+1,c
  3441  001380  0E0A               	movlw	10
  3442  001382  6E21               	movwf	delay_ms@value_ms,c
  3443  001384  EC93  F00A         	call	_delay_ms	;wreg free
  3444                           
  3445                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  3446  001388  0E00               	movlw	0
  3447  00138A  6E23               	movwf	LCD_send_command@D2,c
  3448  00138C  0E01               	movlw	1
  3449  00138E  6E24               	movwf	LCD_send_command@D1,c
  3450  001390  0E01               	movlw	1
  3451  001392  6E25               	movwf	LCD_send_command@D0,c
  3452  001394  0E00               	movlw	0
  3453  001396  ECAC  F00A         	call	_LCD_send_command
  3454                           
  3455                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  3456  00139A  0E00               	movlw	0
  3457  00139C  6E23               	movwf	LCD_send_command@D2,c
  3458  00139E  0E01               	movlw	1
  3459  0013A0  6E24               	movwf	LCD_send_command@D1,c
  3460  0013A2  0E00               	movlw	0
  3461  0013A4  6E25               	movwf	LCD_send_command@D0,c
  3462  0013A6  0E00               	movlw	0
  3463  0013A8  ECAC  F00A         	call	_LCD_send_command
  3464                           
  3465                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  3466  0013AC  0E00               	movlw	0
  3467  0013AE  6E23               	movwf	LCD_send_command@D2,c
  3468  0013B0  0E01               	movlw	1
  3469  0013B2  6E24               	movwf	LCD_send_command@D1,c
  3470  0013B4  0E00               	movlw	0
  3471  0013B6  6E25               	movwf	LCD_send_command@D0,c
  3472  0013B8  0E00               	movlw	0
  3473  0013BA  ECAC  F00A         	call	_LCD_send_command
  3474                           
  3475                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  3476  0013BE  0E00               	movlw	0
  3477  0013C0  6E23               	movwf	LCD_send_command@D2,c
  3478  0013C2  0E00               	movlw	0
  3479  0013C4  6E24               	movwf	LCD_send_command@D1,c
  3480  0013C6  0E00               	movlw	0
  3481  0013C8  6E25               	movwf	LCD_send_command@D0,c
  3482  0013CA  0E01               	movlw	1
  3483  0013CC  ECAC  F00A         	call	_LCD_send_command
  3484                           
  3485                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  3486  0013D0  0E00               	movlw	0
  3487  0013D2  6E23               	movwf	LCD_send_command@D2,c
  3488  0013D4  0E00               	movlw	0
  3489  0013D6  6E24               	movwf	LCD_send_command@D1,c
  3490  0013D8  0E00               	movlw	0
  3491  0013DA  6E25               	movwf	LCD_send_command@D0,c
  3492  0013DC  0E00               	movlw	0
  3493  0013DE  ECAC  F00A         	call	_LCD_send_command
  3494                           
  3495                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  3496  0013E2  0E00               	movlw	0
  3497  0013E4  6E23               	movwf	LCD_send_command@D2,c
  3498  0013E6  0E00               	movlw	0
  3499  0013E8  6E24               	movwf	LCD_send_command@D1,c
  3500  0013EA  0E00               	movlw	0
  3501  0013EC  6E25               	movwf	LCD_send_command@D0,c
  3502  0013EE  0E01               	movlw	1
  3503  0013F0  ECAC  F00A         	call	_LCD_send_command
  3504                           
  3505                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  3506  0013F4  0E00               	movlw	0
  3507  0013F6  6E23               	movwf	LCD_send_command@D2,c
  3508  0013F8  0E00               	movlw	0
  3509  0013FA  6E24               	movwf	LCD_send_command@D1,c
  3510  0013FC  0E00               	movlw	0
  3511  0013FE  6E25               	movwf	LCD_send_command@D0,c
  3512  001400  0E00               	movlw	0
  3513  001402  ECAC  F00A         	call	_LCD_send_command
  3514                           
  3515                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  3516  001406  0E00               	movlw	0
  3517  001408  6E23               	movwf	LCD_send_command@D2,c
  3518  00140A  0E00               	movlw	0
  3519  00140C  6E24               	movwf	LCD_send_command@D1,c
  3520  00140E  0E01               	movlw	1
  3521  001410  6E25               	movwf	LCD_send_command@D0,c
  3522  001412  0E00               	movlw	0
  3523  001414  ECAC  F00A         	call	_LCD_send_command
  3524                           
  3525                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  3526  001418  0E00               	movlw	0
  3527  00141A  6E23               	movwf	LCD_send_command@D2,c
  3528  00141C  0E00               	movlw	0
  3529  00141E  6E24               	movwf	LCD_send_command@D1,c
  3530  001420  0E00               	movlw	0
  3531  001422  6E25               	movwf	LCD_send_command@D0,c
  3532  001424  0E00               	movlw	0
  3533  001426  ECAC  F00A         	call	_LCD_send_command
  3534                           
  3535                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  3536  00142A  0E01               	movlw	1
  3537  00142C  6E23               	movwf	LCD_send_command@D2,c
  3538  00142E  0E01               	movlw	1
  3539  001430  6E24               	movwf	LCD_send_command@D1,c
  3540  001432  0E00               	movlw	0
  3541  001434  6E25               	movwf	LCD_send_command@D0,c
  3542  001436  0E00               	movlw	0
  3543  001438  ECAC  F00A         	call	_LCD_send_command
  3544                           
  3545                           ;src\LCD_44780.c: 312: LCD_clear ();
  3546  00143C  ECEE  F00A         	call	_LCD_clear	;wreg free
  3547                           
  3548                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  3549  001440  0E00               	movlw	0
  3550  001442  6E27               	movwf	LCD_cursor@blinking,c
  3551  001444  0E00               	movlw	0
  3552  001446  ECDA  F00A         	call	_LCD_cursor
  3553  00144A  0012               	return		;funcret
  3554  00144C                     __end_of_LCD_initialize:
  3555                           	opt stack 0
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           postinc0	equ	0xFEE
  3561                           wreg	equ	0xFE8
  3562                           status	equ	0xFD8
  3563                           
  3564 ;; *************** function _delay_set_quartz *****************
  3565 ;; Defined at:
  3566 ;;		line 115 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  frequency       1    wreg     unsigned char 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  frequency       1   26[COMRAM] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3580 ;;      Params:         0       0       0       0
  3581 ;;      Locals:         1       0       0       0
  3582 ;;      Temps:          0       0       0       0
  3583 ;;      Totals:         1       0       0       0
  3584 ;;Total ram usage:        1 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    2
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_LCD_initialize
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text7
  3595  00167A                     __ptext7:
  3596                           	opt stack 0
  3597  00167A                     _delay_set_quartz:
  3598                           	opt stack 27
  3599                           
  3600                           ;incstack = 0
  3601                           ;delay_set_quartz@frequency stored from wreg
  3602  00167A  6E1B               	movwf	delay_set_quartz@frequency,c
  3603                           
  3604                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  3605  00167C  C01B  F044         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  3606  001680  0012               	return		;funcret
  3607  001682                     __end_of_delay_set_quartz:
  3608                           	opt stack 0
  3609                           tblptru	equ	0xFF8
  3610                           tblptrh	equ	0xFF7
  3611                           tblptrl	equ	0xFF6
  3612                           tablat	equ	0xFF5
  3613                           postinc0	equ	0xFEE
  3614                           wreg	equ	0xFE8
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _LCD_cursor *****************
  3618 ;; Defined at:
  3619 ;;		line 266 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  active          1    wreg     unsigned char 
  3622 ;;  blinking        1   38[COMRAM] unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  active          1   39[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3634 ;;      Params:         1       0       0       0
  3635 ;;      Locals:         1       0       0       0
  3636 ;;      Temps:          0       0       0       0
  3637 ;;      Totals:         2       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    6
  3641 ;; This function calls:
  3642 ;;		_LCD_send_command
  3643 ;; This function is called by:
  3644 ;;		_LCD_initialize
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text8
  3649  0015B4                     __ptext8:
  3650                           	opt stack 0
  3651  0015B4                     _LCD_cursor:
  3652                           	opt stack 23
  3653                           
  3654                           ;incstack = 0
  3655                           ;LCD_cursor@active stored from wreg
  3656  0015B4  6E28               	movwf	LCD_cursor@active,c
  3657                           
  3658                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  3659  0015B6  0E00               	movlw	0
  3660  0015B8  6E23               	movwf	LCD_send_command@D2,c
  3661  0015BA  0E00               	movlw	0
  3662  0015BC  6E24               	movwf	LCD_send_command@D1,c
  3663  0015BE  0E00               	movlw	0
  3664  0015C0  6E25               	movwf	LCD_send_command@D0,c
  3665  0015C2  0E00               	movlw	0
  3666  0015C4  ECAC  F00A         	call	_LCD_send_command
  3667                           
  3668                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  3669  0015C8  0E01               	movlw	1
  3670  0015CA  6E23               	movwf	LCD_send_command@D2,c
  3671  0015CC  C028  F024         	movff	LCD_cursor@active,LCD_send_command@D1
  3672  0015D0  C027  F025         	movff	LCD_cursor@blinking,LCD_send_command@D0
  3673  0015D4  0E01               	movlw	1
  3674  0015D6  ECAC  F00A         	call	_LCD_send_command
  3675  0015DA  0012               	return		;funcret
  3676  0015DC                     __end_of_LCD_cursor:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _LCD_clear *****************
  3687 ;; Defined at:
  3688 ;;		line 257 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3702 ;;      Params:         0       0       0       0
  3703 ;;      Locals:         0       0       0       0
  3704 ;;      Temps:          0       0       0       0
  3705 ;;      Totals:         0       0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    6
  3709 ;; This function calls:
  3710 ;;		_LCD_send_command
  3711 ;; This function is called by:
  3712 ;;		_LCD_initialize
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text9
  3717  0015DC                     __ptext9:
  3718                           	opt stack 0
  3719  0015DC                     _LCD_clear:
  3720                           	opt stack 23
  3721                           
  3722                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  3723                           
  3724                           ;incstack = 0
  3725  0015DC  0E00               	movlw	0
  3726  0015DE  6E23               	movwf	LCD_send_command@D2,c
  3727  0015E0  0E00               	movlw	0
  3728  0015E2  6E24               	movwf	LCD_send_command@D1,c
  3729  0015E4  0E00               	movlw	0
  3730  0015E6  6E25               	movwf	LCD_send_command@D0,c
  3731  0015E8  0E00               	movlw	0
  3732  0015EA  ECAC  F00A         	call	_LCD_send_command
  3733                           
  3734                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  3735  0015EE  0E00               	movlw	0
  3736  0015F0  6E23               	movwf	LCD_send_command@D2,c
  3737  0015F2  0E00               	movlw	0
  3738  0015F4  6E24               	movwf	LCD_send_command@D1,c
  3739  0015F6  0E01               	movlw	1
  3740  0015F8  6E25               	movwf	LCD_send_command@D0,c
  3741  0015FA  0E00               	movlw	0
  3742  0015FC  ECAC  F00A         	call	_LCD_send_command
  3743  001600  0012               	return		;funcret
  3744  001602                     __end_of_LCD_clear:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           postinc0	equ	0xFEE
  3751                           wreg	equ	0xFE8
  3752                           status	equ	0xFD8
  3753                           
  3754 ;; *************** function _LCD_send_command *****************
  3755 ;; Defined at:
  3756 ;;		line 61 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  D3              1    wreg     unsigned char 
  3759 ;;  D2              1   34[COMRAM] unsigned char 
  3760 ;;  D1              1   35[COMRAM] unsigned char 
  3761 ;;  D0              1   36[COMRAM] unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  D3              1   37[COMRAM] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3773 ;;      Params:         3       0       0       0
  3774 ;;      Locals:         1       0       0       0
  3775 ;;      Temps:          0       0       0       0
  3776 ;;      Totals:         4       0       0       0
  3777 ;;Total ram usage:        4 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    5
  3780 ;; This function calls:
  3781 ;;		_LCD_enable_pulse
  3782 ;; This function is called by:
  3783 ;;		_LCD_clear
  3784 ;;		_LCD_cursor
  3785 ;;		_LCD_initialize
  3786 ;;		_LCD_home
  3787 ;;		_LCD_shift
  3788 ;;		_LCD_shift_cursor
  3789 ;;		_LCD_goto_line
  3790 ;;		_LCD_write_char
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text10
  3795  001558                     __ptext10:
  3796                           	opt stack 0
  3797  001558                     _LCD_send_command:
  3798                           	opt stack 24
  3799                           
  3800                           ;incstack = 0
  3801                           ;LCD_send_command@D3 stored from wreg
  3802  001558  6E26               	movwf	LCD_send_command@D3,c
  3803                           
  3804                           ;src\LCD_44780.c: 63: LATDbits.LATD4 = D0;
  3805  00155A  B025               	btfsc	LCD_send_command@D0,0,c
  3806  00155C  D002               	bra	u2865
  3807  00155E  988C               	bcf	3980,4,c	;volatile
  3808  001560  D001               	bra	u2866
  3809  001562                     u2865:
  3810  001562  888C               	bsf	3980,4,c	;volatile
  3811  001564                     u2866:
  3812                           
  3813                           ;src\LCD_44780.c: 64: LATDbits.LATD5 = D1;
  3814  001564  B024               	btfsc	LCD_send_command@D1,0,c
  3815  001566  D002               	bra	u2875
  3816  001568  9A8C               	bcf	3980,5,c	;volatile
  3817  00156A  D001               	bra	u2876
  3818  00156C                     u2875:
  3819  00156C  8A8C               	bsf	3980,5,c	;volatile
  3820  00156E                     u2876:
  3821                           
  3822                           ;src\LCD_44780.c: 65: LATDbits.LATD6 = D2;
  3823  00156E  B023               	btfsc	LCD_send_command@D2,0,c
  3824  001570  D002               	bra	u2885
  3825  001572  9C8C               	bcf	3980,6,c	;volatile
  3826  001574  D001               	bra	u2886
  3827  001576                     u2885:
  3828  001576  8C8C               	bsf	3980,6,c	;volatile
  3829  001578                     u2886:
  3830                           
  3831                           ;src\LCD_44780.c: 66: LATDbits.LATD7 = D3;
  3832  001578  B026               	btfsc	LCD_send_command@D3,0,c
  3833  00157A  D002               	bra	u2895
  3834  00157C  9E8C               	bcf	3980,7,c	;volatile
  3835  00157E  D001               	bra	u2896
  3836  001580                     u2895:
  3837  001580  8E8C               	bsf	3980,7,c	;volatile
  3838  001582                     u2896:
  3839                           
  3840                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  3841  001582  EC14  F00B         	call	_LCD_enable_pulse	;wreg free
  3842  001586  0012               	return		;funcret
  3843  001588                     __end_of_LCD_send_command:
  3844                           	opt stack 0
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           postinc0	equ	0xFEE
  3850                           wreg	equ	0xFE8
  3851                           status	equ	0xFD8
  3852                           
  3853 ;; *************** function _LCD_enable_pulse *****************
  3854 ;; Defined at:
  3855 ;;		line 49 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3869 ;;      Params:         0       0       0       0
  3870 ;;      Locals:         0       0       0       0
  3871 ;;      Temps:          0       0       0       0
  3872 ;;      Totals:         0       0       0       0
  3873 ;;Total ram usage:        0 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    4
  3876 ;; This function calls:
  3877 ;;		_delay_ms
  3878 ;; This function is called by:
  3879 ;;		_LCD_send_command
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text11
  3884  001628                     __ptext11:
  3885                           	opt stack 0
  3886  001628                     _LCD_enable_pulse:
  3887                           	opt stack 24
  3888                           
  3889                           ;src\LCD_44780.c: 51: LATDbits.LATD3 = 1;
  3890                           
  3891                           ;incstack = 0
  3892  001628  868C               	bsf	3980,3,c	;volatile
  3893                           
  3894                           ;src\LCD_44780.c: 52: delay_ms (1);
  3895  00162A  0E00               	movlw	0
  3896  00162C  6E22               	movwf	delay_ms@value_ms+1,c
  3897  00162E  0E01               	movlw	1
  3898  001630  6E21               	movwf	delay_ms@value_ms,c
  3899  001632  EC93  F00A         	call	_delay_ms	;wreg free
  3900                           
  3901                           ;src\LCD_44780.c: 53: LATDbits.LATD3 = 0;
  3902  001636  968C               	bcf	3980,3,c	;volatile
  3903                           
  3904                           ;src\LCD_44780.c: 54: delay_ms (1);
  3905  001638  0E00               	movlw	0
  3906  00163A  6E22               	movwf	delay_ms@value_ms+1,c
  3907  00163C  0E01               	movlw	1
  3908  00163E  6E21               	movwf	delay_ms@value_ms,c
  3909  001640  EC93  F00A         	call	_delay_ms	;wreg free
  3910  001644  0012               	return		;funcret
  3911  001646                     __end_of_LCD_enable_pulse:
  3912                           	opt stack 0
  3913                           tblptru	equ	0xFF8
  3914                           tblptrh	equ	0xFF7
  3915                           tblptrl	equ	0xFF6
  3916                           tablat	equ	0xFF5
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           status	equ	0xFD8
  3920                           
  3921 ;; *************** function _delay_ms *****************
  3922 ;; Defined at:
  3923 ;;		line 61 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  value_ms        2   32[COMRAM] unsigned int 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3937 ;;      Params:         2       0       0       0
  3938 ;;      Locals:         0       0       0       0
  3939 ;;      Temps:          0       0       0       0
  3940 ;;      Totals:         2       0       0       0
  3941 ;;Total ram usage:        2 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    3
  3944 ;; This function calls:
  3945 ;;		___wmul
  3946 ;; This function is called by:
  3947 ;;		_LCD_enable_pulse
  3948 ;;		_LCD_initialize
  3949 ;;		_delay_s
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text12
  3954  001526                     __ptext12:
  3955                           	opt stack 0
  3956  001526                     _delay_ms:
  3957                           	opt stack 26
  3958                           
  3959                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3960                           
  3961                           ;incstack = 0
  3962  001526  C044  F01B         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3963  00152A  6A1C               	clrf	___wmul@multiplier+1,c
  3964  00152C  C021  F01D         	movff	delay_ms@value_ms,___wmul@multiplicand
  3965  001530  C022  F01E         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3966  001534  EC01  F00B         	call	___wmul	;wreg free
  3967  001538  C01B  F033         	movff	?___wmul,_clock_counter_reference	;volatile
  3968  00153C  C01C  F034         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3969                           
  3970                           ;src\delay.c: 75: while (clock_counter_reference) {
  3971  001540  D006               	goto	l533
  3972  001542                     l2393:
  3973                           
  3974                           ;src\delay.c: 85: _delay(240);
  3975  001542  0E50               	movlw	80
  3976  001544                     u4347:
  3977  001544  2EE8               	decfsz	wreg,f,c
  3978  001546  D7FE               	goto	u4347
  3979                           
  3980                           ;src\delay.c: 88: clock_counter_reference--;
  3981  001548  0633               	decf	_clock_counter_reference,f,c	;volatile
  3982  00154A  A0D8               	btfss	status,0,c
  3983  00154C  0634               	decf	_clock_counter_reference+1,f,c	;volatile
  3984  00154E                     l533:
  3985  00154E  5033               	movf	_clock_counter_reference,w,c	;volatile
  3986  001550  1034               	iorwf	_clock_counter_reference+1,w,c	;volatile
  3987  001552  B4D8               	btfsc	status,2,c
  3988  001554  0012               	return	
  3989  001556  D7F5               	goto	l2393
  3990  001558                     __end_of_delay_ms:
  3991                           	opt stack 0
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           status	equ	0xFD8
  3999                           
  4000 ;; *************** function ___wmul *****************
  4001 ;; Defined at:
  4002 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  multiplier      2   26[COMRAM] unsigned int 
  4005 ;;  multiplicand    2   28[COMRAM] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  product         2   30[COMRAM] unsigned int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2   26[COMRAM] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, prodl, prodh
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4017 ;;      Params:         4       0       0       0
  4018 ;;      Locals:         2       0       0       0
  4019 ;;      Temps:          0       0       0       0
  4020 ;;      Totals:         6       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    2
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_delay_ms
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text13
  4032  001602                     __ptext13:
  4033                           	opt stack 0
  4034  001602                     ___wmul:
  4035                           	opt stack 26
  4036                           
  4037                           ;incstack = 0
  4038  001602  501B               	movf	___wmul@multiplier,w,c
  4039  001604  021D               	mulwf	___wmul@multiplicand,c
  4040  001606  CFF3 F01F          	movff	prodl,___wmul@product
  4041  00160A  CFF4 F020          	movff	prodh,___wmul@product+1
  4042  00160E  501B               	movf	___wmul@multiplier,w,c
  4043  001610  021E               	mulwf	___wmul@multiplicand+1,c
  4044  001612  50F3               	movf	prodl,w,c
  4045  001614  2620               	addwf	___wmul@product+1,f,c
  4046  001616  501C               	movf	___wmul@multiplier+1,w,c
  4047  001618  021D               	mulwf	___wmul@multiplicand,c
  4048  00161A  50F3               	movf	prodl,w,c
  4049  00161C  2620               	addwf	___wmul@product+1,f,c
  4050  00161E  C01F  F01B         	movff	___wmul@product,?___wmul
  4051  001622  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  4052  001626  0012               	return	
  4053  001628                     __end_of___wmul:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _ISR_Alta *****************
  4066 ;; Defined at:
  4067 ;;		line 12 in file "lcdCan.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4081 ;;      Params:         0       0       0       0
  4082 ;;      Locals:         0       0       0       0
  4083 ;;      Temps:         14       0       0       0
  4084 ;;      Totals:        14       0       0       0
  4085 ;;Total ram usage:       14 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    1
  4088 ;; This function calls:
  4089 ;;		_CANisRxReady
  4090 ;;		_CANreceiveMessage
  4091 ;; This function is called by:
  4092 ;;		Interrupt level 2
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	intcode
  4097  000008                     __pintcode:
  4098                           	opt stack 0
  4099  000008                     _ISR_Alta:
  4100                           	opt stack 23
  4101                           
  4102                           ;incstack = 0
  4103  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4104  00000A  CFFA F00D          	movff	pclath,??_ISR_Alta
  4105  00000E  CFFB F00E          	movff	pclatu,??_ISR_Alta+1
  4106  000012  ED26  F00A         	call	int_func,f	;refresh shadow registers
  4107                           pclatu	equ	0xFFB
  4108                           pclath	equ	0xFFA
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           status	equ	0xFD8
  4118                           
  4119                           	psect	intcode_body
  4120  00144C                     __pintcode_body:
  4121                           	opt stack 23
  4122  00144C                     int_func:
  4123                           	opt stack 23
  4124  00144C  0006               	pop		; remove dummy address from shadow register refresh
  4125  00144E  CFE9 F00F          	movff	fsr0l,??_ISR_Alta+2
  4126  001452  CFEA F010          	movff	fsr0h,??_ISR_Alta+3
  4127  001456  CFE1 F011          	movff	fsr1l,??_ISR_Alta+4
  4128  00145A  CFE2 F012          	movff	fsr1h,??_ISR_Alta+5
  4129  00145E  CFD9 F013          	movff	fsr2l,??_ISR_Alta+6
  4130  001462  CFDA F014          	movff	fsr2h,??_ISR_Alta+7
  4131  001466  CFF3 F015          	movff	prodl,??_ISR_Alta+8
  4132  00146A  CFF4 F016          	movff	prodh,??_ISR_Alta+9
  4133  00146E  CFF6 F017          	movff	tblptrl,??_ISR_Alta+10
  4134  001472  CFF7 F018          	movff	tblptrh,??_ISR_Alta+11
  4135  001476  CFF8 F019          	movff	tblptru,??_ISR_Alta+12
  4136  00147A  CFF5 F01A          	movff	tablat,??_ISR_Alta+13
  4137                           
  4138                           ;lcdCan.c: 13: if (CANisRxReady()) {
  4139  00147E  EC23  F00B         	call	_CANisRxReady	;wreg free
  4140  001482  0900               	iorlw	0
  4141  001484  B4D8               	btfsc	status,2,c
  4142  001486  D008               	goto	i2l624
  4143                           
  4144                           ;lcdCan.c: 14: CANreceiveMessage(&msg);
  4145  001488  0E35               	movlw	low _msg
  4146  00148A  6E01               	movwf	CANreceiveMessage@msg,c
  4147  00148C  0E00               	movlw	high _msg
  4148  00148E  6E02               	movwf	CANreceiveMessage@msg+1,c
  4149  001490  ECBB  F004         	call	_CANreceiveMessage	;wreg free
  4150                           
  4151                           ;lcdCan.c: 15: PIR3bits.RXB0IF = 0;
  4152  001494  90A4               	bcf	4004,0,c	;volatile
  4153                           
  4154                           ;lcdCan.c: 16: PIR3bits.RXB1IF = 0;
  4155  001496  92A4               	bcf	4004,1,c	;volatile
  4156  001498                     i2l624:
  4157  001498  C01A  FFF5         	movff	??_ISR_Alta+13,tablat
  4158  00149C  C019  FFF8         	movff	??_ISR_Alta+12,tblptru
  4159  0014A0  C018  FFF7         	movff	??_ISR_Alta+11,tblptrh
  4160  0014A4  C017  FFF6         	movff	??_ISR_Alta+10,tblptrl
  4161  0014A8  C016  FFF4         	movff	??_ISR_Alta+9,prodh
  4162  0014AC  C015  FFF3         	movff	??_ISR_Alta+8,prodl
  4163  0014B0  C014  FFDA         	movff	??_ISR_Alta+7,fsr2h
  4164  0014B4  C013  FFD9         	movff	??_ISR_Alta+6,fsr2l
  4165  0014B8  C012  FFE2         	movff	??_ISR_Alta+5,fsr1h
  4166  0014BC  C011  FFE1         	movff	??_ISR_Alta+4,fsr1l
  4167  0014C0  C010  FFEA         	movff	??_ISR_Alta+3,fsr0h
  4168  0014C4  C00F  FFE9         	movff	??_ISR_Alta+2,fsr0l
  4169  0014C8  C00E  FFFB         	movff	??_ISR_Alta+1,pclatu
  4170  0014CC  C00D  FFFA         	movff	??_ISR_Alta,pclath
  4171  0014D0  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4172  0014D2  0011               	retfie		f
  4173  0014D4                     __end_of_ISR_Alta:
  4174                           	opt stack 0
  4175                           pclatu	equ	0xFFB
  4176                           pclath	equ	0xFFA
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           prodh	equ	0xFF4
  4182                           prodl	equ	0xFF3
  4183                           postinc0	equ	0xFEE
  4184                           fsr0h	equ	0xFEA
  4185                           fsr0l	equ	0xFE9
  4186                           wreg	equ	0xFE8
  4187                           fsr1h	equ	0xFE2
  4188                           fsr1l	equ	0xFE1
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           
  4193 ;; *************** function _CANreceiveMessage *****************
  4194 ;; Defined at:
  4195 ;;		line 528 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  msg             2    0[COMRAM] PTR struct .
  4198 ;;		 -> msg(15), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  tamp            1   11[COMRAM] unsigned char 
  4201 ;;  error           1   10[COMRAM] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      unsigned char 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4211 ;;      Params:         2       0       0       0
  4212 ;;      Locals:         2       0       0       0
  4213 ;;      Temps:          8       0       0       0
  4214 ;;      Totals:        12       0       0       0
  4215 ;;Total ram usage:       12 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_ISR_Alta
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text15
  4225  000976                     __ptext15:
  4226                           	opt stack 0
  4227  000976                     _CANreceiveMessage:
  4228                           	opt stack 23
  4229                           
  4230                           ;inc\CANlib.h: 530: BYTE tamp;
  4231                           ;inc\CANlib.h: 531: BYTE error = 0;
  4232                           
  4233                           ;incstack = 0
  4234  000976  0E00               	movlw	0
  4235  000978  6E0B               	movwf	CANreceiveMessage@error,c
  4236                           
  4237                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  4238  00097A  BE74               	btfsc	3956,7,c	;volatile
  4239                           
  4240                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  4241  00097C  800B               	bsf	CANreceiveMessage@error,0,c
  4242                           
  4243                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  4244  00097E  BC74               	btfsc	3956,6,c	;volatile
  4245                           
  4246                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  4247  000980  820B               	bsf	CANreceiveMessage@error,1,c
  4248                           
  4249                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  4250  000982  010F               	movlb	15	; () banked
  4251  000984  AF50               	btfss	80,7,b	;volatile
  4252  000986  D143               	goto	i2l374
  4253                           
  4254                           ; BSR set to: 15
  4255                           ;inc\CANlib.h: 541: {
  4256                           ;inc\CANlib.h: 542: msg->identifier = 0;
  4257  000988  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4258  00098C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4259  000990  6ADE               	clrf	postinc2,c
  4260  000992  6ADE               	clrf	postinc2,c
  4261  000994  6ADE               	clrf	postinc2,c
  4262  000996  6ADD               	clrf	postdec2,c
  4263                           
  4264                           ; BSR set to: 15
  4265                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  4266  000998  EE20 F004          	lfsr	2,4
  4267  00099C  5001               	movf	CANreceiveMessage@msg,w,c
  4268  00099E  26D9               	addwf	fsr2l,f,c
  4269  0009A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  4270  0009A2  22DA               	addwfc	fsr2h,f,c
  4271  0009A4  CF56 FFDF          	movff	3926,indf2	;volatile
  4272                           
  4273                           ; BSR set to: 15
  4274                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  4275  0009A8  EE20 F005          	lfsr	2,5
  4276  0009AC  5001               	movf	CANreceiveMessage@msg,w,c
  4277  0009AE  26D9               	addwf	fsr2l,f,c
  4278  0009B0  5002               	movf	CANreceiveMessage@msg+1,w,c
  4279  0009B2  22DA               	addwfc	fsr2h,f,c
  4280  0009B4  CF57 FFDF          	movff	3927,indf2	;volatile
  4281                           
  4282                           ; BSR set to: 15
  4283                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  4284  0009B8  EE20 F006          	lfsr	2,6
  4285  0009BC  5001               	movf	CANreceiveMessage@msg,w,c
  4286  0009BE  26D9               	addwf	fsr2l,f,c
  4287  0009C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  4288  0009C2  22DA               	addwfc	fsr2h,f,c
  4289  0009C4  CF58 FFDF          	movff	3928,indf2	;volatile
  4290                           
  4291                           ; BSR set to: 15
  4292                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  4293  0009C8  EE20 F007          	lfsr	2,7
  4294  0009CC  5001               	movf	CANreceiveMessage@msg,w,c
  4295  0009CE  26D9               	addwf	fsr2l,f,c
  4296  0009D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  4297  0009D2  22DA               	addwfc	fsr2h,f,c
  4298  0009D4  CF59 FFDF          	movff	3929,indf2	;volatile
  4299                           
  4300                           ; BSR set to: 15
  4301                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  4302  0009D8  EE20 F008          	lfsr	2,8
  4303  0009DC  5001               	movf	CANreceiveMessage@msg,w,c
  4304  0009DE  26D9               	addwf	fsr2l,f,c
  4305  0009E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  4306  0009E2  22DA               	addwfc	fsr2h,f,c
  4307  0009E4  CF5A FFDF          	movff	3930,indf2	;volatile
  4308                           
  4309                           ; BSR set to: 15
  4310                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  4311  0009E8  EE20 F009          	lfsr	2,9
  4312  0009EC  5001               	movf	CANreceiveMessage@msg,w,c
  4313  0009EE  26D9               	addwf	fsr2l,f,c
  4314  0009F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  4315  0009F2  22DA               	addwfc	fsr2h,f,c
  4316  0009F4  CF5B FFDF          	movff	3931,indf2	;volatile
  4317                           
  4318                           ; BSR set to: 15
  4319                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  4320  0009F8  EE20 F00A          	lfsr	2,10
  4321  0009FC  5001               	movf	CANreceiveMessage@msg,w,c
  4322  0009FE  26D9               	addwf	fsr2l,f,c
  4323  000A00  5002               	movf	CANreceiveMessage@msg+1,w,c
  4324  000A02  22DA               	addwfc	fsr2h,f,c
  4325  000A04  CF5C FFDF          	movff	3932,indf2	;volatile
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  4329  000A08  EE20 F00B          	lfsr	2,11
  4330  000A0C  5001               	movf	CANreceiveMessage@msg,w,c
  4331  000A0E  26D9               	addwf	fsr2l,f,c
  4332  000A10  5002               	movf	CANreceiveMessage@msg+1,w,c
  4333  000A12  22DA               	addwfc	fsr2h,f,c
  4334  000A14  CF5D FFDF          	movff	3933,indf2	;volatile
  4335                           
  4336                           ; BSR set to: 15
  4337                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  4338  000A18  EE20 F00E          	lfsr	2,14
  4339  000A1C  5001               	movf	CANreceiveMessage@msg,w,c
  4340  000A1E  26D9               	addwf	fsr2l,f,c
  4341  000A20  5002               	movf	CANreceiveMessage@msg+1,w,c
  4342  000A22  22DA               	addwfc	fsr2h,f,c
  4343  000A24  010F               	movlb	15	; () banked
  4344  000A26  AD55               	btfss	85,6,b	;volatile
  4345  000A28  D002               	goto	i2u297_40
  4346  000A2A  0E01               	movlw	1
  4347  000A2C  D001               	goto	i2u297_46
  4348  000A2E                     i2u297_40:
  4349  000A2E  0E00               	movlw	0
  4350  000A30                     i2u297_46:
  4351  000A30  6EDF               	movwf	indf2,c
  4352                           
  4353                           ; BSR set to: 15
  4354                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  4355  000A32  EE20 F00D          	lfsr	2,13
  4356  000A36  5001               	movf	CANreceiveMessage@msg,w,c
  4357  000A38  26D9               	addwf	fsr2l,f,c
  4358  000A3A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4359  000A3C  22DA               	addwfc	fsr2h,f,c
  4360  000A3E  010F               	movlb	15	; () banked
  4361  000A40  5155               	movf	85,w,b	;volatile
  4362  000A42  0B0F               	andlw	15
  4363  000A44  6EDF               	movwf	indf2,c
  4364                           
  4365                           ; BSR set to: 15
  4366                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  4367  000A46  EE20 F00C          	lfsr	2,12
  4368  000A4A  5001               	movf	CANreceiveMessage@msg,w,c
  4369  000A4C  26D9               	addwf	fsr2l,f,c
  4370  000A4E  5002               	movf	CANreceiveMessage@msg+1,w,c
  4371  000A50  22DA               	addwfc	fsr2h,f,c
  4372  000A52  010F               	movlb	15	; () banked
  4373  000A54  A752               	btfss	82,3,b	;volatile
  4374  000A56  D002               	goto	i2u298_40
  4375  000A58  0E01               	movlw	1
  4376  000A5A  D001               	goto	i2u298_46
  4377  000A5C                     i2u298_40:
  4378  000A5C  0E00               	movlw	0
  4379  000A5E                     i2u298_46:
  4380  000A5E  6EDF               	movwf	indf2,c
  4381                           
  4382                           ; BSR set to: 15
  4383                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  4384  000A60  010F               	movlb	15	; () banked
  4385  000A62  B752               	btfsc	82,3,b	;volatile
  4386  000A64  D044               	goto	i2l2935
  4387                           
  4388                           ; BSR set to: 15
  4389                           ;inc\CANlib.h: 559: {
  4390                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  4391  000A66  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  4392  000A6A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4393  000A6C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4394  000A6E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4395  000A70  0E03               	movlw	3
  4396  000A72                     i2u300_45:
  4397  000A72  90D8               	bcf	status,0,c
  4398  000A74  3603               	rlcf	??_CANreceiveMessage,f,c
  4399  000A76  3604               	rlcf	??_CANreceiveMessage+1,f,c
  4400  000A78  3605               	rlcf	??_CANreceiveMessage+2,f,c
  4401  000A7A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  4402  000A7C  2EE8               	decfsz	wreg,f,c
  4403  000A7E  D7F9               	goto	i2u300_45
  4404  000A80  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4405  000A84  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4406  000A88  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  4407  000A8C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  4408  000A90  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  4409  000A94  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  4410                           
  4411                           ; BSR set to: 15
  4412                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  4413  000A98  010F               	movlb	15	; () banked
  4414  000A9A  3952               	swapf	82,w,b	;volatile
  4415  000A9C  42E8               	rrncf	wreg,f,c
  4416  000A9E  0B07               	andlw	7
  4417  000AA0  0B07               	andlw	7
  4418  000AA2  6E0C               	movwf	CANreceiveMessage@tamp,c
  4419                           
  4420                           ; BSR set to: 15
  4421                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  4422  000AA4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4423  000AA8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4424  000AAC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  4425  000AB0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  4426  000AB4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  4427  000AB8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  4428  000ABC  500C               	movf	CANreceiveMessage@tamp,w,c
  4429  000ABE  2403               	addwf	??_CANreceiveMessage,w,c
  4430  000AC0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  4431  000AC2  0E00               	movlw	0
  4432  000AC4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  4433  000AC6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  4434  000AC8  0E00               	movlw	0
  4435  000ACA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  4436  000ACC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  4437  000ACE  0E00               	movlw	0
  4438  000AD0  2006               	addwfc	??_CANreceiveMessage+3,w,c
  4439  000AD2  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  4440  000AD4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4441  000AD8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4442  000ADC  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  4443  000AE0  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  4444  000AE4  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  4445  000AE8  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  4446                           
  4447                           ;inc\CANlib.h: 563: }
  4448  000AEC  D08D               	goto	i2l2961
  4449  000AEE                     i2l2935:
  4450                           
  4451                           ; BSR set to: 15
  4452                           ;inc\CANlib.h: 564: else
  4453                           ;inc\CANlib.h: 565: {
  4454                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  4455  000AEE  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  4456  000AF2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4457  000AF4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4458  000AF6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4459  000AF8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4460  000AFC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4461  000B00  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  4462  000B04  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  4463  000B08  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  4464  000B0C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  4468  000B10  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  4469  000B14  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4470  000B16  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4471  000B18  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4472  000B1A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  4473  000B1E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  4474  000B22  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  4475  000B26  6A03               	clrf	??_CANreceiveMessage,c
  4476  000B28  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4477  000B2C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4478  000B30  5003               	movf	??_CANreceiveMessage,w,c
  4479  000B32  26DE               	addwf	postinc2,f,c
  4480  000B34  5004               	movf	??_CANreceiveMessage+1,w,c
  4481  000B36  22DE               	addwfc	postinc2,f,c
  4482  000B38  5005               	movf	??_CANreceiveMessage+2,w,c
  4483  000B3A  22DE               	addwfc	postinc2,f,c
  4484  000B3C  5006               	movf	??_CANreceiveMessage+3,w,c
  4485  000B3E  22DE               	addwfc	postinc2,f,c
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  4489  000B40  010F               	movlb	15	; () banked
  4490  000B42  A152               	btfss	82,0,b	;volatile
  4491  000B44  D00C               	goto	i2l2943
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  4495  000B46  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4496  000B4A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4497  000B4E  0E00               	movlw	0
  4498  000B50  12DE               	iorwf	postinc2,f,c
  4499  000B52  0E00               	movlw	0
  4500  000B54  12DE               	iorwf	postinc2,f,c
  4501  000B56  0E01               	movlw	1
  4502  000B58  12DE               	iorwf	postinc2,f,c
  4503  000B5A  0E00               	movlw	0
  4504  000B5C  12DE               	iorwf	postinc2,f,c
  4505  000B5E                     i2l2943:
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  4509  000B5E  010F               	movlb	15	; () banked
  4510  000B60  A352               	btfss	82,1,b	;volatile
  4511  000B62  D00C               	goto	i2l2947
  4512                           
  4513                           ; BSR set to: 15
  4514                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  4515  000B64  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4516  000B68  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4517  000B6C  0E00               	movlw	0
  4518  000B6E  12DE               	iorwf	postinc2,f,c
  4519  000B70  0E00               	movlw	0
  4520  000B72  12DE               	iorwf	postinc2,f,c
  4521  000B74  0E02               	movlw	2
  4522  000B76  12DE               	iorwf	postinc2,f,c
  4523  000B78  0E00               	movlw	0
  4524  000B7A  12DE               	iorwf	postinc2,f,c
  4525  000B7C                     i2l2947:
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  4529  000B7C  010F               	movlb	15	; () banked
  4530  000B7E  AB52               	btfss	82,5,b	;volatile
  4531  000B80  D00C               	goto	i2l2951
  4532                           
  4533                           ; BSR set to: 15
  4534                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  4535  000B82  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4536  000B86  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4537  000B8A  0E00               	movlw	0
  4538  000B8C  12DE               	iorwf	postinc2,f,c
  4539  000B8E  0E00               	movlw	0
  4540  000B90  12DE               	iorwf	postinc2,f,c
  4541  000B92  0E04               	movlw	4
  4542  000B94  12DE               	iorwf	postinc2,f,c
  4543  000B96  0E00               	movlw	0
  4544  000B98  12DE               	iorwf	postinc2,f,c
  4545  000B9A                     i2l2951:
  4546                           
  4547                           ; BSR set to: 15
  4548                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  4549  000B9A  010F               	movlb	15	; () banked
  4550  000B9C  AD52               	btfss	82,6,b	;volatile
  4551  000B9E  D00C               	goto	i2l2955
  4552                           
  4553                           ; BSR set to: 15
  4554                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  4555  000BA0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4556  000BA4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4557  000BA8  0E00               	movlw	0
  4558  000BAA  12DE               	iorwf	postinc2,f,c
  4559  000BAC  0E00               	movlw	0
  4560  000BAE  12DE               	iorwf	postinc2,f,c
  4561  000BB0  0E08               	movlw	8
  4562  000BB2  12DE               	iorwf	postinc2,f,c
  4563  000BB4  0E00               	movlw	0
  4564  000BB6  12DE               	iorwf	postinc2,f,c
  4565  000BB8                     i2l2955:
  4566                           
  4567                           ; BSR set to: 15
  4568                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  4569  000BB8  010F               	movlb	15	; () banked
  4570  000BBA  AF52               	btfss	82,7,b	;volatile
  4571  000BBC  D00C               	goto	i2l2959
  4572                           
  4573                           ; BSR set to: 15
  4574                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  4575  000BBE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4576  000BC2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4577  000BC6  0E00               	movlw	0
  4578  000BC8  12DE               	iorwf	postinc2,f,c
  4579  000BCA  0E00               	movlw	0
  4580  000BCC  12DE               	iorwf	postinc2,f,c
  4581  000BCE  0E10               	movlw	16
  4582  000BD0  12DE               	iorwf	postinc2,f,c
  4583  000BD2  0E00               	movlw	0
  4584  000BD4  12DE               	iorwf	postinc2,f,c
  4585  000BD6                     i2l2959:
  4586                           
  4587                           ; BSR set to: 15
  4588                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  4589  000BD6  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  4590  000BDA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4591  000BDC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4592  000BDE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4593  000BE0  0E15               	movlw	21
  4594  000BE2                     i2u306_45:
  4595  000BE2  90D8               	bcf	status,0,c
  4596  000BE4  3603               	rlcf	??_CANreceiveMessage,f,c
  4597  000BE6  3604               	rlcf	??_CANreceiveMessage+1,f,c
  4598  000BE8  3605               	rlcf	??_CANreceiveMessage+2,f,c
  4599  000BEA  3606               	rlcf	??_CANreceiveMessage+3,f,c
  4600  000BEC  2EE8               	decfsz	wreg,f,c
  4601  000BEE  D7F9               	goto	i2u306_45
  4602  000BF0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4603  000BF4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4604  000BF8  5003               	movf	??_CANreceiveMessage,w,c
  4605  000BFA  12DE               	iorwf	postinc2,f,c
  4606  000BFC  5004               	movf	??_CANreceiveMessage+1,w,c
  4607  000BFE  12DE               	iorwf	postinc2,f,c
  4608  000C00  5005               	movf	??_CANreceiveMessage+2,w,c
  4609  000C02  12DE               	iorwf	postinc2,f,c
  4610  000C04  5006               	movf	??_CANreceiveMessage+3,w,c
  4611  000C06  12DE               	iorwf	postinc2,f,c
  4612  000C08                     i2l2961:
  4613                           
  4614                           ; BSR set to: 15
  4615                           ;inc\CANlib.h: 581: }
  4616                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  4617  000C08  010F               	movlb	15	; () banked
  4618  000C0A  9F50               	bcf	80,7,b	;volatile
  4619                           
  4620                           ; BSR set to: 15
  4621                           ;inc\CANlib.h: 584: return (error);
  4622                           ;	Return value of _CANreceiveMessage is never used
  4623  000C0C  0012               	return	
  4624  000C0E                     i2l374:
  4625                           
  4626                           ; BSR set to: 15
  4627                           ;inc\CANlib.h: 585: }
  4628                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  4629  000C0E  AE60               	btfss	3936,7,c	;volatile
  4630  000C10  0012               	return	
  4631                           
  4632                           ; BSR set to: 15
  4633                           ;inc\CANlib.h: 588: {
  4634                           ;inc\CANlib.h: 589: msg->identifier = 0;
  4635  000C12  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4636  000C16  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4637  000C1A  6ADE               	clrf	postinc2,c
  4638  000C1C  6ADE               	clrf	postinc2,c
  4639  000C1E  6ADE               	clrf	postinc2,c
  4640  000C20  6ADD               	clrf	postdec2,c
  4641                           
  4642                           ; BSR set to: 15
  4643                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  4644  000C22  EE20 F004          	lfsr	2,4
  4645  000C26  5001               	movf	CANreceiveMessage@msg,w,c
  4646  000C28  26D9               	addwf	fsr2l,f,c
  4647  000C2A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4648  000C2C  22DA               	addwfc	fsr2h,f,c
  4649  000C2E  CF66 FFDF          	movff	3942,indf2	;volatile
  4650                           
  4651                           ; BSR set to: 15
  4652                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  4653  000C32  EE20 F005          	lfsr	2,5
  4654  000C36  5001               	movf	CANreceiveMessage@msg,w,c
  4655  000C38  26D9               	addwf	fsr2l,f,c
  4656  000C3A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4657  000C3C  22DA               	addwfc	fsr2h,f,c
  4658  000C3E  CF67 FFDF          	movff	3943,indf2	;volatile
  4659                           
  4660                           ; BSR set to: 15
  4661                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  4662  000C42  EE20 F006          	lfsr	2,6
  4663  000C46  5001               	movf	CANreceiveMessage@msg,w,c
  4664  000C48  26D9               	addwf	fsr2l,f,c
  4665  000C4A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4666  000C4C  22DA               	addwfc	fsr2h,f,c
  4667  000C4E  CF68 FFDF          	movff	3944,indf2	;volatile
  4668                           
  4669                           ; BSR set to: 15
  4670                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  4671  000C52  EE20 F007          	lfsr	2,7
  4672  000C56  5001               	movf	CANreceiveMessage@msg,w,c
  4673  000C58  26D9               	addwf	fsr2l,f,c
  4674  000C5A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4675  000C5C  22DA               	addwfc	fsr2h,f,c
  4676  000C5E  CF69 FFDF          	movff	3945,indf2	;volatile
  4677                           
  4678                           ; BSR set to: 15
  4679                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  4680  000C62  EE20 F008          	lfsr	2,8
  4681  000C66  5001               	movf	CANreceiveMessage@msg,w,c
  4682  000C68  26D9               	addwf	fsr2l,f,c
  4683  000C6A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4684  000C6C  22DA               	addwfc	fsr2h,f,c
  4685  000C6E  CF6A FFDF          	movff	3946,indf2	;volatile
  4686                           
  4687                           ; BSR set to: 15
  4688                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  4689  000C72  EE20 F009          	lfsr	2,9
  4690  000C76  5001               	movf	CANreceiveMessage@msg,w,c
  4691  000C78  26D9               	addwf	fsr2l,f,c
  4692  000C7A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4693  000C7C  22DA               	addwfc	fsr2h,f,c
  4694  000C7E  CF6B FFDF          	movff	3947,indf2	;volatile
  4695                           
  4696                           ; BSR set to: 15
  4697                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  4698  000C82  EE20 F00A          	lfsr	2,10
  4699  000C86  5001               	movf	CANreceiveMessage@msg,w,c
  4700  000C88  26D9               	addwf	fsr2l,f,c
  4701  000C8A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4702  000C8C  22DA               	addwfc	fsr2h,f,c
  4703  000C8E  CF6C FFDF          	movff	3948,indf2	;volatile
  4704                           
  4705                           ; BSR set to: 15
  4706                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  4707  000C92  EE20 F00B          	lfsr	2,11
  4708  000C96  5001               	movf	CANreceiveMessage@msg,w,c
  4709  000C98  26D9               	addwf	fsr2l,f,c
  4710  000C9A  5002               	movf	CANreceiveMessage@msg+1,w,c
  4711  000C9C  22DA               	addwfc	fsr2h,f,c
  4712  000C9E  CF6D FFDF          	movff	3949,indf2	;volatile
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  4716  000CA2  EE20 F00E          	lfsr	2,14
  4717  000CA6  5001               	movf	CANreceiveMessage@msg,w,c
  4718  000CA8  26D9               	addwf	fsr2l,f,c
  4719  000CAA  5002               	movf	CANreceiveMessage@msg+1,w,c
  4720  000CAC  22DA               	addwfc	fsr2h,f,c
  4721  000CAE  AC65               	btfss	3941,6,c	;volatile
  4722  000CB0  D002               	goto	i2u308_40
  4723  000CB2  0E01               	movlw	1
  4724  000CB4  D001               	goto	i2u308_46
  4725  000CB6                     i2u308_40:
  4726  000CB6  0E00               	movlw	0
  4727  000CB8                     i2u308_46:
  4728  000CB8  6EDF               	movwf	indf2,c
  4729                           
  4730                           ; BSR set to: 15
  4731                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  4732  000CBA  EE20 F00D          	lfsr	2,13
  4733  000CBE  5001               	movf	CANreceiveMessage@msg,w,c
  4734  000CC0  26D9               	addwf	fsr2l,f,c
  4735  000CC2  5002               	movf	CANreceiveMessage@msg+1,w,c
  4736  000CC4  22DA               	addwfc	fsr2h,f,c
  4737  000CC6  5065               	movf	3941,w,c	;volatile
  4738  000CC8  0B0F               	andlw	15
  4739  000CCA  6EDF               	movwf	indf2,c
  4740                           
  4741                           ; BSR set to: 15
  4742                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  4743  000CCC  EE20 F00C          	lfsr	2,12
  4744  000CD0  5001               	movf	CANreceiveMessage@msg,w,c
  4745  000CD2  26D9               	addwf	fsr2l,f,c
  4746  000CD4  5002               	movf	CANreceiveMessage@msg+1,w,c
  4747  000CD6  22DA               	addwfc	fsr2h,f,c
  4748  000CD8  A662               	btfss	3938,3,c	;volatile
  4749  000CDA  D002               	goto	i2u309_40
  4750  000CDC  0E01               	movlw	1
  4751  000CDE  D001               	goto	i2u309_46
  4752  000CE0                     i2u309_40:
  4753  000CE0  0E00               	movlw	0
  4754  000CE2                     i2u309_46:
  4755  000CE2  6EDF               	movwf	indf2,c
  4756                           
  4757                           ; BSR set to: 15
  4758                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  4759  000CE4  B662               	btfsc	3938,3,c	;volatile
  4760  000CE6  D043               	goto	i2l2997
  4761                           
  4762                           ; BSR set to: 15
  4763                           ;inc\CANlib.h: 606: {
  4764                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  4765  000CE8  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  4766  000CEC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4767  000CEE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4768  000CF0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4769  000CF2  0E03               	movlw	3
  4770  000CF4                     i2u311_45:
  4771  000CF4  90D8               	bcf	status,0,c
  4772  000CF6  3603               	rlcf	??_CANreceiveMessage,f,c
  4773  000CF8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  4774  000CFA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  4775  000CFC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  4776  000CFE  2EE8               	decfsz	wreg,f,c
  4777  000D00  D7F9               	goto	i2u311_45
  4778  000D02  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4779  000D06  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4780  000D0A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  4781  000D0E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  4782  000D12  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  4783  000D16  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  4784                           
  4785                           ; BSR set to: 15
  4786                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  4787  000D1A  3862               	swapf	3938,w,c	;volatile
  4788  000D1C  42E8               	rrncf	wreg,f,c
  4789  000D1E  0B07               	andlw	7
  4790  000D20  0B07               	andlw	7
  4791  000D22  6E0C               	movwf	CANreceiveMessage@tamp,c
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  4795  000D24  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4796  000D28  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4797  000D2C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  4798  000D30  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  4799  000D34  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  4800  000D38  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  4801  000D3C  500C               	movf	CANreceiveMessage@tamp,w,c
  4802  000D3E  2403               	addwf	??_CANreceiveMessage,w,c
  4803  000D40  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  4804  000D42  0E00               	movlw	0
  4805  000D44  2004               	addwfc	??_CANreceiveMessage+1,w,c
  4806  000D46  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  4807  000D48  0E00               	movlw	0
  4808  000D4A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  4809  000D4C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  4810  000D4E  0E00               	movlw	0
  4811  000D50  2006               	addwfc	??_CANreceiveMessage+3,w,c
  4812  000D52  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  4813  000D54  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4814  000D58  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4815  000D5C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  4816  000D60  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  4817  000D64  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  4818  000D68  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  4819                           
  4820                           ;inc\CANlib.h: 610: }
  4821  000D6C  D088               	goto	i2l3023
  4822  000D6E                     i2l2997:
  4823                           
  4824                           ; BSR set to: 15
  4825                           ;inc\CANlib.h: 611: else
  4826                           ;inc\CANlib.h: 612: {
  4827                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  4828  000D6E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  4829  000D72  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4830  000D74  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4831  000D76  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4832  000D78  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4833  000D7C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4834  000D80  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  4835  000D84  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  4836  000D88  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  4837  000D8C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  4838                           
  4839                           ; BSR set to: 15
  4840                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  4841  000D90  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  4842  000D94  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4843  000D96  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4844  000D98  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4845  000D9A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  4846  000D9E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  4847  000DA2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  4848  000DA6  6A03               	clrf	??_CANreceiveMessage,c
  4849  000DA8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4850  000DAC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4851  000DB0  5003               	movf	??_CANreceiveMessage,w,c
  4852  000DB2  26DE               	addwf	postinc2,f,c
  4853  000DB4  5004               	movf	??_CANreceiveMessage+1,w,c
  4854  000DB6  22DE               	addwfc	postinc2,f,c
  4855  000DB8  5005               	movf	??_CANreceiveMessage+2,w,c
  4856  000DBA  22DE               	addwfc	postinc2,f,c
  4857  000DBC  5006               	movf	??_CANreceiveMessage+3,w,c
  4858  000DBE  22DE               	addwfc	postinc2,f,c
  4859                           
  4860                           ; BSR set to: 15
  4861                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  4862  000DC0  A062               	btfss	3938,0,c	;volatile
  4863  000DC2  D00C               	goto	i2l3005
  4864                           
  4865                           ; BSR set to: 15
  4866                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  4867  000DC4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4868  000DC8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4869  000DCC  0E00               	movlw	0
  4870  000DCE  12DE               	iorwf	postinc2,f,c
  4871  000DD0  0E00               	movlw	0
  4872  000DD2  12DE               	iorwf	postinc2,f,c
  4873  000DD4  0E01               	movlw	1
  4874  000DD6  12DE               	iorwf	postinc2,f,c
  4875  000DD8  0E00               	movlw	0
  4876  000DDA  12DE               	iorwf	postinc2,f,c
  4877  000DDC                     i2l3005:
  4878                           
  4879                           ; BSR set to: 15
  4880                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  4881  000DDC  A262               	btfss	3938,1,c	;volatile
  4882  000DDE  D00C               	goto	i2l3009
  4883                           
  4884                           ; BSR set to: 15
  4885                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  4886  000DE0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4887  000DE4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4888  000DE8  0E00               	movlw	0
  4889  000DEA  12DE               	iorwf	postinc2,f,c
  4890  000DEC  0E00               	movlw	0
  4891  000DEE  12DE               	iorwf	postinc2,f,c
  4892  000DF0  0E02               	movlw	2
  4893  000DF2  12DE               	iorwf	postinc2,f,c
  4894  000DF4  0E00               	movlw	0
  4895  000DF6  12DE               	iorwf	postinc2,f,c
  4896  000DF8                     i2l3009:
  4897                           
  4898                           ; BSR set to: 15
  4899                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  4900  000DF8  AA62               	btfss	3938,5,c	;volatile
  4901  000DFA  D00C               	goto	i2l3013
  4902                           
  4903                           ; BSR set to: 15
  4904                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  4905  000DFC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4906  000E00  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4907  000E04  0E00               	movlw	0
  4908  000E06  12DE               	iorwf	postinc2,f,c
  4909  000E08  0E00               	movlw	0
  4910  000E0A  12DE               	iorwf	postinc2,f,c
  4911  000E0C  0E04               	movlw	4
  4912  000E0E  12DE               	iorwf	postinc2,f,c
  4913  000E10  0E00               	movlw	0
  4914  000E12  12DE               	iorwf	postinc2,f,c
  4915  000E14                     i2l3013:
  4916                           
  4917                           ; BSR set to: 15
  4918                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  4919  000E14  AC62               	btfss	3938,6,c	;volatile
  4920  000E16  D00C               	goto	i2l3017
  4921                           
  4922                           ; BSR set to: 15
  4923                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  4924  000E18  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4925  000E1C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4926  000E20  0E00               	movlw	0
  4927  000E22  12DE               	iorwf	postinc2,f,c
  4928  000E24  0E00               	movlw	0
  4929  000E26  12DE               	iorwf	postinc2,f,c
  4930  000E28  0E08               	movlw	8
  4931  000E2A  12DE               	iorwf	postinc2,f,c
  4932  000E2C  0E00               	movlw	0
  4933  000E2E  12DE               	iorwf	postinc2,f,c
  4934  000E30                     i2l3017:
  4935                           
  4936                           ; BSR set to: 15
  4937                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  4938  000E30  AE62               	btfss	3938,7,c	;volatile
  4939  000E32  D00C               	goto	i2l3021
  4940                           
  4941                           ; BSR set to: 15
  4942                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  4943  000E34  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4944  000E38  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4945  000E3C  0E00               	movlw	0
  4946  000E3E  12DE               	iorwf	postinc2,f,c
  4947  000E40  0E00               	movlw	0
  4948  000E42  12DE               	iorwf	postinc2,f,c
  4949  000E44  0E10               	movlw	16
  4950  000E46  12DE               	iorwf	postinc2,f,c
  4951  000E48  0E00               	movlw	0
  4952  000E4A  12DE               	iorwf	postinc2,f,c
  4953  000E4C                     i2l3021:
  4954                           
  4955                           ; BSR set to: 15
  4956                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  4957  000E4C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  4958  000E50  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  4959  000E52  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  4960  000E54  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  4961  000E56  0E15               	movlw	21
  4962  000E58                     i2u317_45:
  4963  000E58  90D8               	bcf	status,0,c
  4964  000E5A  3603               	rlcf	??_CANreceiveMessage,f,c
  4965  000E5C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  4966  000E5E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  4967  000E60  3606               	rlcf	??_CANreceiveMessage+3,f,c
  4968  000E62  2EE8               	decfsz	wreg,f,c
  4969  000E64  D7F9               	goto	i2u317_45
  4970  000E66  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4971  000E6A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4972  000E6E  5003               	movf	??_CANreceiveMessage,w,c
  4973  000E70  12DE               	iorwf	postinc2,f,c
  4974  000E72  5004               	movf	??_CANreceiveMessage+1,w,c
  4975  000E74  12DE               	iorwf	postinc2,f,c
  4976  000E76  5005               	movf	??_CANreceiveMessage+2,w,c
  4977  000E78  12DE               	iorwf	postinc2,f,c
  4978  000E7A  5006               	movf	??_CANreceiveMessage+3,w,c
  4979  000E7C  12DE               	iorwf	postinc2,f,c
  4980  000E7E                     i2l3023:
  4981                           
  4982                           ; BSR set to: 15
  4983                           ;inc\CANlib.h: 629: }
  4984                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  4985  000E7E  9E60               	bcf	3936,7,c	;volatile
  4986                           
  4987                           ; BSR set to: 15
  4988                           ;inc\CANlib.h: 632: return (error);
  4989                           ;	Return value of _CANreceiveMessage is never used
  4990  000E80  0012               	return	
  4991  000E82                     __end_of_CANreceiveMessage:
  4992                           	opt stack 0
  4993                           pclatu	equ	0xFFB
  4994                           pclath	equ	0xFFA
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           postinc0	equ	0xFEE
  5002                           fsr0h	equ	0xFEA
  5003                           fsr0l	equ	0xFE9
  5004                           wreg	equ	0xFE8
  5005                           fsr1h	equ	0xFE2
  5006                           fsr1l	equ	0xFE1
  5007                           indf2	equ	0xFDF
  5008                           postinc2	equ	0xFDE
  5009                           postdec2	equ	0xFDD
  5010                           fsr2h	equ	0xFDA
  5011                           fsr2l	equ	0xFD9
  5012                           status	equ	0xFD8
  5013                           
  5014 ;; *************** function _CANisRxReady *****************
  5015 ;; Defined at:
  5016 ;;		line 1163 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      unsigned char 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5030 ;;      Params:         0       0       0       0
  5031 ;;      Locals:         1       0       0       0
  5032 ;;      Temps:          0       0       0       0
  5033 ;;      Totals:         1       0       0       0
  5034 ;;Total ram usage:        1 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_ISR_Alta
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text16
  5044  001646                     __ptext16:
  5045                           	opt stack 0
  5046  001646                     _CANisRxReady:
  5047                           	opt stack 23
  5048                           
  5049                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  5050                           
  5051                           ; BSR set to: 15
  5052                           ;incstack = 0
  5053  001646  0E01               	movlw	1
  5054  001648  6E01               	movwf	_CANisRxReady$2542,c
  5055  00164A  BE60               	btfsc	3936,7,c	;volatile
  5056  00164C  D005               	goto	i2l525
  5057  00164E  010F               	movlb	15	; () banked
  5058  001650  BF50               	btfsc	80,7,b	;volatile
  5059  001652  D002               	goto	i2l525
  5060                           
  5061                           ; BSR set to: 15
  5062  001654  0E00               	movlw	0
  5063  001656  6E01               	movwf	_CANisRxReady$2542,c
  5064  001658                     i2l525:
  5065  001658  5001               	movf	_CANisRxReady$2542,w,c
  5066  00165A  0012               	return	
  5067  00165C                     __end_of_CANisRxReady:
  5068                           	opt stack 0
  5069  0000                     pclatu	equ	0xFFB
  5070                           pclath	equ	0xFFA
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           postinc0	equ	0xFEE
  5078                           fsr0h	equ	0xFEA
  5079                           fsr0l	equ	0xFE9
  5080                           wreg	equ	0xFE8
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           pclatu	equ	0xFFB
  5090                           pclath	equ	0xFFA
  5091                           tblptru	equ	0xFF8
  5092                           tblptrh	equ	0xFF7
  5093                           tblptrl	equ	0xFF6
  5094                           tablat	equ	0xFF5
  5095                           prodh	equ	0xFF4
  5096                           prodl	equ	0xFF3
  5097                           postinc0	equ	0xFEE
  5098                           fsr0h	equ	0xFEA
  5099                           fsr0l	equ	0xFE9
  5100                           wreg	equ	0xFE8
  5101                           fsr1h	equ	0xFE2
  5102                           fsr1l	equ	0xFE1
  5103                           indf2	equ	0xFDF
  5104                           postinc2	equ	0xFDE
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110                           	psect	rparam
  5111  0000                     pclatu	equ	0xFFB
  5112                           pclath	equ	0xFFA
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           prodh	equ	0xFF4
  5118                           prodl	equ	0xFF3
  5119                           postinc0	equ	0xFEE
  5120                           fsr0h	equ	0xFEA
  5121                           fsr0l	equ	0xFE9
  5122                           wreg	equ	0xFE8
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           postinc2	equ	0xFDE
  5127                           postdec2	equ	0xFDD
  5128                           fsr2h	equ	0xFDA
  5129                           fsr2l	equ	0xFD9
  5130                           status	equ	0xFD8
  5131                           
  5132                           	psect	temp
  5133  000045                     btemp:
  5134                           	opt stack 0
  5135  000045                     	ds	1
  5136  0000                     int$flags	set	btemp
  5137                           pclatu	equ	0xFFB
  5138                           pclath	equ	0xFFA
  5139                           tblptru	equ	0xFF8
  5140                           tblptrh	equ	0xFF7
  5141                           tblptrl	equ	0xFF6
  5142                           tablat	equ	0xFF5
  5143                           prodh	equ	0xFF4
  5144                           prodl	equ	0xFF3
  5145                           postinc0	equ	0xFEE
  5146                           fsr0h	equ	0xFEA
  5147                           fsr0l	equ	0xFE9
  5148                           wreg	equ	0xFE8
  5149                           fsr1h	equ	0xFE2
  5150                           fsr1l	equ	0xFE1
  5151                           indf2	equ	0xFDF
  5152                           postinc2	equ	0xFDE
  5153                           postdec2	equ	0xFDD
  5154                           fsr2h	equ	0xFDA
  5155                           fsr2l	equ	0xFD9
  5156                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      68
    BANK0           160      8       8
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->_CANreceiveMessage

Critical Paths under _main in BANK0

    _configurazione->_CANInitialize

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29807
                     _LCD_initialize
                     _configurazione
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    8194
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8194
                                             40 COMRAM     4     4      0
                                              0 BANK0      8     3      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             26 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             26 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       1     1      0   21613
                                             40 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _delay_set_quartz                                     1     1      0      15
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor                                           2     1      1    7033
                                             38 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    6925
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_send_command                                     4     1      3    6925
                                             34 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (3) _LCD_enable_pulse                                     0     0      0     693
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     693
                                             32 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Alta                                            14    14      0    1161
                                             12 COMRAM    14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (8) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask

 _ISR_Alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      8       8       4        5.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      44       1       72.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C       9        0.0%
DATA                 0      0      4C      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Feb 02 17:20:16 2016

     __size_of_delay_set_quartz 0008            __end_of_CANSetFilter 0976             ___wmul@multiplicand 001D  
                   __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                   __CFG_OSC$HS 000000                     __CFG_LVP$ON 000000                             l400 1042  
                           l401 1046                             l410 1126                             l402 1050  
                           l322 1246                             l411 1130                             l403 1054  
                           l323 1250                             l412 1134                             l404 105E  
                           l413 113E                             l430 0452                             l414 1142  
                           l431 045C                             l415 114C                             l407 1114  
                           l440 053E                             l432 0460                             l408 1118  
                           l441 0542                             l433 046A                             l409 1122  
                           l450 0626                             l442 054C                             l434 046E  
                           l451 0630                             l443 0550                             l435 0478  
                           l427 0440                             l460 0714                             l452 0634  
                           l444 055A                             l428 0444                             l533 154E  
                           l461 0718                             l453 063E                             l445 055E  
                           l429 044E                             l462 0722                             l454 0642  
                           l446 0568                             l438 0530                             l471 0806  
                           l463 0726                             l455 064C                             l439 0534  
                           l472 080A                             l464 0730                             l456 0650  
                           l473 0814                             l465 0734                             l457 065A  
                           l449 0622                             l490 0930                             l482 08F8  
                           l474 0818                             l466 073E                             l483 08FC  
                           l475 0822                             l467 0742                             l627 1678  
                           l484 0906                             l476 0826                             l468 074C  
                           l396 1026                             l485 090A                             l477 0830  
                           l397 102A                             l486 0914                             l478 0834  
                           l398 1034                             l487 0918                             l479 083E  
                           l399 1038                             l488 0922                             l489 0926  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 0027  
                           _msg 0035                             wreg 000FE8                 ?_configurazione 0001  
                  __CFG_WDT$OFF 000000                            l3301 10A2                            l3235 1662  
                          l3405 0290                            l3253 0F1C                            l3503 056C  
                          l3423 032E                            l3351 00B8                            l3327 1150  
                          l2393 1542                            l3441 03CC                            l3611 0882  
                          l3605 0842                            l3509 05AC                            l3269 0FB6  
                          l3543 069E                            l3295 1062                            l3537 065E  
                          l3369 0154                            l3571 0750                            l3475 04BC  
                          l3387 01F2                            l3469 047C                            l3639 0934  
                          l3577 0790                            l3691 128E                            l3683 123E  
                          l3685 1254                            l3689 125C                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u3400 0F48                            u4210 0860  
                          u4130 076E                            u4050 067C                            u3405 0F3E  
                          u4215 0856                            u4135 0764                            u4055 0672  
                          u3415 0F94                            u3600 004A                            u3360 0EAE  
                          u3605 0040                            u3365 0EA4                            u3615 0096  
                          u3375 0EFA                            u3800 035E                            u3720 0222  
                          u3640 00E6                            u4290 0952                            u3570 116E  
                          u3490 1080                            u4347 1544                            u3805 0354  
                          u3725 0218                            u3645 00DC                            u4295 0948  
                          u3815 03AA                            u3735 026E                            u3655 0132  
                          u3575 1164                            u3495 1076                            u3760 02C0  
                          u3680 0184                            u2865 1562                            u2866 1564  
                          u2875 156C                            u2876 156E                            u2885 1576  
                          u3765 02B6                            u3685 017A                            u2886 1578  
                          u2895 1580                            u3775 030C                            u3695 01D0  
                          u2896 1582                            u3970 058A                            u3890 049A  
                          u3975 0580                            u3895 0490             __size_of_CANSetMask 0310  
                          _main 166E       __size_of_LCD_send_command 0030                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0045                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 0016                   __CFG_IESO$OFF 000000  
            __size_of_LCD_clear 0026                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 1646                _CANOperationMode 165C         __size_of_LCD_initialize 011A  
    __size_of_CANreceiveMessage 050C                           ?_main 0001                           i2l525 1658  
                         i2l374 0C0E                           i2l624 1498               _CANisRxReady$2542 0001  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                   __CFG_PWRT$OFF 000000  
              __end_of_ISR_Alta 14D4                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
            CANInitialize@flags 0064                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000            __end_of_CANisRxReady 165C  
                         tablat 000FF5                           status 000FD8                  __CFG_PBADEN$ON 000000  
           __size_of_LCD_cursor 0028                 __initialization 1588                    __end_of_main 167A  
                        ??_main 002D                   __activetblptr 000002               __end_of_LCD_clear 1602  
                        _CANCON 000F6F                 __CFG_BBSIZ$1024 000000                          i2l3021 0E4C  
                        i2l3013 0E14                          i2l3005 0DDC                          i2l3023 0E7E  
                        i2l3017 0E30                          i2l3009 0DF8                          i2l2951 0B9A  
                        i2l2943 0B5E                          i2l2935 0AEE                          i2l2961 0C08  
                        i2l2955 0BB8                          i2l2947 0B7C                          i2l2959 0BD6  
                        i2l2997 0D6E                          _RXB0D0 000F66                          _RXB0D1 000F67  
                        _RXB0D2 000F68                          _RXB0D3 000F69                          _RXB0D4 000F6A  
                        _RXB1D0 000F56                          _RXB0D5 000F6B                          _RXB1D1 000F57  
                        _RXB0D6 000F6C                          _RXB1D2 000F58                          _RXB0D7 000F6D  
                        _RXB1D3 000F59                          _RXB1D4 000F5A                          _RXB1D5 000F5B  
                        _RXB1D6 000F5C                          _RXB1D7 000F5D                          _TXB0D0 000F46  
                        _TXB0D1 000F47                          _TXB0D2 000F48                          _TXB0D3 000F49  
                        _TXB1D0 000F36                          _TXB0D4 000F4A                          _TXB1D1 000F37  
                        _TXB0D5 000F4B                          _TXB1D2 000F38                          _TXB0D6 000F4C  
                        _TXB1D3 000F39                          _TXB0D7 000F4D                          _TXB2D0 000F26  
                        _TXB1D4 000F3A                          _TXB2D1 000F27                          _TXB1D5 000F3B  
                        _TXB2D2 000F28                          _TXB1D6 000F3C                          _TXB2D3 000F29  
                        _TXB1D7 000F3D                          _TXB2D4 000F2A                          _TXB2D5 000F2B  
                        _TXB2D6 000F2C                          _TXB2D7 000F2D                __end_of_delay_ms 1558  
         __size_of_CANSetFilter 095C                  __CFG_XINST$OFF 000000                _delay_set_quartz 167A  
                        ___wmul 1602                  __CFG_STVREN$ON 000000                    ??_CANSetMask 0020  
LCD_initialize@quartz_frequency 0029                          clear_0 158E                 __CFG_BOREN$BOHW 000000  
                  __pdataCOMRAM 0044                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                    _CANSetFilter 001A                      __accesstop 0060  
       __end_of__initialization 15A6              __end_of_CANSetMask 1192                _LCD_send_command 1558  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001                       ?_ISR_Alta 0001  
                _LCD_initialize 1332                ??_configurazione 002D           CANSetFilter@numBuffer 0024  
                  ??_LCD_cursor 0028           __size_of_CANisRxReady 0016        __end_of_CANOperationMode 166E  
            __end_of_LCD_cursor 15DC                      ??_ISR_Alta 000D          __end_of_LCD_initialize 144C  
                       ?___wmul 001B               ?_LCD_enable_pulse 0001                    _CANisRxReady 1646  
                       _CANSTAT 000F6E              ??_LCD_enable_pulse 0023                         _BRGCON1 000F70  
                       _BRGCON2 000F71                         _BRGCON3 000F72          __size_of_CANInitialize 01A0  
              LCD_cursor@active 0028                       ?_delay_ms 0021                         _RXB0DLC 000F65  
                       _RXB1DLC 000F55                         _RXB0CON 000F60                         _RXB1CON 000F50  
                       _TXB0DLC 000F45                         _TXB1DLC 000F35                         _TXB2DLC 000F25  
                       __Hparam 0000                         __Lparam 0000                delay_ms@value_ms 0021  
               ?_LCD_initialize 0001                 __size_of___wmul 0026            CANInitialize@propSeg 0065  
                       __pcinit 1588                         __ramtop 0300                         __ptext0 166E  
                       __ptext1 14D4                         __ptext2 1192                         __ptext3 0E82  
                       __ptext4 001A                         __ptext5 165C                         __ptext6 1332  
                       __ptext7 167A                         __ptext8 15B4                         __ptext9 15DC  
                    ??_delay_ms 0023          CANreceiveMessage@error 000B        __end_of_delay_set_quartz 1682  
                __pintcode_body 144C                       _LCD_clear 15DC            end_of_initialization 15A6  
                 __Lmediumconst 0000                         int_func 144C                   _CANInitialize 1192  
            LCD_cursor@blinking 0027                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                  CANSetMask@mask 001B                  CANSetMask@tamp 0025  
      __end_of_LCD_send_command 1588                  CANSetMask@type 001F                      ?_LCD_clear 0001  
       _clock_counter_reference 0033                CANInitialize@BRP 0063                CANInitialize@SJW 0062  
                ?_CANInitialize 0060         LCD_write_integer@F16315 002D               __size_of_ISR_Alta 14CC  
                __end_of___wmul 1628                   __pidataCOMRAM 1682             start_initialization 1588  
           CANSetMask@numBuffer 0024               ?_CANOperationMode 0001              ??_CANOperationMode 001B  
    CANInitialize@FilterConfig1 0066      CANInitialize@FilterConfig2 0067                        ??___wmul 001F  
              __CFG_LPT1OSC$OFF 000000          CANInitialize@phaseSeg1 0060          CANInitialize@phaseSeg2 0061  
                   __pbssCOMRAM 002D                   __pcstackBANK0 0060                     _BRGCON2bits 000F71  
                   _BRGCON3bits 000F72       __size_of_LCD_enable_pulse 001E               __size_of_delay_ms 0032  
                   ??_LCD_clear 0027                 ??_CANInitialize 0029                ??_LCD_initialize 0029  
            CANSetFilter@filter 001B       delay_set_quartz@frequency 001B              LCD_send_command@D0 0025  
            LCD_send_command@D1 0024              LCD_send_command@D2 0023              LCD_send_command@D3 0026  
                     __pintcode 0008                     _COMSTATbits 000F74               ?_delay_set_quartz 0001  
       __size_of_configurazione 0052           CANreceiveMessage@tamp 000C              ??_delay_set_quartz 001B  
                ___wmul@product 001F                        _LATCbits 000F8B                        _LATDbits 000F8C  
  _delay_quartz_frequency_value 0044                        _IPR3bits 000FA5                        _PIE3bits 000FA3  
                      i2u300_45 0A72                        i2u311_45 0CF4                        i2u306_45 0BE2  
                      i2u308_40 0CB6                        i2u308_46 0CB8                        i2u309_40 0CE0  
                      i2u317_45 0E58                        i2u309_46 0CE2                        _PIR3bits 000FA4  
                      i2u297_40 0A2E                        i2u297_46 0A30                        i2u298_40 0A5C  
                      i2u298_46 0A5E                        _RXB0EIDH 000F63                        _RXB0EIDL 000F64  
                      _RXB1EIDH 000F53                        _RXB1EIDL 000F54                        _ISR_Alta 0008  
              __CFG_WDTPS$32768 000000                        _RXB0SIDH 000F61                        _RXB0SIDL 000F62  
                      _RXF0EIDH 000F02                        _RXB1SIDH 000F51                        _RXF0EIDL 000F03  
                      _RXB1SIDL 000F52                        _RXF1EIDH 000F06                        _RXF1EIDL 000F07  
                      _RXF2EIDH 000F0A                        _RXF2EIDL 000F0B                        _RXF3EIDH 000F0E  
                      _RXF3EIDL 000F0F                        _RXF4EIDH 000F12                        _RXF4EIDL 000F13  
                      _RXF5EIDH 000F16                        _RXF5EIDL 000F17                        _RXF0SIDH 000F00  
                      _RXF0SIDL 000F01                        _TXB0EIDH 000F43                        _RXF1SIDH 000F04  
                      _TXB0EIDL 000F44                        _RXF1SIDL 000F05                        _TXB1EIDH 000F33  
                      _RXF2SIDH 000F08                        _TXB1EIDL 000F34                        _RXF2SIDL 000F09  
                      _TXB2EIDH 000F23                        _RXF3SIDH 000F0C                        _TXB2EIDL 000F24  
                      _RXF3SIDL 000F0D                        _RXF4SIDH 000F10                        _RXF4SIDL 000F11  
                      _RXF5SIDH 000F14                        _RXF5SIDL 000F15                        _RXM0EIDH 000F1A  
                      _RXM0EIDL 000F1B                        _TXB0SIDH 000F41                        _RXM1EIDH 000F1E  
                      _TXB0SIDL 000F42                        _RXM1EIDL 000F1F                        _TXB1SIDH 000F31  
                      _TXB1SIDL 000F32                        _TXB2SIDH 000F21                        _TXB2SIDL 000F22  
                      _RXM0SIDH 000F18                        _RXM0SIDL 000F19                        _RXM1SIDH 000F1C  
                      _RXM1SIDL 000F1D                        _RXERRCNT 000F75                        _TXERRCNT 000F76  
             ___wmul@multiplier 001B               ?_LCD_send_command 0023              ??_LCD_send_command 0026  
                 ?_CANSetFilter 001B                      _CANCONbits 000F6F                        __Hrparam 0000  
                  _RXB0SIDLbits 000F62                        __Lrparam 0000                    _RXB1SIDLbits 000F52  
                    _CANSetMask 0E82                    _RXF0SIDLbits 000F01                        _delay_ms 1526  
                  _RXF1SIDLbits 000F05                  ??_CANSetFilter 0020                _LCD_enable_pulse 1628  
                      __ptext10 1558                        __ptext11 1628                        __ptext12 1526  
                      __ptext13 1602                        __ptext15 0976                        __ptext16 1646  
                  _RXF2SIDLbits 000F09                    _RXF3SIDLbits 000F0D                    _RXF4SIDLbits 000F11  
                  _RXF5SIDLbits 000F15                   __size_of_main 000C            CANreceiveMessage@msg 0001  
                  _TXB0SIDLbits 000F42                    _TXB1SIDLbits 000F32                    _TXB2SIDLbits 000F22  
                      int$flags 0045       __size_of_CANOperationMode 0012                   ?_CANisRxReady 0001  
                   _RXB0DLCbits 000F65                     _RXB1DLCbits 000F55                    _RXM0SIDLbits 000F19  
                   _RXB0CONbits 000F60                      _LCD_cursor 15B4                     _RXB1CONbits 000F50  
             _CANreceiveMessage 0976                    _RXM1SIDLbits 000F1D              ?_CANreceiveMessage 0001  
                _configurazione 14D4                        intlevel2 0000                CANSetFilter@tamp 0025  
              CANSetFilter@type 001F             ??_CANreceiveMessage 0003                     _TXB0DLCbits 000F45  
                   _TXB1DLCbits 000F35                     _TXB0CONbits 000F40                     _TXB2DLCbits 000F25  
                   _TXB1CONbits 000F30                     _TXB2CONbits 000F20            CANOperationMode@mode 001B  
                ??_CANisRxReady 0001                     ?_CANSetMask 001B       __end_of_CANreceiveMessage 0E82  
        __end_of_configurazione 1526           __end_of_CANInitialize 1332  
