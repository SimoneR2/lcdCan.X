

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Feb 03 18:17:36 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  001B96                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _delay_quartz_frequency_value
    44  001B96  08                 	db	8
    45  0000                     _RXB1CON	set	3920
    46  0000                     _RXB1CONbits	set	3920
    47  0000                     _RXB1D0	set	3926
    48  0000                     _RXB1D1	set	3927
    49  0000                     _RXB1D2	set	3928
    50  0000                     _RXB1D3	set	3929
    51  0000                     _RXB1D4	set	3930
    52  0000                     _RXB1D5	set	3931
    53  0000                     _RXB1D6	set	3932
    54  0000                     _RXB1D7	set	3933
    55  0000                     _RXB1DLC	set	3925
    56  0000                     _RXB1DLCbits	set	3925
    57  0000                     _RXB1EIDH	set	3923
    58  0000                     _RXB1EIDL	set	3924
    59  0000                     _RXB1SIDH	set	3921
    60  0000                     _RXB1SIDL	set	3922
    61  0000                     _RXB1SIDLbits	set	3922
    62  0000                     _RXF0EIDH	set	3842
    63  0000                     _RXF0EIDL	set	3843
    64  0000                     _RXF0SIDH	set	3840
    65  0000                     _RXF0SIDL	set	3841
    66  0000                     _RXF0SIDLbits	set	3841
    67  0000                     _RXF1EIDH	set	3846
    68  0000                     _RXF1EIDL	set	3847
    69  0000                     _RXF1SIDH	set	3844
    70  0000                     _RXF1SIDL	set	3845
    71  0000                     _RXF1SIDLbits	set	3845
    72  0000                     _RXF2EIDH	set	3850
    73  0000                     _RXF2EIDL	set	3851
    74  0000                     _RXF2SIDH	set	3848
    75  0000                     _RXF2SIDL	set	3849
    76  0000                     _RXF2SIDLbits	set	3849
    77  0000                     _RXF3EIDH	set	3854
    78  0000                     _RXF3EIDL	set	3855
    79  0000                     _RXF3SIDH	set	3852
    80  0000                     _RXF3SIDL	set	3853
    81  0000                     _RXF3SIDLbits	set	3853
    82  0000                     _RXF4EIDH	set	3858
    83  0000                     _RXF4EIDL	set	3859
    84  0000                     _RXF4SIDH	set	3856
    85  0000                     _RXF4SIDL	set	3857
    86  0000                     _RXF4SIDLbits	set	3857
    87  0000                     _RXF5EIDH	set	3862
    88  0000                     _RXF5EIDL	set	3863
    89  0000                     _RXF5SIDH	set	3860
    90  0000                     _RXF5SIDL	set	3861
    91  0000                     _RXF5SIDLbits	set	3861
    92  0000                     _RXM0EIDH	set	3866
    93  0000                     _RXM0EIDL	set	3867
    94  0000                     _RXM0SIDH	set	3864
    95  0000                     _RXM0SIDL	set	3865
    96  0000                     _RXM0SIDLbits	set	3865
    97  0000                     _RXM1EIDH	set	3870
    98  0000                     _RXM1EIDL	set	3871
    99  0000                     _RXM1SIDH	set	3868
   100  0000                     _RXM1SIDL	set	3869
   101  0000                     _RXM1SIDLbits	set	3869
   102  0000                     _TXB0CONbits	set	3904
   103  0000                     _TXB0D0	set	3910
   104  0000                     _TXB0D1	set	3911
   105  0000                     _TXB0D2	set	3912
   106  0000                     _TXB0D3	set	3913
   107  0000                     _TXB0D4	set	3914
   108  0000                     _TXB0D5	set	3915
   109  0000                     _TXB0D6	set	3916
   110  0000                     _TXB0D7	set	3917
   111  0000                     _TXB0DLC	set	3909
   112  0000                     _TXB0DLCbits	set	3909
   113  0000                     _TXB0EIDH	set	3907
   114  0000                     _TXB0EIDL	set	3908
   115  0000                     _TXB0SIDH	set	3905
   116  0000                     _TXB0SIDL	set	3906
   117  0000                     _TXB0SIDLbits	set	3906
   118  0000                     _TXB1CONbits	set	3888
   119  0000                     _TXB1D0	set	3894
   120  0000                     _TXB1D1	set	3895
   121  0000                     _TXB1D2	set	3896
   122  0000                     _TXB1D3	set	3897
   123  0000                     _TXB1D4	set	3898
   124  0000                     _TXB1D5	set	3899
   125  0000                     _TXB1D6	set	3900
   126  0000                     _TXB1D7	set	3901
   127  0000                     _TXB1DLC	set	3893
   128  0000                     _TXB1DLCbits	set	3893
   129  0000                     _TXB1EIDH	set	3891
   130  0000                     _TXB1EIDL	set	3892
   131  0000                     _TXB1SIDH	set	3889
   132  0000                     _TXB1SIDL	set	3890
   133  0000                     _TXB1SIDLbits	set	3890
   134  0000                     _TXB2CONbits	set	3872
   135  0000                     _TXB2D0	set	3878
   136  0000                     _TXB2D1	set	3879
   137  0000                     _TXB2D2	set	3880
   138  0000                     _TXB2D3	set	3881
   139  0000                     _TXB2D4	set	3882
   140  0000                     _TXB2D5	set	3883
   141  0000                     _TXB2D6	set	3884
   142  0000                     _TXB2D7	set	3885
   143  0000                     _TXB2DLC	set	3877
   144  0000                     _TXB2DLCbits	set	3877
   145  0000                     _TXB2EIDH	set	3875
   146  0000                     _TXB2EIDL	set	3876
   147  0000                     _TXB2SIDH	set	3873
   148  0000                     _TXB2SIDL	set	3874
   149  0000                     _TXB2SIDLbits	set	3874
   150  0000                     _BRGCON1	set	3952
   151  0000                     _BRGCON2	set	3953
   152  0000                     _BRGCON2bits	set	3953
   153  0000                     _BRGCON3	set	3954
   154  0000                     _BRGCON3bits	set	3954
   155  0000                     _CANCON	set	3951
   156  0000                     _CANCONbits	set	3951
   157  0000                     _CANSTAT	set	3950
   158  0000                     _COMSTATbits	set	3956
   159  0000                     _IPR3bits	set	4005
   160  0000                     _LATA	set	3977
   161  0000                     _LATB	set	3978
   162  0000                     _LATC	set	3979
   163  0000                     _LATCbits	set	3979
   164  0000                     _LATD	set	3980
   165  0000                     _LATDbits	set	3980
   166  0000                     _LATE	set	3981
   167  0000                     _PIE3bits	set	4003
   168  0000                     _PIR3bits	set	4004
   169  0000                     _RXB0CON	set	3936
   170  0000                     _RXB0CONbits	set	3936
   171  0000                     _RXB0D0	set	3942
   172  0000                     _RXB0D1	set	3943
   173  0000                     _RXB0D2	set	3944
   174  0000                     _RXB0D3	set	3945
   175  0000                     _RXB0D4	set	3946
   176  0000                     _RXB0D5	set	3947
   177  0000                     _RXB0D6	set	3948
   178  0000                     _RXB0D7	set	3949
   179  0000                     _RXB0DLC	set	3941
   180  0000                     _RXB0DLCbits	set	3941
   181  0000                     _RXB0EIDH	set	3939
   182  0000                     _RXB0EIDL	set	3940
   183  0000                     _RXB0SIDH	set	3937
   184  0000                     _RXB0SIDL	set	3938
   185  0000                     _RXB0SIDLbits	set	3938
   186  0000                     _RXERRCNT	set	3957
   187  0000                     _TRISA	set	3986
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISC	set	3988
   190  0000                     _TRISD	set	3989
   191  0000                     _TRISE	set	3990
   192  0000                     _TXERRCNT	set	3958
   193                           
   194                           	psect	smallconst
   195  000300                     __psmallconst:
   196                           	opt stack 0
   197  000300  00                 	db	0
   198  000301                     STR_1:
   199  000301  69                 	db	105	;'i'
   200  000302  64                 	db	100	;'d'
   201  000303  00                 	db	0
   202                           
   203                           ; #config settings
   204  000304  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           	psect	cinit
   207  001A66                     __pcinit:
   208                           	opt stack 0
   209  001A66                     start_initialization:
   210                           	opt stack 0
   211  001A66                     __initialization:
   212                           	opt stack 0
   213                           
   214                           ; Clear objects allocated to COMRAM (25 bytes)
   215  001A66  EE00  F02B         	lfsr	0,__pbssCOMRAM
   216  001A6A  0E19               	movlw	25
   217  001A6C                     clear_0:
   218  001A6C  6AEE               	clrf	postinc0,c
   219  001A6E  06E8               	decf	wreg,f,c
   220  001A70  E1FD               	bnz	clear_0
   221                           
   222                           ; Initialize objects allocated to COMRAM (1 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224  001A72  0E96               	movlw	low __pidataCOMRAM
   225  001A74  6EF6               	movwf	tblptrl,c
   226  001A76  0E1B               	movlw	high __pidataCOMRAM
   227  001A78  6EF7               	movwf	tblptrh,c
   228  001A7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229  001A7C  6EF8               	movwf	tblptru,c
   230  001A7E  0009               	tblrd		*+	;fetch initializer
   231  001A80  CFF5 F044          	movff	tablat,__pdataCOMRAM
   232  001A84                     end_of_initialization:
   233                           	opt stack 0
   234  001A84                     __end_of__initialization:
   235                           	opt stack 0
   236  001A84  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  001A86  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  001A88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  001A8A  6EF8               	movwf	tblptru,c
   240  001A8C  0100               	movlb	0
   241  001A8E  EF90  F00C         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           
   249                           	psect	bssCOMRAM
   250  00002B                     __pbssCOMRAM:
   251                           	opt stack 0
   252  00002B                     LCD_write_integer@F16315:
   253                           	opt stack 0
   254  00002B                     	ds	6
   255  000031                     _clock_counter_reference:
   256                           	opt stack 0
   257  000031                     	ds	2
   258  000033                     _data:
   259                           	opt stack 0
   260  000033                     	ds	1
   261  000034                     _id:
   262                           	opt stack 0
   263  000034                     	ds	1
   264  000035                     _msg:
   265                           	opt stack 0
   266  000035                     	ds	15
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	dataCOMRAM
   275  000044                     __pdataCOMRAM:
   276                           	opt stack 0
   277  000044                     _delay_quartz_frequency_value:
   278                           	opt stack 0
   279  000044                     	ds	1
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	cstackBANK0
   288  000060                     __pcstackBANK0:
   289                           	opt stack 0
   290  000060                     CANInitialize@phaseSeg1:
   291                           	opt stack 0
   292  000060                     LCD_goto_xy@x:
   293                           	opt stack 0
   294  000060                     LCD_write_char@D3:
   295                           	opt stack 0
   296                           
   297                           ; 1 bytes @ 0x0
   298  000060                     	ds	1
   299  000061                     CANInitialize@phaseSeg2:
   300                           	opt stack 0
   301  000061                     LCD_write_char@D2:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x1
   305  000061                     	ds	1
   306  000062                     CANInitialize@SJW:
   307                           	opt stack 0
   308  000062                     LCD_write_char@D1:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x2
   312  000062                     	ds	1
   313  000063                     CANInitialize@BRP:
   314                           	opt stack 0
   315  000063                     LCD_write_char@D0:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x3
   319  000063                     	ds	1
   320  000064                     CANInitialize@flags:
   321                           	opt stack 0
   322  000064                     LCD_write_char@value:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x4
   326  000064                     	ds	1
   327  000065                     ??_CANInitialize:
   328                           
   329                           ; 1 bytes @ 0x5
   330  000065                     	ds	4
   331  000069                     CANInitialize@propSeg:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x9
   335  000069                     	ds	1
   336  00006A                     CANInitialize@FilterConfig1:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0xA
   340  00006A                     	ds	1
   341  00006B                     CANInitialize@FilterConfig2:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xB
   345  00006B                     	ds	1
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           
   353                           	psect	cstackCOMRAM
   354  000001                     __pcstackCOMRAM:
   355                           	opt stack 0
   356  000001                     _CANisRxReady$2542:
   357                           	opt stack 0
   358  000001                     CANreceiveMessage@msg:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362  000001                     	ds	2
   363  000003                     ??_CANreceiveMessage:
   364                           
   365                           ; 1 bytes @ 0x2
   366  000003                     	ds	8
   367  00000B                     CANreceiveMessage@error:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0xA
   371  00000B                     	ds	1
   372  00000C                     CANreceiveMessage@tamp:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0xB
   376  00000C                     	ds	1
   377  00000D                     ??_ISR_Alta:
   378                           
   379                           ; 1 bytes @ 0xC
   380  00000D                     	ds	14
   381  00001B                     ?___wmul:
   382                           	opt stack 0
   383  00001B                     CANOperationMode@mode:
   384                           	opt stack 0
   385  00001B                     delay_set_quartz@frequency:
   386                           	opt stack 0
   387  00001B                     ___wmul@multiplier:
   388                           	opt stack 0
   389  00001B                     CANSetMask@mask:
   390                           	opt stack 0
   391  00001B                     CANSetFilter@filter:
   392                           	opt stack 0
   393                           
   394                           ; 4 bytes @ 0x1A
   395  00001B                     	ds	2
   396  00001D                     ___wmul@multiplicand:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x1C
   400  00001D                     	ds	2
   401  00001F                     CANSetMask@type:
   402                           	opt stack 0
   403  00001F                     CANSetFilter@type:
   404                           	opt stack 0
   405  00001F                     ___wmul@product:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x1E
   409  00001F                     	ds	1
   410  000020                     ??_CANSetMask:
   411  000020                     ??_CANSetFilter:
   412                           
   413                           ; 1 bytes @ 0x1F
   414  000020                     	ds	1
   415  000021                     delay_ms@value_ms:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x20
   419  000021                     	ds	2
   420  000023                     LCD_send_command@D2:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x22
   424  000023                     	ds	1
   425  000024                     CANSetMask@numBuffer:
   426                           	opt stack 0
   427  000024                     CANSetFilter@numBuffer:
   428                           	opt stack 0
   429  000024                     LCD_send_command@D1:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x23
   433  000024                     	ds	1
   434  000025                     LCD_send_command@D0:
   435                           	opt stack 0
   436  000025                     CANSetMask@tamp:
   437                           	opt stack 0
   438  000025                     CANSetFilter@tamp:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x24
   442  000025                     	ds	1
   443  000026                     LCD_send_command@D3:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x25
   447  000026                     	ds	1
   448  000027                     LCD_shift_cursor@number_of_shift:
   449                           	opt stack 0
   450  000027                     LCD_goto_line@line:
   451                           	opt stack 0
   452  000027                     LCD_cursor@blinking:
   453                           	opt stack 0
   454  000027                     LCD_write_message@buffer:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x26
   458  000027                     	ds	1
   459  000028                     LCD_shift_cursor@shift:
   460                           	opt stack 0
   461  000028                     LCD_cursor@active:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x27
   465  000028                     	ds	1
   466  000029                     LCD_shift_cursor@i:
   467                           	opt stack 0
   468  000029                     LCD_initialize@quartz_frequency:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x28
   472  000029                     	ds	1
   473  00002A                     LCD_goto_xy@y:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x29
   477  00002A                     	ds	1
   478  00002B                     tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           
   485                           ; 1 bytes @ 0x2A
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 23 in file "lcdCan.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   505 ;;      Params:         0       0       0       0
   506 ;;      Locals:         0       0       0       0
   507 ;;      Temps:          0       0       0       0
   508 ;;      Totals:         0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels required when called:    8
   511 ;; This function calls:
   512 ;;		_LCD_clear
   513 ;;		_LCD_goto_xy
   514 ;;		_LCD_initialize
   515 ;;		_LCD_write_char
   516 ;;		_LCD_write_message
   517 ;;		_configurazione
   518 ;;		_delay_ms
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text0
   525  001920                     __ptext0:
   526                           	opt stack 0
   527  001920                     _main:
   528                           	opt stack 23
   529                           
   530                           ;lcdCan.c: 24: configurazione();
   531                           
   532                           ;incstack = 0
   533  001920  ECBD  F00C         	call	_configurazione	;wreg free
   534                           
   535                           ;lcdCan.c: 25: LCD_initialize(16);
   536  001924  0E10               	movlw	16
   537  001926  EC18  F00B         	call	_LCD_initialize
   538  00192A                     l3955:
   539                           
   540                           ;lcdCan.c: 27: id = msg.identifier;
   541  00192A  C035  F034         	movff	_msg,_id
   542                           
   543                           ;lcdCan.c: 28: data = msg.data[0];
   544  00192E  C039  F033         	movff	_msg+4,_data
   545                           
   546                           ;lcdCan.c: 29: LCD_goto_xy(1, 0);
   547  001932  0E00               	movlw	0
   548  001934  6E2A               	movwf	LCD_goto_xy@y,c
   549  001936  0E01               	movlw	1
   550  001938  ECA7  F00D         	call	_LCD_goto_xy
   551                           
   552                           ;lcdCan.c: 30: LCD_write_message("id");
   553  00193C  0E01               	movlw	low STR_1
   554  00193E  6E27               	movwf	LCD_write_message@buffer,c
   555  001940  0E03               	movlw	high STR_1
   556  001942  6E28               	movwf	LCD_write_message@buffer+1,c
   557  001944  EC49  F00D         	call	_LCD_write_message	;wreg free
   558                           
   559                           ;lcdCan.c: 31: LCD_goto_xy(1, 3);
   560  001948  0E03               	movlw	3
   561  00194A  6E2A               	movwf	LCD_goto_xy@y,c
   562  00194C  0E01               	movlw	1
   563  00194E  ECA7  F00D         	call	_LCD_goto_xy
   564                           
   565                           ;lcdCan.c: 32: LCD_write_char(id);
   566  001952  5034               	movf	_id,w,c
   567  001954  EC01  F00C         	call	_LCD_write_char
   568                           
   569                           ;lcdCan.c: 33: LCD_goto_xy(2, 0);
   570  001958  0E00               	movlw	0
   571  00195A  6E2A               	movwf	LCD_goto_xy@y,c
   572  00195C  0E02               	movlw	2
   573  00195E  ECA7  F00D         	call	_LCD_goto_xy
   574                           
   575                           ;lcdCan.c: 34: LCD_write_char(data);
   576  001962  5033               	movf	_data,w,c
   577  001964  EC01  F00C         	call	_LCD_write_char
   578                           
   579                           ;lcdCan.c: 35: delay_ms(1000);
   580  001968  0E03               	movlw	3
   581  00196A  6E22               	movwf	delay_ms@value_ms+1,c
   582  00196C  0EE8               	movlw	232
   583  00196E  6E21               	movwf	delay_ms@value_ms,c
   584  001970  EC02  F00D         	call	_delay_ms	;wreg free
   585                           
   586                           ;lcdCan.c: 36: LCD_clear();
   587  001974  EC72  F00D         	call	_LCD_clear	;wreg free
   588  001978  D7D8               	goto	l3955
   589  00197A                     __end_of_main:
   590                           	opt stack 0
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           
   598 ;; *************** function _configurazione *****************
   599 ;; Defined at:
   600 ;;		line 40 in file "lcdCan.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   614 ;;      Params:         0       0       0       0
   615 ;;      Locals:         0       0       0       0
   616 ;;      Temps:          0       0       0       0
   617 ;;      Totals:         0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    4
   621 ;; This function calls:
   622 ;;		_CANInitialize
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text1
   629  00197A                     __ptext1:
   630                           	opt stack 0
   631  00197A                     _configurazione:
   632                           	opt stack 26
   633                           
   634                           ;lcdCan.c: 41: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAMP
      +                          LE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
   635                           
   636                           ;incstack = 0
   637  00197A  0E06               	movlw	6
   638  00197C  0100               	movlb	0	; () banked
   639  00197E  6F60               	movwf	CANInitialize@phaseSeg1& (0+255),b
   640  001980  0E05               	movlw	5
   641  001982  0100               	movlb	0	; () banked
   642  001984  6F61               	movwf	CANInitialize@phaseSeg2& (0+255),b
   643  001986  0E01               	movlw	1
   644  001988  0100               	movlb	0	; () banked
   645  00198A  6F62               	movwf	CANInitialize@SJW& (0+255),b
   646  00198C  0E03               	movlw	3
   647  00198E  0100               	movlb	0	; () banked
   648  001990  6F63               	movwf	CANInitialize@BRP& (0+255),b
   649  001992  0E9D               	movlw	157
   650  001994  0100               	movlb	0	; () banked
   651  001996  6F64               	movwf	CANInitialize@flags& (0+255),b
   652  001998  0E04               	movlw	4
   653  00199A  EC3F  F00A         	call	_CANInitialize
   654                           
   655                           ;lcdCan.c: 42: LATA = 0x00;
   656  00199E  0E00               	movlw	0
   657  0019A0  6E89               	movwf	3977,c	;volatile
   658                           
   659                           ;lcdCan.c: 43: TRISA = 0xff;
   660  0019A2  6892               	setf	3986,c	;volatile
   661                           
   662                           ;lcdCan.c: 44: LATB = 0x00;
   663  0019A4  0E00               	movlw	0
   664  0019A6  6E8A               	movwf	3978,c	;volatile
   665                           
   666                           ;lcdCan.c: 45: TRISB = 0xff;
   667  0019A8  6893               	setf	3987,c	;volatile
   668                           
   669                           ;lcdCan.c: 46: LATC = 0x00;
   670  0019AA  0E00               	movlw	0
   671  0019AC  6E8B               	movwf	3979,c	;volatile
   672                           
   673                           ;lcdCan.c: 47: TRISC = 0xff;
   674  0019AE  6894               	setf	3988,c	;volatile
   675                           
   676                           ;lcdCan.c: 48: LATD = 0x00;
   677  0019B0  0E00               	movlw	0
   678  0019B2  6E8C               	movwf	3980,c	;volatile
   679                           
   680                           ;lcdCan.c: 49: TRISD = 0x00;
   681  0019B4  0E00               	movlw	0
   682  0019B6  6E95               	movwf	3989,c	;volatile
   683                           
   684                           ;lcdCan.c: 50: LATE = 0x00;
   685  0019B8  0E00               	movlw	0
   686  0019BA  6E8D               	movwf	3981,c	;volatile
   687                           
   688                           ;lcdCan.c: 51: TRISE = 0xFF;
   689  0019BC  6896               	setf	3990,c	;volatile
   690                           
   691                           ;lcdCan.c: 52: PIR3bits.RXB1IF = 0;
   692  0019BE  92A4               	bcf	4004,1,c	;volatile
   693                           
   694                           ;lcdCan.c: 53: PIR3bits.RXB0IF = 0;
   695  0019C0  90A4               	bcf	4004,0,c	;volatile
   696                           
   697                           ;lcdCan.c: 54: IPR3bits.RXB1IP = 1;
   698  0019C2  82A5               	bsf	4005,1,c	;volatile
   699                           
   700                           ;lcdCan.c: 55: IPR3bits.RXB0IP = 1;
   701  0019C4  80A5               	bsf	4005,0,c	;volatile
   702                           
   703                           ;lcdCan.c: 56: PIE3bits.RXB1IE = 1;
   704  0019C6  82A3               	bsf	4003,1,c	;volatile
   705                           
   706                           ;lcdCan.c: 57: PIE3bits.RXB0IE = 1;
   707  0019C8  80A3               	bsf	4003,0,c	;volatile
   708  0019CA  0012               	return		;funcret
   709  0019CC                     __end_of_configurazione:
   710                           	opt stack 0
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           
   718 ;; *************** function _CANInitialize *****************
   719 ;; Defined at:
   720 ;;		line 218 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  propSeg         1    wreg     unsigned char 
   723 ;;  phaseSeg1       1    0[BANK0 ] unsigned char 
   724 ;;  phaseSeg2       1    1[BANK0 ] unsigned char 
   725 ;;  SJW             1    2[BANK0 ] unsigned char 
   726 ;;  BRP             1    3[BANK0 ] unsigned char 
   727 ;;  flags           1    4[BANK0 ] enum E15929
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  propSeg         1    9[BANK0 ] unsigned char 
   730 ;;  FilterConfig    1   11[BANK0 ] unsigned char 
   731 ;;  FilterConfig    1   10[BANK0 ] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   741 ;;      Params:         0       5       0       0
   742 ;;      Locals:         0       3       0       0
   743 ;;      Temps:          0       4       0       0
   744 ;;      Totals:         0      12       0       0
   745 ;;Total ram usage:       12 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    3
   748 ;; This function calls:
   749 ;;		_CANOperationMode
   750 ;;		_CANSetFilter
   751 ;;		_CANSetMask
   752 ;; This function is called by:
   753 ;;		_configurazione
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text2
   758  00147E                     __ptext2:
   759                           	opt stack 0
   760  00147E                     _CANInitialize:
   761                           	opt stack 26
   762                           
   763                           ;incstack = 0
   764                           ;CANInitialize@propSeg stored from wreg
   765  00147E  0100               	movlb	0	; () banked
   766  001480  6F69               	movwf	CANInitialize@propSeg& (0+255),b
   767                           
   768                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
   769                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
   770                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
   771  001482  0E80               	movlw	128
   772  001484  ECBE  F00D         	call	_CANOperationMode
   773                           
   774                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
   775  001488  0E00               	movlw	0
   776  00148A  6E70               	movwf	3952,c	;volatile
   777                           
   778                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
   779  00148C  0E00               	movlw	0
   780  00148E  6E71               	movwf	3953,c	;volatile
   781                           
   782                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
   783  001490  0E00               	movlw	0
   784  001492  6E72               	movwf	3954,c	;volatile
   785                           
   786                           ;inc\CANlib.h: 229: SJW= SJW << 6;
   787  001494  0100               	movlb	0	; () banked
   788  001496  4162               	rrncf	CANInitialize@SJW& (0+255),w,b
   789  001498  42E8               	rrncf	wreg,f,c
   790  00149A  0BC0               	andlw	192
   791  00149C  0100               	movlb	0	; () banked
   792  00149E  6F62               	movwf	CANInitialize@SJW& (0+255),b
   793                           
   794                           ; BSR set to: 0
   795                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
   796  0014A0  0100               	movlb	0	; () banked
   797  0014A2  5162               	movf	CANInitialize@SJW& (0+255),w,b
   798  0014A4  1270               	iorwf	3952,f,c	;volatile
   799                           
   800                           ; BSR set to: 0
   801                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
   802  0014A6  0100               	movlb	0	; () banked
   803  0014A8  5163               	movf	CANInitialize@BRP& (0+255),w,b
   804  0014AA  1270               	iorwf	3952,f,c	;volatile
   805                           
   806                           ; BSR set to: 0
   807                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
   808  0014AC  0100               	movlb	0	; () banked
   809  0014AE  5169               	movf	CANInitialize@propSeg& (0+255),w,b
   810  0014B0  1271               	iorwf	3953,f,c	;volatile
   811                           
   812                           ; BSR set to: 0
   813                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
   814  0014B2  0100               	movlb	0	; () banked
   815  0014B4  3960               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
   816  0014B6  42E8               	rrncf	wreg,f,c
   817  0014B8  0BF8               	andlw	248
   818  0014BA  0100               	movlb	0	; () banked
   819  0014BC  6F60               	movwf	CANInitialize@phaseSeg1& (0+255),b
   820                           
   821                           ; BSR set to: 0
   822                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
   823  0014BE  0100               	movlb	0	; () banked
   824  0014C0  5160               	movf	CANInitialize@phaseSeg1& (0+255),w,b
   825  0014C2  1271               	iorwf	3953,f,c	;volatile
   826                           
   827                           ; BSR set to: 0
   828                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
   829  0014C4  0100               	movlb	0	; () banked
   830  0014C6  A564               	btfss	CANInitialize@flags& (0+255),2,b
   831                           
   832                           ; BSR set to: 0
   833                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
   834  0014C8  8C71               	bsf	3953,6,c	;volatile
   835                           
   836                           ; BSR set to: 0
   837                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
   838  0014CA  0100               	movlb	0	; () banked
   839  0014CC  B164               	btfsc	CANInitialize@flags& (0+255),0,b
   840                           
   841                           ; BSR set to: 0
   842                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
   843  0014CE  8E71               	bsf	3953,7,c	;volatile
   844                           
   845                           ; BSR set to: 0
   846                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
   847                           
   848                           ; BSR set to: 0
   849  0014D0  0100               	movlb	0	; () banked
   850  0014D2  5161               	movf	CANInitialize@phaseSeg2& (0+255),w,b
   851  0014D4  1272               	iorwf	3954,f,c	;volatile
   852                           
   853                           ; BSR set to: 0
   854                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
   855  0014D6  0100               	movlb	0	; () banked
   856  0014D8  B364               	btfsc	CANInitialize@flags& (0+255),1,b
   857                           
   858                           ; BSR set to: 0
   859                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
   860  0014DA  8C72               	bsf	3954,6,c	;volatile
   861                           
   862                           ; BSR set to: 0
   863                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
   864                           
   865                           ; BSR set to: 0
   866  0014DC  0100               	movlb	0	; () banked
   867  0014DE  5164               	movf	CANInitialize@flags& (0+255),w,b
   868  0014E0  0B60               	andlw	96
   869  0014E2  6E60               	movwf	3936,c	;volatile
   870                           
   871                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
   872  0014E4  0100               	movlb	0	; () banked
   873  0014E6  5164               	movf	CANInitialize@flags& (0+255),w,b
   874  0014E8  0B10               	andlw	16
   875  0014EA  0AFF               	xorlw	255
   876  0014EC  B4D8               	btfsc	status,2,c
   877                           
   878                           ; BSR set to: 0
   879                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
   880  0014EE  8460               	bsf	3936,2,c	;volatile
   881                           
   882                           ; BSR set to: 0
   883                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
   884  0014F0  CF60 FF50          	movff	3936,3920	;volatile
   885                           
   886                           ; BSR set to: 0
   887                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
   888  0014F4  0E00               	movlw	0
   889  0014F6  6E1B               	movwf	CANSetMask@mask,c
   890  0014F8  0E00               	movlw	0
   891  0014FA  6E1C               	movwf	CANSetMask@mask+1,c
   892  0014FC  0E00               	movlw	0
   893  0014FE  6E1D               	movwf	CANSetMask@mask+2,c
   894  001500  0E00               	movlw	0
   895  001502  6E1E               	movwf	CANSetMask@mask+3,c
   896  001504  0EF7               	movlw	247
   897  001506  6E1F               	movwf	CANSetMask@type,c
   898  001508  0E01               	movlw	1
   899  00150A  ECB7  F008         	call	_CANSetMask
   900                           
   901                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
   902  00150E  0E00               	movlw	0
   903  001510  6E1B               	movwf	CANSetMask@mask,c
   904  001512  0E00               	movlw	0
   905  001514  6E1C               	movwf	CANSetMask@mask+1,c
   906  001516  0E00               	movlw	0
   907  001518  6E1D               	movwf	CANSetMask@mask+2,c
   908  00151A  0E00               	movlw	0
   909  00151C  6E1E               	movwf	CANSetMask@mask+3,c
   910  00151E  0EF7               	movlw	247
   911  001520  6E1F               	movwf	CANSetMask@type,c
   912  001522  0E02               	movlw	2
   913  001524  ECB7  F008         	call	_CANSetMask
   914                           
   915                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
   916  001528  D00F               	goto	l3757
   917  00152A                     l3751:
   918                           
   919                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
   920  00152A  0EF7               	movlw	247
   921  00152C  0100               	movlb	0	; () banked
   922  00152E  6F6A               	movwf	CANInitialize@FilterConfig1& (0+255),b
   923  001530  D007               	goto	l3753
   924  001532                     l322:
   925                           
   926                           ; BSR set to: 0
   927                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
   928  001532  0100               	movlb	0	; () banked
   929  001534  696A               	setf	CANInitialize@FilterConfig1& (0+255),b
   930                           
   931                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
   932  001536  0100               	movlb	0	; () banked
   933  001538  696B               	setf	CANInitialize@FilterConfig2& (0+255),b
   934                           
   935                           ;inc\CANlib.h: 273: break;
   936  00153A  D028               	goto	l3759
   937  00153C                     l323:
   938                           
   939                           ; BSR set to: 0
   940                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
   941  00153C  0100               	movlb	0	; () banked
   942  00153E  696A               	setf	CANInitialize@FilterConfig1& (0+255),b
   943  001540                     l3753:
   944                           
   945                           ; BSR set to: 0
   946                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
   947  001540  0EF7               	movlw	247
   948  001542  0100               	movlb	0	; () banked
   949  001544  6F6B               	movwf	CANInitialize@FilterConfig2& (0+255),b
   950                           
   951                           ; BSR set to: 0
   952                           ;inc\CANlib.h: 278: }
   953                           
   954                           ;inc\CANlib.h: 277: break;
   955  001546  D022               	goto	l3759
   956  001548                     l3757:
   957  001548  0E9F               	movlw	159
   958  00154A  0100               	movlb	0	; () banked
   959  00154C  6F65               	movwf	??_CANInitialize& (0+255),b
   960  00154E  0EFF               	movlw	255
   961  001550  0100               	movlb	0	; () banked
   962  001552  6F66               	movwf	(??_CANInitialize+1)& (0+255),b
   963  001554  0100               	movlb	0	; () banked
   964  001556  5164               	movf	CANInitialize@flags& (0+255),w,b
   965  001558  0B60               	andlw	96
   966  00155A  0100               	movlb	0	; () banked
   967  00155C  6F67               	movwf	(??_CANInitialize+2)& (0+255),b
   968  00155E  6B68               	clrf	(??_CANInitialize+3)& (0+255),b
   969  001560  0100               	movlb	0	; () banked
   970  001562  5165               	movf	??_CANInitialize& (0+255),w,b
   971  001564  0100               	movlb	0	; () banked
   972  001566  1367               	iorwf	(??_CANInitialize+2)& (0+255),f,b
   973  001568  0100               	movlb	0	; () banked
   974  00156A  5166               	movf	(??_CANInitialize+1)& (0+255),w,b
   975  00156C  0100               	movlb	0	; () banked
   976  00156E  1368               	iorwf	(??_CANInitialize+3)& (0+255),f,b
   977                           
   978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   979                           ; Switch size 1, requested type "space"
   980                           ; Number of cases is 1, Range of values is 0 to 0
   981                           ; switch strategies available:
   982                           ; Name         Instructions Cycles
   983                           ; simple_byte            4     3 (average)
   984                           ;	Chosen strategy is simple_byte
   985  001570  0100               	movlb	0	; () banked
   986  001572  5168               	movf	(??_CANInitialize+3)& (0+255),w,b
   987  001574  0A00               	xorlw	0	; case 0
   988  001576  A4D8               	btfss	status,2,c
   989  001578  D7E1               	goto	l323
   990                           
   991                           ; BSR set to: 0
   992                           ; Switch size 1, requested type "space"
   993                           ; Number of cases is 2, Range of values is 191 to 223
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; simple_byte            7     4 (average)
   997                           ;	Chosen strategy is simple_byte
   998  00157A  0100               	movlb	0	; () banked
   999  00157C  5167               	movf	(??_CANInitialize+2)& (0+255),w,b
  1000  00157E  0ABF               	xorlw	191	; case 191
  1001  001580  B4D8               	btfsc	status,2,c
  1002  001582  D7D7               	goto	l322
  1003  001584  0A60               	xorlw	96	; case 223
  1004  001586  B4D8               	btfsc	status,2,c
  1005  001588  D7D0               	goto	l3751
  1006  00158A  D7D8               	goto	l323
  1007  00158C                     l3759:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  1011  00158C  0E00               	movlw	0
  1012  00158E  6E1B               	movwf	CANSetFilter@filter,c
  1013  001590  0E00               	movlw	0
  1014  001592  6E1C               	movwf	CANSetFilter@filter+1,c
  1015  001594  0E00               	movlw	0
  1016  001596  6E1D               	movwf	CANSetFilter@filter+2,c
  1017  001598  0E00               	movlw	0
  1018  00159A  6E1E               	movwf	CANSetFilter@filter+3,c
  1019  00159C  C06A  F01F         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1020  0015A0  0E00               	movlw	0
  1021  0015A2  EC83  F001         	call	_CANSetFilter
  1022                           
  1023                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  1024  0015A6  0E00               	movlw	0
  1025  0015A8  6E1B               	movwf	CANSetFilter@filter,c
  1026  0015AA  0E00               	movlw	0
  1027  0015AC  6E1C               	movwf	CANSetFilter@filter+1,c
  1028  0015AE  0E00               	movlw	0
  1029  0015B0  6E1D               	movwf	CANSetFilter@filter+2,c
  1030  0015B2  0E00               	movlw	0
  1031  0015B4  6E1E               	movwf	CANSetFilter@filter+3,c
  1032  0015B6  C06A  F01F         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1033  0015BA  0E01               	movlw	1
  1034  0015BC  EC83  F001         	call	_CANSetFilter
  1035                           
  1036                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  1037  0015C0  0E00               	movlw	0
  1038  0015C2  6E1B               	movwf	CANSetFilter@filter,c
  1039  0015C4  0E00               	movlw	0
  1040  0015C6  6E1C               	movwf	CANSetFilter@filter+1,c
  1041  0015C8  0E00               	movlw	0
  1042  0015CA  6E1D               	movwf	CANSetFilter@filter+2,c
  1043  0015CC  0E00               	movlw	0
  1044  0015CE  6E1E               	movwf	CANSetFilter@filter+3,c
  1045  0015D0  C06B  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1046  0015D4  0E02               	movlw	2
  1047  0015D6  EC83  F001         	call	_CANSetFilter
  1048                           
  1049                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  1050  0015DA  0E00               	movlw	0
  1051  0015DC  6E1B               	movwf	CANSetFilter@filter,c
  1052  0015DE  0E00               	movlw	0
  1053  0015E0  6E1C               	movwf	CANSetFilter@filter+1,c
  1054  0015E2  0E00               	movlw	0
  1055  0015E4  6E1D               	movwf	CANSetFilter@filter+2,c
  1056  0015E6  0E00               	movlw	0
  1057  0015E8  6E1E               	movwf	CANSetFilter@filter+3,c
  1058  0015EA  C06B  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1059  0015EE  0E03               	movlw	3
  1060  0015F0  EC83  F001         	call	_CANSetFilter
  1061                           
  1062                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  1063  0015F4  0E00               	movlw	0
  1064  0015F6  6E1B               	movwf	CANSetFilter@filter,c
  1065  0015F8  0E00               	movlw	0
  1066  0015FA  6E1C               	movwf	CANSetFilter@filter+1,c
  1067  0015FC  0E00               	movlw	0
  1068  0015FE  6E1D               	movwf	CANSetFilter@filter+2,c
  1069  001600  0E00               	movlw	0
  1070  001602  6E1E               	movwf	CANSetFilter@filter+3,c
  1071  001604  C06B  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1072  001608  0E04               	movlw	4
  1073  00160A  EC83  F001         	call	_CANSetFilter
  1074                           
  1075                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  1076  00160E  0E00               	movlw	0
  1077  001610  6E1B               	movwf	CANSetFilter@filter,c
  1078  001612  0E00               	movlw	0
  1079  001614  6E1C               	movwf	CANSetFilter@filter+1,c
  1080  001616  0E00               	movlw	0
  1081  001618  6E1D               	movwf	CANSetFilter@filter+2,c
  1082  00161A  0E00               	movlw	0
  1083  00161C  6E1E               	movwf	CANSetFilter@filter+3,c
  1084  00161E  C06B  F01F         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1085  001622  0E05               	movlw	5
  1086  001624  EC83  F001         	call	_CANSetFilter
  1087                           
  1088                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  1089  001628  0E00               	movlw	0
  1090  00162A  ECBE  F00D         	call	_CANOperationMode
  1091  00162E  0012               	return		;funcret
  1092  001630                     __end_of_CANInitialize:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _CANSetMask *****************
  1103 ;; Defined at:
  1104 ;;		line 640 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  numBuffer       1    wreg     enum E15963
  1107 ;;  mask            4   26[COMRAM] unsigned long 
  1108 ;;  type            1   30[COMRAM] enum E15929
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  numBuffer       1   35[COMRAM] enum E15963
  1111 ;;  tamp            4   36[COMRAM] unsigned long 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1121 ;;      Params:         5       0       0       0
  1122 ;;      Locals:         5       0       0       0
  1123 ;;      Temps:          4       0       0       0
  1124 ;;      Totals:        14       0       0       0
  1125 ;;Total ram usage:       14 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    2
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_CANInitialize
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text3
  1136  00116E                     __ptext3:
  1137                           	opt stack 0
  1138  00116E                     _CANSetMask:
  1139                           	opt stack 26
  1140                           
  1141                           ;incstack = 0
  1142                           ;CANSetMask@numBuffer stored from wreg
  1143  00116E  6E24               	movwf	CANSetMask@numBuffer,c
  1144                           
  1145                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  1146  001170  0424               	decf	CANSetMask@numBuffer,w,c
  1147  001172  A4D8               	btfss	status,2,c
  1148  001174  D049               	goto	l3315
  1149  001176  281F               	incf	CANSetMask@type,w,c
  1150  001178  A4D8               	btfss	status,2,c
  1151  00117A  D046               	goto	l3315
  1152                           
  1153                           ;inc\CANlib.h: 644: {
  1154                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  1155  00117C  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1156  001180  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1157  001184  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1158  001188  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1159  00118C  0E04               	movlw	4
  1160  00118E  D005               	goto	u3370
  1161  001190                     u3375:
  1162  001190  90D8               	bcf	status,0,c
  1163  001192  3223               	rrcf	??_CANSetMask+3,f,c
  1164  001194  3222               	rrcf	??_CANSetMask+2,f,c
  1165  001196  3221               	rrcf	??_CANSetMask+1,f,c
  1166  001198  3220               	rrcf	??_CANSetMask,f,c
  1167  00119A                     u3370:
  1168  00119A  2EE8               	decfsz	wreg,f,c
  1169  00119C  D7F9               	goto	u3375
  1170  00119E  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1171  0011A2  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1172  0011A6  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1173  0011AA  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1174                           
  1175                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  1176  0011AE  5025               	movf	CANSetMask@tamp,w,c
  1177  0011B0  6E25               	movwf	CANSetMask@tamp,c
  1178  0011B2  6A26               	clrf	CANSetMask@tamp+1,c
  1179  0011B4  6A27               	clrf	CANSetMask@tamp+2,c
  1180  0011B6  6A28               	clrf	CANSetMask@tamp+3,c
  1181                           
  1182                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  1183  0011B8  C025  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1184                           
  1185                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  1186  0011BC  0E07               	movlw	7
  1187  0011BE  141B               	andwf	CANSetMask@mask,w,c
  1188  0011C0  6E25               	movwf	CANSetMask@tamp,c
  1189  0011C2  0E00               	movlw	0
  1190  0011C4  141C               	andwf	CANSetMask@mask+1,w,c
  1191  0011C6  6E26               	movwf	CANSetMask@tamp+1,c
  1192  0011C8  0E00               	movlw	0
  1193  0011CA  141D               	andwf	CANSetMask@mask+2,w,c
  1194  0011CC  6E27               	movwf	CANSetMask@tamp+2,c
  1195  0011CE  0E00               	movlw	0
  1196  0011D0  141E               	andwf	CANSetMask@mask+3,w,c
  1197  0011D2  6E28               	movwf	CANSetMask@tamp+3,c
  1198                           
  1199                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  1200  0011D4  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1201  0011D8  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1202  0011DC  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1203  0011E0  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1204  0011E4  0E05               	movlw	5
  1205  0011E6                     u3385:
  1206  0011E6  90D8               	bcf	status,0,c
  1207  0011E8  3620               	rlcf	??_CANSetMask,f,c
  1208  0011EA  3621               	rlcf	??_CANSetMask+1,f,c
  1209  0011EC  3622               	rlcf	??_CANSetMask+2,f,c
  1210  0011EE  3623               	rlcf	??_CANSetMask+3,f,c
  1211  0011F0  2EE8               	decfsz	wreg,f,c
  1212  0011F2  D7F9               	goto	u3385
  1213  0011F4  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1214  0011F8  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1215  0011FC  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1216  001200  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1217                           
  1218                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  1219  001204  C025  FF19         	movff	CANSetMask@tamp,3865	;volatile
  1220  001208                     l3315:
  1221                           
  1222                           ;inc\CANlib.h: 652: }
  1223                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  1224  001208  0E02               	movlw	2
  1225  00120A  1824               	xorwf	CANSetMask@numBuffer,w,c
  1226  00120C  A4D8               	btfss	status,2,c
  1227  00120E  D049               	goto	l3331
  1228  001210  281F               	incf	CANSetMask@type,w,c
  1229  001212  A4D8               	btfss	status,2,c
  1230  001214  D046               	goto	l3331
  1231                           
  1232                           ;inc\CANlib.h: 655: {
  1233                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  1234  001216  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1235  00121A  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1236  00121E  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1237  001222  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1238  001226  0E04               	movlw	4
  1239  001228  D005               	goto	u3410
  1240  00122A                     u3415:
  1241  00122A  90D8               	bcf	status,0,c
  1242  00122C  3223               	rrcf	??_CANSetMask+3,f,c
  1243  00122E  3222               	rrcf	??_CANSetMask+2,f,c
  1244  001230  3221               	rrcf	??_CANSetMask+1,f,c
  1245  001232  3220               	rrcf	??_CANSetMask,f,c
  1246  001234                     u3410:
  1247  001234  2EE8               	decfsz	wreg,f,c
  1248  001236  D7F9               	goto	u3415
  1249  001238  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1250  00123C  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1251  001240  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1252  001244  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1253                           
  1254                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  1255  001248  5025               	movf	CANSetMask@tamp,w,c
  1256  00124A  6E25               	movwf	CANSetMask@tamp,c
  1257  00124C  6A26               	clrf	CANSetMask@tamp+1,c
  1258  00124E  6A27               	clrf	CANSetMask@tamp+2,c
  1259  001250  6A28               	clrf	CANSetMask@tamp+3,c
  1260                           
  1261                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  1262  001252  C025  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1263                           
  1264                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  1265  001256  0E07               	movlw	7
  1266  001258  141B               	andwf	CANSetMask@mask,w,c
  1267  00125A  6E25               	movwf	CANSetMask@tamp,c
  1268  00125C  0E00               	movlw	0
  1269  00125E  141C               	andwf	CANSetMask@mask+1,w,c
  1270  001260  6E26               	movwf	CANSetMask@tamp+1,c
  1271  001262  0E00               	movlw	0
  1272  001264  141D               	andwf	CANSetMask@mask+2,w,c
  1273  001266  6E27               	movwf	CANSetMask@tamp+2,c
  1274  001268  0E00               	movlw	0
  1275  00126A  141E               	andwf	CANSetMask@mask+3,w,c
  1276  00126C  6E28               	movwf	CANSetMask@tamp+3,c
  1277                           
  1278                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  1279  00126E  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1280  001272  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1281  001276  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1282  00127A  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1283  00127E  0E05               	movlw	5
  1284  001280                     u3425:
  1285  001280  90D8               	bcf	status,0,c
  1286  001282  3620               	rlcf	??_CANSetMask,f,c
  1287  001284  3621               	rlcf	??_CANSetMask+1,f,c
  1288  001286  3622               	rlcf	??_CANSetMask+2,f,c
  1289  001288  3623               	rlcf	??_CANSetMask+3,f,c
  1290  00128A  2EE8               	decfsz	wreg,f,c
  1291  00128C  D7F9               	goto	u3425
  1292  00128E  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1293  001292  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1294  001296  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1295  00129A  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1296                           
  1297                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  1298  00129E  C025  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  1299  0012A2                     l3331:
  1300                           
  1301                           ;inc\CANlib.h: 663: }
  1302                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  1303  0012A2  0424               	decf	CANSetMask@numBuffer,w,c
  1304  0012A4  A4D8               	btfss	status,2,c
  1305  0012A6  D073               	goto	l3363
  1306  0012A8  0EF7               	movlw	247
  1307  0012AA  181F               	xorwf	CANSetMask@type,w,c
  1308  0012AC  A4D8               	btfss	status,2,c
  1309  0012AE  D06F               	goto	l3363
  1310                           
  1311                           ;inc\CANlib.h: 666: {
  1312                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  1313  0012B0  501B               	movf	CANSetMask@mask,w,c
  1314  0012B2  6E25               	movwf	CANSetMask@tamp,c
  1315  0012B4  6A26               	clrf	CANSetMask@tamp+1,c
  1316  0012B6  6A27               	clrf	CANSetMask@tamp+2,c
  1317  0012B8  6A28               	clrf	CANSetMask@tamp+3,c
  1318                           
  1319                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  1320  0012BA  C025  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  1321                           
  1322                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  1323  0012BE  0E00               	movlw	0
  1324  0012C0  141B               	andwf	CANSetMask@mask,w,c
  1325  0012C2  6E25               	movwf	CANSetMask@tamp,c
  1326  0012C4  0EFF               	movlw	255
  1327  0012C6  141C               	andwf	CANSetMask@mask+1,w,c
  1328  0012C8  6E26               	movwf	CANSetMask@tamp+1,c
  1329  0012CA  0E00               	movlw	0
  1330  0012CC  141D               	andwf	CANSetMask@mask+2,w,c
  1331  0012CE  6E27               	movwf	CANSetMask@tamp+2,c
  1332  0012D0  0E00               	movlw	0
  1333  0012D2  141E               	andwf	CANSetMask@mask+3,w,c
  1334  0012D4  6E28               	movwf	CANSetMask@tamp+3,c
  1335                           
  1336                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  1337  0012D6  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1338  0012DA  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1339  0012DE  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1340  0012E2  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1341  0012E6  C021  F020         	movff	??_CANSetMask+1,??_CANSetMask
  1342  0012EA  C022  F021         	movff	??_CANSetMask+2,??_CANSetMask+1
  1343  0012EE  C023  F022         	movff	??_CANSetMask+3,??_CANSetMask+2
  1344  0012F2  6A23               	clrf	??_CANSetMask+3,c
  1345  0012F4  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1346  0012F8  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1347  0012FC  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1348  001300  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1349                           
  1350                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  1351  001304  C025  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  1352                           
  1353                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  1354  001308  A01D               	btfss	CANSetMask@mask+2,0,c
  1355  00130A  D003               	goto	l396
  1356                           
  1357                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  1358  00130C  010F               	movlb	15	; () banked
  1359  00130E  8119               	bsf	25,0,b	;volatile
  1360  001310  D002               	goto	l397
  1361  001312                     l396:
  1362                           
  1363                           ;inc\CANlib.h: 676: else
  1364                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  1365  001312  010F               	movlb	15	; () banked
  1366  001314  9119               	bcf	25,0,b	;volatile
  1367  001316                     l397:
  1368                           
  1369                           ; BSR set to: 15
  1370                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  1371  001316  A21D               	btfss	CANSetMask@mask+2,1,c
  1372  001318  D003               	goto	l398
  1373                           
  1374                           ; BSR set to: 15
  1375                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  1376  00131A  010F               	movlb	15	; () banked
  1377  00131C  8319               	bsf	25,1,b	;volatile
  1378  00131E  D002               	goto	l399
  1379  001320                     l398:
  1380                           
  1381                           ; BSR set to: 15
  1382                           ;inc\CANlib.h: 681: else
  1383                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  1384  001320  010F               	movlb	15	; () banked
  1385  001322  9319               	bcf	25,1,b	;volatile
  1386  001324                     l399:
  1387                           
  1388                           ; BSR set to: 15
  1389                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  1390  001324  A41D               	btfss	CANSetMask@mask+2,2,c
  1391  001326  D003               	goto	l400
  1392                           
  1393                           ; BSR set to: 15
  1394                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  1395  001328  010F               	movlb	15	; () banked
  1396  00132A  8B19               	bsf	25,5,b	;volatile
  1397  00132C  D002               	goto	l401
  1398  00132E                     l400:
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;inc\CANlib.h: 686: else
  1402                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  1403  00132E  010F               	movlb	15	; () banked
  1404  001330  9B19               	bcf	25,5,b	;volatile
  1405  001332                     l401:
  1406                           
  1407                           ; BSR set to: 15
  1408                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  1409  001332  A61D               	btfss	CANSetMask@mask+2,3,c
  1410  001334  D003               	goto	l402
  1411                           
  1412                           ; BSR set to: 15
  1413                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  1414  001336  010F               	movlb	15	; () banked
  1415  001338  8D19               	bsf	25,6,b	;volatile
  1416  00133A  D002               	goto	l403
  1417  00133C                     l402:
  1418                           
  1419                           ; BSR set to: 15
  1420                           ;inc\CANlib.h: 691: else
  1421                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  1422  00133C  010F               	movlb	15	; () banked
  1423  00133E  9D19               	bcf	25,6,b	;volatile
  1424  001340                     l403:
  1425                           
  1426                           ; BSR set to: 15
  1427                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  1428  001340  A81D               	btfss	CANSetMask@mask+2,4,c
  1429  001342  D003               	goto	l404
  1430                           
  1431                           ; BSR set to: 15
  1432                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  1433  001344  010F               	movlb	15	; () banked
  1434  001346  8F19               	bsf	25,7,b	;volatile
  1435  001348  D002               	goto	l3357
  1436  00134A                     l404:
  1437                           
  1438                           ; BSR set to: 15
  1439                           ;inc\CANlib.h: 696: else
  1440                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  1441  00134A  010F               	movlb	15	; () banked
  1442  00134C  9F19               	bcf	25,7,b	;volatile
  1443  00134E                     l3357:
  1444                           
  1445                           ; BSR set to: 15
  1446                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  1447  00134E  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1448  001352  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1449  001356  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1450  00135A  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1451  00135E  0E16               	movlw	22
  1452  001360  D005               	goto	u3500
  1453  001362                     u3505:
  1454  001362  90D8               	bcf	status,0,c
  1455  001364  3223               	rrcf	??_CANSetMask+3,f,c
  1456  001366  3222               	rrcf	??_CANSetMask+2,f,c
  1457  001368  3221               	rrcf	??_CANSetMask+1,f,c
  1458  00136A  3220               	rrcf	??_CANSetMask,f,c
  1459  00136C                     u3500:
  1460  00136C  2EE8               	decfsz	wreg,f,c
  1461  00136E  D7F9               	goto	u3505
  1462  001370  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1463  001374  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1464  001378  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1465  00137C  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1466                           
  1467                           ; BSR set to: 15
  1468                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  1469  001380  5025               	movf	CANSetMask@tamp,w,c
  1470  001382  6E25               	movwf	CANSetMask@tamp,c
  1471  001384  6A26               	clrf	CANSetMask@tamp+1,c
  1472  001386  6A27               	clrf	CANSetMask@tamp+2,c
  1473  001388  6A28               	clrf	CANSetMask@tamp+3,c
  1474                           
  1475                           ; BSR set to: 15
  1476                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  1477  00138A  C025  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1478  00138E                     l3363:
  1479                           
  1480                           ;inc\CANlib.h: 702: }
  1481                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  1482  00138E  0E02               	movlw	2
  1483  001390  1824               	xorwf	CANSetMask@numBuffer,w,c
  1484  001392  A4D8               	btfss	status,2,c
  1485  001394  0012               	return	
  1486  001396  0EF7               	movlw	247
  1487  001398  181F               	xorwf	CANSetMask@type,w,c
  1488  00139A  A4D8               	btfss	status,2,c
  1489  00139C  0012               	return	
  1490                           
  1491                           ;inc\CANlib.h: 705: {
  1492                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  1493  00139E  501B               	movf	CANSetMask@mask,w,c
  1494  0013A0  6E25               	movwf	CANSetMask@tamp,c
  1495  0013A2  6A26               	clrf	CANSetMask@tamp+1,c
  1496  0013A4  6A27               	clrf	CANSetMask@tamp+2,c
  1497  0013A6  6A28               	clrf	CANSetMask@tamp+3,c
  1498                           
  1499                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  1500  0013A8  C025  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  1501                           
  1502                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  1503  0013AC  0E00               	movlw	0
  1504  0013AE  141B               	andwf	CANSetMask@mask,w,c
  1505  0013B0  6E25               	movwf	CANSetMask@tamp,c
  1506  0013B2  0EFF               	movlw	255
  1507  0013B4  141C               	andwf	CANSetMask@mask+1,w,c
  1508  0013B6  6E26               	movwf	CANSetMask@tamp+1,c
  1509  0013B8  0E00               	movlw	0
  1510  0013BA  141D               	andwf	CANSetMask@mask+2,w,c
  1511  0013BC  6E27               	movwf	CANSetMask@tamp+2,c
  1512  0013BE  0E00               	movlw	0
  1513  0013C0  141E               	andwf	CANSetMask@mask+3,w,c
  1514  0013C2  6E28               	movwf	CANSetMask@tamp+3,c
  1515                           
  1516                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  1517  0013C4  C025  F020         	movff	CANSetMask@tamp,??_CANSetMask
  1518  0013C8  C026  F021         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1519  0013CC  C027  F022         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1520  0013D0  C028  F023         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1521  0013D4  C021  F020         	movff	??_CANSetMask+1,??_CANSetMask
  1522  0013D8  C022  F021         	movff	??_CANSetMask+2,??_CANSetMask+1
  1523  0013DC  C023  F022         	movff	??_CANSetMask+3,??_CANSetMask+2
  1524  0013E0  6A23               	clrf	??_CANSetMask+3,c
  1525  0013E2  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1526  0013E6  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1527  0013EA  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1528  0013EE  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1529                           
  1530                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  1531  0013F2  C025  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  1532                           
  1533                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  1534  0013F6  A01D               	btfss	CANSetMask@mask+2,0,c
  1535  0013F8  D003               	goto	l407
  1536                           
  1537                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  1538  0013FA  010F               	movlb	15	; () banked
  1539  0013FC  811D               	bsf	29,0,b	;volatile
  1540  0013FE  D002               	goto	l408
  1541  001400                     l407:
  1542                           
  1543                           ;inc\CANlib.h: 715: else
  1544                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  1545  001400  010F               	movlb	15	; () banked
  1546  001402  911D               	bcf	29,0,b	;volatile
  1547  001404                     l408:
  1548                           
  1549                           ; BSR set to: 15
  1550                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  1551  001404  A21D               	btfss	CANSetMask@mask+2,1,c
  1552  001406  D003               	goto	l409
  1553                           
  1554                           ; BSR set to: 15
  1555                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  1556  001408  010F               	movlb	15	; () banked
  1557  00140A  831D               	bsf	29,1,b	;volatile
  1558  00140C  D002               	goto	l410
  1559  00140E                     l409:
  1560                           
  1561                           ; BSR set to: 15
  1562                           ;inc\CANlib.h: 720: else
  1563                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  1564  00140E  010F               	movlb	15	; () banked
  1565  001410  931D               	bcf	29,1,b	;volatile
  1566  001412                     l410:
  1567                           
  1568                           ; BSR set to: 15
  1569                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  1570  001412  A41D               	btfss	CANSetMask@mask+2,2,c
  1571  001414  D003               	goto	l411
  1572                           
  1573                           ; BSR set to: 15
  1574                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  1575  001416  010F               	movlb	15	; () banked
  1576  001418  8B1D               	bsf	29,5,b	;volatile
  1577  00141A  D002               	goto	l412
  1578  00141C                     l411:
  1579                           
  1580                           ; BSR set to: 15
  1581                           ;inc\CANlib.h: 725: else
  1582                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  1583  00141C  010F               	movlb	15	; () banked
  1584  00141E  9B1D               	bcf	29,5,b	;volatile
  1585  001420                     l412:
  1586                           
  1587                           ; BSR set to: 15
  1588                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  1589  001420  A61D               	btfss	CANSetMask@mask+2,3,c
  1590  001422  D003               	goto	l413
  1591                           
  1592                           ; BSR set to: 15
  1593                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  1594  001424  010F               	movlb	15	; () banked
  1595  001426  8D1D               	bsf	29,6,b	;volatile
  1596  001428  D002               	goto	l414
  1597  00142A                     l413:
  1598                           
  1599                           ; BSR set to: 15
  1600                           ;inc\CANlib.h: 730: else
  1601                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  1602  00142A  010F               	movlb	15	; () banked
  1603  00142C  9D1D               	bcf	29,6,b	;volatile
  1604  00142E                     l414:
  1605                           
  1606                           ; BSR set to: 15
  1607                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  1608  00142E  A81D               	btfss	CANSetMask@mask+2,4,c
  1609  001430  D003               	goto	l415
  1610                           
  1611                           ; BSR set to: 15
  1612                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  1613  001432  010F               	movlb	15	; () banked
  1614  001434  8F1D               	bsf	29,7,b	;volatile
  1615  001436  D002               	goto	l3389
  1616  001438                     l415:
  1617                           
  1618                           ; BSR set to: 15
  1619                           ;inc\CANlib.h: 735: else
  1620                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  1621  001438  010F               	movlb	15	; () banked
  1622  00143A  9F1D               	bcf	29,7,b	;volatile
  1623  00143C                     l3389:
  1624                           
  1625                           ; BSR set to: 15
  1626                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  1627  00143C  C01B  F020         	movff	CANSetMask@mask,??_CANSetMask
  1628  001440  C01C  F021         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1629  001444  C01D  F022         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1630  001448  C01E  F023         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1631  00144C  0E16               	movlw	22
  1632  00144E  D005               	goto	u3580
  1633  001450                     u3585:
  1634  001450  90D8               	bcf	status,0,c
  1635  001452  3223               	rrcf	??_CANSetMask+3,f,c
  1636  001454  3222               	rrcf	??_CANSetMask+2,f,c
  1637  001456  3221               	rrcf	??_CANSetMask+1,f,c
  1638  001458  3220               	rrcf	??_CANSetMask,f,c
  1639  00145A                     u3580:
  1640  00145A  2EE8               	decfsz	wreg,f,c
  1641  00145C  D7F9               	goto	u3585
  1642  00145E  C020  F025         	movff	??_CANSetMask,CANSetMask@tamp
  1643  001462  C021  F026         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1644  001466  C022  F027         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1645  00146A  C023  F028         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1646                           
  1647                           ; BSR set to: 15
  1648                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  1649  00146E  5025               	movf	CANSetMask@tamp,w,c
  1650  001470  6E25               	movwf	CANSetMask@tamp,c
  1651  001472  6A26               	clrf	CANSetMask@tamp+1,c
  1652  001474  6A27               	clrf	CANSetMask@tamp+2,c
  1653  001476  6A28               	clrf	CANSetMask@tamp+3,c
  1654                           
  1655                           ; BSR set to: 15
  1656                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  1657  001478  C025  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1658  00147C  0012               	return	
  1659  00147E                     __end_of_CANSetMask:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _CANSetFilter *****************
  1670 ;; Defined at:
  1671 ;;		line 748 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  numBuffer       1    wreg     enum E15966
  1674 ;;  filter          4   26[COMRAM] unsigned long 
  1675 ;;  type            1   30[COMRAM] enum E15929
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  numBuffer       1   35[COMRAM] enum E15966
  1678 ;;  tamp            4   36[COMRAM] unsigned long 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1688 ;;      Params:         5       0       0       0
  1689 ;;      Locals:         5       0       0       0
  1690 ;;      Temps:          4       0       0       0
  1691 ;;      Totals:        14       0       0       0
  1692 ;;Total ram usage:       14 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    2
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_CANInitialize
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text4
  1703  000306                     __ptext4:
  1704                           	opt stack 0
  1705  000306                     _CANSetFilter:
  1706                           	opt stack 26
  1707                           
  1708                           ;incstack = 0
  1709                           ;CANSetFilter@numBuffer stored from wreg
  1710  000306  6E24               	movwf	CANSetFilter@numBuffer,c
  1711                           
  1712                           ;inc\CANlib.h: 750: unsigned long tamp;
  1713                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  1714  000308  5024               	movf	CANSetFilter@numBuffer,w,c
  1715  00030A  A4D8               	btfss	status,2,c
  1716  00030C  D04B               	goto	l3413
  1717  00030E  281F               	incf	CANSetFilter@type,w,c
  1718  000310  A4D8               	btfss	status,2,c
  1719  000312  D048               	goto	l3413
  1720                           
  1721                           ;inc\CANlib.h: 753: {
  1722                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  1723  000314  010F               	movlb	15	; () banked
  1724  000316  9701               	bcf	1,3,b	;volatile
  1725                           
  1726                           ; BSR set to: 15
  1727                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  1728  000318  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1729  00031C  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1730  000320  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1731  000324  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1732  000328  0E04               	movlw	4
  1733  00032A  D005               	goto	u3610
  1734  00032C                     u3615:
  1735  00032C  90D8               	bcf	status,0,c
  1736  00032E  3223               	rrcf	??_CANSetFilter+3,f,c
  1737  000330  3222               	rrcf	??_CANSetFilter+2,f,c
  1738  000332  3221               	rrcf	??_CANSetFilter+1,f,c
  1739  000334  3220               	rrcf	??_CANSetFilter,f,c
  1740  000336                     u3610:
  1741  000336  2EE8               	decfsz	wreg,f,c
  1742  000338  D7F9               	goto	u3615
  1743  00033A  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1744  00033E  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1745  000342  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1746  000346  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1747                           
  1748                           ; BSR set to: 15
  1749                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  1750  00034A  5025               	movf	CANSetFilter@tamp,w,c
  1751  00034C  6E25               	movwf	CANSetFilter@tamp,c
  1752  00034E  6A26               	clrf	CANSetFilter@tamp+1,c
  1753  000350  6A27               	clrf	CANSetFilter@tamp+2,c
  1754  000352  6A28               	clrf	CANSetFilter@tamp+3,c
  1755                           
  1756                           ; BSR set to: 15
  1757                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  1758  000354  C025  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  1759                           
  1760                           ; BSR set to: 15
  1761                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  1762  000358  0E07               	movlw	7
  1763  00035A  141B               	andwf	CANSetFilter@filter,w,c
  1764  00035C  6E25               	movwf	CANSetFilter@tamp,c
  1765  00035E  0E00               	movlw	0
  1766  000360  141C               	andwf	CANSetFilter@filter+1,w,c
  1767  000362  6E26               	movwf	CANSetFilter@tamp+1,c
  1768  000364  0E00               	movlw	0
  1769  000366  141D               	andwf	CANSetFilter@filter+2,w,c
  1770  000368  6E27               	movwf	CANSetFilter@tamp+2,c
  1771  00036A  0E00               	movlw	0
  1772  00036C  141E               	andwf	CANSetFilter@filter+3,w,c
  1773  00036E  6E28               	movwf	CANSetFilter@tamp+3,c
  1774                           
  1775                           ; BSR set to: 15
  1776                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  1777  000370  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1778  000374  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1779  000378  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1780  00037C  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1781  000380  0E05               	movlw	5
  1782  000382                     u3625:
  1783  000382  90D8               	bcf	status,0,c
  1784  000384  3620               	rlcf	??_CANSetFilter,f,c
  1785  000386  3621               	rlcf	??_CANSetFilter+1,f,c
  1786  000388  3622               	rlcf	??_CANSetFilter+2,f,c
  1787  00038A  3623               	rlcf	??_CANSetFilter+3,f,c
  1788  00038C  2EE8               	decfsz	wreg,f,c
  1789  00038E  D7F9               	goto	u3625
  1790  000390  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1791  000394  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1792  000398  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1793  00039C  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1794                           
  1795                           ; BSR set to: 15
  1796                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  1797  0003A0  C025  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  1798  0003A4                     l3413:
  1799                           
  1800                           ;inc\CANlib.h: 763: }
  1801                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  1802  0003A4  0424               	decf	CANSetFilter@numBuffer,w,c
  1803  0003A6  A4D8               	btfss	status,2,c
  1804  0003A8  D04B               	goto	l3431
  1805  0003AA  281F               	incf	CANSetFilter@type,w,c
  1806  0003AC  A4D8               	btfss	status,2,c
  1807  0003AE  D048               	goto	l3431
  1808                           
  1809                           ;inc\CANlib.h: 766: {
  1810                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  1811  0003B0  010F               	movlb	15	; () banked
  1812  0003B2  9705               	bcf	5,3,b	;volatile
  1813                           
  1814                           ; BSR set to: 15
  1815                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  1816  0003B4  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1817  0003B8  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1818  0003BC  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1819  0003C0  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1820  0003C4  0E04               	movlw	4
  1821  0003C6  D005               	goto	u3650
  1822  0003C8                     u3655:
  1823  0003C8  90D8               	bcf	status,0,c
  1824  0003CA  3223               	rrcf	??_CANSetFilter+3,f,c
  1825  0003CC  3222               	rrcf	??_CANSetFilter+2,f,c
  1826  0003CE  3221               	rrcf	??_CANSetFilter+1,f,c
  1827  0003D0  3220               	rrcf	??_CANSetFilter,f,c
  1828  0003D2                     u3650:
  1829  0003D2  2EE8               	decfsz	wreg,f,c
  1830  0003D4  D7F9               	goto	u3655
  1831  0003D6  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1832  0003DA  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1833  0003DE  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1834  0003E2  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1835                           
  1836                           ; BSR set to: 15
  1837                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  1838  0003E6  5025               	movf	CANSetFilter@tamp,w,c
  1839  0003E8  6E25               	movwf	CANSetFilter@tamp,c
  1840  0003EA  6A26               	clrf	CANSetFilter@tamp+1,c
  1841  0003EC  6A27               	clrf	CANSetFilter@tamp+2,c
  1842  0003EE  6A28               	clrf	CANSetFilter@tamp+3,c
  1843                           
  1844                           ; BSR set to: 15
  1845                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  1846  0003F0  C025  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  1847                           
  1848                           ; BSR set to: 15
  1849                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  1850  0003F4  0E07               	movlw	7
  1851  0003F6  141B               	andwf	CANSetFilter@filter,w,c
  1852  0003F8  6E25               	movwf	CANSetFilter@tamp,c
  1853  0003FA  0E00               	movlw	0
  1854  0003FC  141C               	andwf	CANSetFilter@filter+1,w,c
  1855  0003FE  6E26               	movwf	CANSetFilter@tamp+1,c
  1856  000400  0E00               	movlw	0
  1857  000402  141D               	andwf	CANSetFilter@filter+2,w,c
  1858  000404  6E27               	movwf	CANSetFilter@tamp+2,c
  1859  000406  0E00               	movlw	0
  1860  000408  141E               	andwf	CANSetFilter@filter+3,w,c
  1861  00040A  6E28               	movwf	CANSetFilter@tamp+3,c
  1862                           
  1863                           ; BSR set to: 15
  1864                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  1865  00040C  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1866  000410  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1867  000414  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1868  000418  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1869  00041C  0E05               	movlw	5
  1870  00041E                     u3665:
  1871  00041E  90D8               	bcf	status,0,c
  1872  000420  3620               	rlcf	??_CANSetFilter,f,c
  1873  000422  3621               	rlcf	??_CANSetFilter+1,f,c
  1874  000424  3622               	rlcf	??_CANSetFilter+2,f,c
  1875  000426  3623               	rlcf	??_CANSetFilter+3,f,c
  1876  000428  2EE8               	decfsz	wreg,f,c
  1877  00042A  D7F9               	goto	u3665
  1878  00042C  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1879  000430  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1880  000434  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1881  000438  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1882                           
  1883                           ; BSR set to: 15
  1884                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  1885  00043C  C025  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  1886  000440                     l3431:
  1887                           
  1888                           ;inc\CANlib.h: 776: }
  1889                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  1890  000440  0E02               	movlw	2
  1891  000442  1824               	xorwf	CANSetFilter@numBuffer,w,c
  1892  000444  A4D8               	btfss	status,2,c
  1893  000446  D04B               	goto	l3449
  1894  000448  281F               	incf	CANSetFilter@type,w,c
  1895  00044A  A4D8               	btfss	status,2,c
  1896  00044C  D048               	goto	l3449
  1897                           
  1898                           ;inc\CANlib.h: 779: {
  1899                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  1900  00044E  010F               	movlb	15	; () banked
  1901  000450  9709               	bcf	9,3,b	;volatile
  1902                           
  1903                           ; BSR set to: 15
  1904                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  1905  000452  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1906  000456  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1907  00045A  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1908  00045E  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1909  000462  0E04               	movlw	4
  1910  000464  D005               	goto	u3690
  1911  000466                     u3695:
  1912  000466  90D8               	bcf	status,0,c
  1913  000468  3223               	rrcf	??_CANSetFilter+3,f,c
  1914  00046A  3222               	rrcf	??_CANSetFilter+2,f,c
  1915  00046C  3221               	rrcf	??_CANSetFilter+1,f,c
  1916  00046E  3220               	rrcf	??_CANSetFilter,f,c
  1917  000470                     u3690:
  1918  000470  2EE8               	decfsz	wreg,f,c
  1919  000472  D7F9               	goto	u3695
  1920  000474  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1921  000478  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1922  00047C  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1923  000480  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  1927  000484  5025               	movf	CANSetFilter@tamp,w,c
  1928  000486  6E25               	movwf	CANSetFilter@tamp,c
  1929  000488  6A26               	clrf	CANSetFilter@tamp+1,c
  1930  00048A  6A27               	clrf	CANSetFilter@tamp+2,c
  1931  00048C  6A28               	clrf	CANSetFilter@tamp+3,c
  1932                           
  1933                           ; BSR set to: 15
  1934                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  1935  00048E  C025  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  1936                           
  1937                           ; BSR set to: 15
  1938                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  1939  000492  0E07               	movlw	7
  1940  000494  141B               	andwf	CANSetFilter@filter,w,c
  1941  000496  6E25               	movwf	CANSetFilter@tamp,c
  1942  000498  0E00               	movlw	0
  1943  00049A  141C               	andwf	CANSetFilter@filter+1,w,c
  1944  00049C  6E26               	movwf	CANSetFilter@tamp+1,c
  1945  00049E  0E00               	movlw	0
  1946  0004A0  141D               	andwf	CANSetFilter@filter+2,w,c
  1947  0004A2  6E27               	movwf	CANSetFilter@tamp+2,c
  1948  0004A4  0E00               	movlw	0
  1949  0004A6  141E               	andwf	CANSetFilter@filter+3,w,c
  1950  0004A8  6E28               	movwf	CANSetFilter@tamp+3,c
  1951                           
  1952                           ; BSR set to: 15
  1953                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  1954  0004AA  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  1955  0004AE  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  1956  0004B2  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  1957  0004B6  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  1958  0004BA  0E05               	movlw	5
  1959  0004BC                     u3705:
  1960  0004BC  90D8               	bcf	status,0,c
  1961  0004BE  3620               	rlcf	??_CANSetFilter,f,c
  1962  0004C0  3621               	rlcf	??_CANSetFilter+1,f,c
  1963  0004C2  3622               	rlcf	??_CANSetFilter+2,f,c
  1964  0004C4  3623               	rlcf	??_CANSetFilter+3,f,c
  1965  0004C6  2EE8               	decfsz	wreg,f,c
  1966  0004C8  D7F9               	goto	u3705
  1967  0004CA  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  1968  0004CE  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  1969  0004D2  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  1970  0004D6  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  1971                           
  1972                           ; BSR set to: 15
  1973                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  1974  0004DA  C025  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  1975  0004DE                     l3449:
  1976                           
  1977                           ;inc\CANlib.h: 789: }
  1978                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  1979  0004DE  0E03               	movlw	3
  1980  0004E0  1824               	xorwf	CANSetFilter@numBuffer,w,c
  1981  0004E2  A4D8               	btfss	status,2,c
  1982  0004E4  D04B               	goto	l3467
  1983  0004E6  281F               	incf	CANSetFilter@type,w,c
  1984  0004E8  A4D8               	btfss	status,2,c
  1985  0004EA  D048               	goto	l3467
  1986                           
  1987                           ;inc\CANlib.h: 792: {
  1988                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  1989  0004EC  010F               	movlb	15	; () banked
  1990  0004EE  970D               	bcf	13,3,b	;volatile
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  1994  0004F0  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  1995  0004F4  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  1996  0004F8  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  1997  0004FC  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  1998  000500  0E04               	movlw	4
  1999  000502  D005               	goto	u3730
  2000  000504                     u3735:
  2001  000504  90D8               	bcf	status,0,c
  2002  000506  3223               	rrcf	??_CANSetFilter+3,f,c
  2003  000508  3222               	rrcf	??_CANSetFilter+2,f,c
  2004  00050A  3221               	rrcf	??_CANSetFilter+1,f,c
  2005  00050C  3220               	rrcf	??_CANSetFilter,f,c
  2006  00050E                     u3730:
  2007  00050E  2EE8               	decfsz	wreg,f,c
  2008  000510  D7F9               	goto	u3735
  2009  000512  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2010  000516  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2011  00051A  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2012  00051E  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2013                           
  2014                           ; BSR set to: 15
  2015                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  2016  000522  5025               	movf	CANSetFilter@tamp,w,c
  2017  000524  6E25               	movwf	CANSetFilter@tamp,c
  2018  000526  6A26               	clrf	CANSetFilter@tamp+1,c
  2019  000528  6A27               	clrf	CANSetFilter@tamp+2,c
  2020  00052A  6A28               	clrf	CANSetFilter@tamp+3,c
  2021                           
  2022                           ; BSR set to: 15
  2023                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  2024  00052C  C025  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  2025                           
  2026                           ; BSR set to: 15
  2027                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  2028  000530  0E07               	movlw	7
  2029  000532  141B               	andwf	CANSetFilter@filter,w,c
  2030  000534  6E25               	movwf	CANSetFilter@tamp,c
  2031  000536  0E00               	movlw	0
  2032  000538  141C               	andwf	CANSetFilter@filter+1,w,c
  2033  00053A  6E26               	movwf	CANSetFilter@tamp+1,c
  2034  00053C  0E00               	movlw	0
  2035  00053E  141D               	andwf	CANSetFilter@filter+2,w,c
  2036  000540  6E27               	movwf	CANSetFilter@tamp+2,c
  2037  000542  0E00               	movlw	0
  2038  000544  141E               	andwf	CANSetFilter@filter+3,w,c
  2039  000546  6E28               	movwf	CANSetFilter@tamp+3,c
  2040                           
  2041                           ; BSR set to: 15
  2042                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  2043  000548  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2044  00054C  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2045  000550  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2046  000554  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2047  000558  0E05               	movlw	5
  2048  00055A                     u3745:
  2049  00055A  90D8               	bcf	status,0,c
  2050  00055C  3620               	rlcf	??_CANSetFilter,f,c
  2051  00055E  3621               	rlcf	??_CANSetFilter+1,f,c
  2052  000560  3622               	rlcf	??_CANSetFilter+2,f,c
  2053  000562  3623               	rlcf	??_CANSetFilter+3,f,c
  2054  000564  2EE8               	decfsz	wreg,f,c
  2055  000566  D7F9               	goto	u3745
  2056  000568  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2057  00056C  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2058  000570  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2059  000574  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2060                           
  2061                           ; BSR set to: 15
  2062                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  2063  000578  C025  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  2064  00057C                     l3467:
  2065                           
  2066                           ;inc\CANlib.h: 802: }
  2067                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  2068  00057C  0E04               	movlw	4
  2069  00057E  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2070  000580  A4D8               	btfss	status,2,c
  2071  000582  D04B               	goto	l3485
  2072  000584  281F               	incf	CANSetFilter@type,w,c
  2073  000586  A4D8               	btfss	status,2,c
  2074  000588  D048               	goto	l3485
  2075                           
  2076                           ;inc\CANlib.h: 805: {
  2077                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  2078  00058A  010F               	movlb	15	; () banked
  2079  00058C  9711               	bcf	17,3,b	;volatile
  2080                           
  2081                           ; BSR set to: 15
  2082                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  2083  00058E  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2084  000592  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2085  000596  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2086  00059A  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2087  00059E  0E04               	movlw	4
  2088  0005A0  D005               	goto	u3770
  2089  0005A2                     u3775:
  2090  0005A2  90D8               	bcf	status,0,c
  2091  0005A4  3223               	rrcf	??_CANSetFilter+3,f,c
  2092  0005A6  3222               	rrcf	??_CANSetFilter+2,f,c
  2093  0005A8  3221               	rrcf	??_CANSetFilter+1,f,c
  2094  0005AA  3220               	rrcf	??_CANSetFilter,f,c
  2095  0005AC                     u3770:
  2096  0005AC  2EE8               	decfsz	wreg,f,c
  2097  0005AE  D7F9               	goto	u3775
  2098  0005B0  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2099  0005B4  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2100  0005B8  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2101  0005BC  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2102                           
  2103                           ; BSR set to: 15
  2104                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  2105  0005C0  5025               	movf	CANSetFilter@tamp,w,c
  2106  0005C2  6E25               	movwf	CANSetFilter@tamp,c
  2107  0005C4  6A26               	clrf	CANSetFilter@tamp+1,c
  2108  0005C6  6A27               	clrf	CANSetFilter@tamp+2,c
  2109  0005C8  6A28               	clrf	CANSetFilter@tamp+3,c
  2110                           
  2111                           ; BSR set to: 15
  2112                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  2113  0005CA  C025  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  2114                           
  2115                           ; BSR set to: 15
  2116                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  2117  0005CE  0E07               	movlw	7
  2118  0005D0  141B               	andwf	CANSetFilter@filter,w,c
  2119  0005D2  6E25               	movwf	CANSetFilter@tamp,c
  2120  0005D4  0E00               	movlw	0
  2121  0005D6  141C               	andwf	CANSetFilter@filter+1,w,c
  2122  0005D8  6E26               	movwf	CANSetFilter@tamp+1,c
  2123  0005DA  0E00               	movlw	0
  2124  0005DC  141D               	andwf	CANSetFilter@filter+2,w,c
  2125  0005DE  6E27               	movwf	CANSetFilter@tamp+2,c
  2126  0005E0  0E00               	movlw	0
  2127  0005E2  141E               	andwf	CANSetFilter@filter+3,w,c
  2128  0005E4  6E28               	movwf	CANSetFilter@tamp+3,c
  2129                           
  2130                           ; BSR set to: 15
  2131                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  2132  0005E6  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2133  0005EA  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2134  0005EE  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2135  0005F2  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2136  0005F6  0E05               	movlw	5
  2137  0005F8                     u3785:
  2138  0005F8  90D8               	bcf	status,0,c
  2139  0005FA  3620               	rlcf	??_CANSetFilter,f,c
  2140  0005FC  3621               	rlcf	??_CANSetFilter+1,f,c
  2141  0005FE  3622               	rlcf	??_CANSetFilter+2,f,c
  2142  000600  3623               	rlcf	??_CANSetFilter+3,f,c
  2143  000602  2EE8               	decfsz	wreg,f,c
  2144  000604  D7F9               	goto	u3785
  2145  000606  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2146  00060A  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2147  00060E  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2148  000612  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2149                           
  2150                           ; BSR set to: 15
  2151                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  2152  000616  C025  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  2153  00061A                     l3485:
  2154                           
  2155                           ;inc\CANlib.h: 815: }
  2156                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  2157  00061A  0E05               	movlw	5
  2158  00061C  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2159  00061E  A4D8               	btfss	status,2,c
  2160  000620  D04B               	goto	l3503
  2161  000622  281F               	incf	CANSetFilter@type,w,c
  2162  000624  A4D8               	btfss	status,2,c
  2163  000626  D048               	goto	l3503
  2164                           
  2165                           ;inc\CANlib.h: 818: {
  2166                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  2167  000628  010F               	movlb	15	; () banked
  2168  00062A  9715               	bcf	21,3,b	;volatile
  2169                           
  2170                           ; BSR set to: 15
  2171                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  2172  00062C  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2173  000630  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2174  000634  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2175  000638  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2176  00063C  0E04               	movlw	4
  2177  00063E  D005               	goto	u3810
  2178  000640                     u3815:
  2179  000640  90D8               	bcf	status,0,c
  2180  000642  3223               	rrcf	??_CANSetFilter+3,f,c
  2181  000644  3222               	rrcf	??_CANSetFilter+2,f,c
  2182  000646  3221               	rrcf	??_CANSetFilter+1,f,c
  2183  000648  3220               	rrcf	??_CANSetFilter,f,c
  2184  00064A                     u3810:
  2185  00064A  2EE8               	decfsz	wreg,f,c
  2186  00064C  D7F9               	goto	u3815
  2187  00064E  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2188  000652  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2189  000656  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2190  00065A  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2191                           
  2192                           ; BSR set to: 15
  2193                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  2194  00065E  5025               	movf	CANSetFilter@tamp,w,c
  2195  000660  6E25               	movwf	CANSetFilter@tamp,c
  2196  000662  6A26               	clrf	CANSetFilter@tamp+1,c
  2197  000664  6A27               	clrf	CANSetFilter@tamp+2,c
  2198  000666  6A28               	clrf	CANSetFilter@tamp+3,c
  2199                           
  2200                           ; BSR set to: 15
  2201                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  2202  000668  C025  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  2203                           
  2204                           ; BSR set to: 15
  2205                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  2206  00066C  0E07               	movlw	7
  2207  00066E  141B               	andwf	CANSetFilter@filter,w,c
  2208  000670  6E25               	movwf	CANSetFilter@tamp,c
  2209  000672  0E00               	movlw	0
  2210  000674  141C               	andwf	CANSetFilter@filter+1,w,c
  2211  000676  6E26               	movwf	CANSetFilter@tamp+1,c
  2212  000678  0E00               	movlw	0
  2213  00067A  141D               	andwf	CANSetFilter@filter+2,w,c
  2214  00067C  6E27               	movwf	CANSetFilter@tamp+2,c
  2215  00067E  0E00               	movlw	0
  2216  000680  141E               	andwf	CANSetFilter@filter+3,w,c
  2217  000682  6E28               	movwf	CANSetFilter@tamp+3,c
  2218                           
  2219                           ; BSR set to: 15
  2220                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  2221  000684  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2222  000688  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2223  00068C  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2224  000690  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2225  000694  0E05               	movlw	5
  2226  000696                     u3825:
  2227  000696  90D8               	bcf	status,0,c
  2228  000698  3620               	rlcf	??_CANSetFilter,f,c
  2229  00069A  3621               	rlcf	??_CANSetFilter+1,f,c
  2230  00069C  3622               	rlcf	??_CANSetFilter+2,f,c
  2231  00069E  3623               	rlcf	??_CANSetFilter+3,f,c
  2232  0006A0  2EE8               	decfsz	wreg,f,c
  2233  0006A2  D7F9               	goto	u3825
  2234  0006A4  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2235  0006A8  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2236  0006AC  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2237  0006B0  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2238                           
  2239                           ; BSR set to: 15
  2240                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  2241  0006B4  C025  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  2242  0006B8                     l3503:
  2243                           
  2244                           ;inc\CANlib.h: 828: }
  2245                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  2246  0006B8  5024               	movf	CANSetFilter@numBuffer,w,c
  2247  0006BA  A4D8               	btfss	status,2,c
  2248  0006BC  D075               	goto	l3537
  2249  0006BE  0EF7               	movlw	247
  2250  0006C0  181F               	xorwf	CANSetFilter@type,w,c
  2251  0006C2  A4D8               	btfss	status,2,c
  2252  0006C4  D071               	goto	l3537
  2253                           
  2254                           ;inc\CANlib.h: 832: {
  2255                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  2256  0006C6  010F               	movlb	15	; () banked
  2257  0006C8  8701               	bsf	1,3,b	;volatile
  2258                           
  2259                           ; BSR set to: 15
  2260                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  2261  0006CA  501B               	movf	CANSetFilter@filter,w,c
  2262  0006CC  6E25               	movwf	CANSetFilter@tamp,c
  2263  0006CE  6A26               	clrf	CANSetFilter@tamp+1,c
  2264  0006D0  6A27               	clrf	CANSetFilter@tamp+2,c
  2265  0006D2  6A28               	clrf	CANSetFilter@tamp+3,c
  2266                           
  2267                           ; BSR set to: 15
  2268                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  2269  0006D4  C025  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  2270                           
  2271                           ; BSR set to: 15
  2272                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  2273  0006D8  0E00               	movlw	0
  2274  0006DA  141B               	andwf	CANSetFilter@filter,w,c
  2275  0006DC  6E25               	movwf	CANSetFilter@tamp,c
  2276  0006DE  0EFF               	movlw	255
  2277  0006E0  141C               	andwf	CANSetFilter@filter+1,w,c
  2278  0006E2  6E26               	movwf	CANSetFilter@tamp+1,c
  2279  0006E4  0E00               	movlw	0
  2280  0006E6  141D               	andwf	CANSetFilter@filter+2,w,c
  2281  0006E8  6E27               	movwf	CANSetFilter@tamp+2,c
  2282  0006EA  0E00               	movlw	0
  2283  0006EC  141E               	andwf	CANSetFilter@filter+3,w,c
  2284  0006EE  6E28               	movwf	CANSetFilter@tamp+3,c
  2285                           
  2286                           ; BSR set to: 15
  2287                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  2288  0006F0  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2289  0006F4  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2290  0006F8  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2291  0006FC  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2292  000700  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2293  000704  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2294  000708  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2295  00070C  6A23               	clrf	??_CANSetFilter+3,c
  2296  00070E  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2297  000712  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2298  000716  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2299  00071A  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2300                           
  2301                           ; BSR set to: 15
  2302                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  2303  00071E  C025  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  2304                           
  2305                           ; BSR set to: 15
  2306                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  2307  000722  A01D               	btfss	CANSetFilter@filter+2,0,c
  2308  000724  D003               	goto	l427
  2309                           
  2310                           ; BSR set to: 15
  2311                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  2312  000726  010F               	movlb	15	; () banked
  2313  000728  8101               	bsf	1,0,b	;volatile
  2314  00072A  D002               	goto	l428
  2315  00072C                     l427:
  2316                           
  2317                           ; BSR set to: 15
  2318                           ;inc\CANlib.h: 844: else
  2319                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  2320  00072C  010F               	movlb	15	; () banked
  2321  00072E  9101               	bcf	1,0,b	;volatile
  2322  000730                     l428:
  2323                           
  2324                           ; BSR set to: 15
  2325                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  2326  000730  A21D               	btfss	CANSetFilter@filter+2,1,c
  2327  000732  D003               	goto	l429
  2328                           
  2329                           ; BSR set to: 15
  2330                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  2331  000734  010F               	movlb	15	; () banked
  2332  000736  8301               	bsf	1,1,b	;volatile
  2333  000738  D002               	goto	l430
  2334  00073A                     l429:
  2335                           
  2336                           ; BSR set to: 15
  2337                           ;inc\CANlib.h: 849: else
  2338                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  2339  00073A  010F               	movlb	15	; () banked
  2340  00073C  9301               	bcf	1,1,b	;volatile
  2341  00073E                     l430:
  2342                           
  2343                           ; BSR set to: 15
  2344                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  2345  00073E  A41D               	btfss	CANSetFilter@filter+2,2,c
  2346  000740  D003               	goto	l431
  2347                           
  2348                           ; BSR set to: 15
  2349                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  2350  000742  010F               	movlb	15	; () banked
  2351  000744  8B01               	bsf	1,5,b	;volatile
  2352  000746  D002               	goto	l432
  2353  000748                     l431:
  2354                           
  2355                           ; BSR set to: 15
  2356                           ;inc\CANlib.h: 854: else
  2357                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  2358  000748  010F               	movlb	15	; () banked
  2359  00074A  9B01               	bcf	1,5,b	;volatile
  2360  00074C                     l432:
  2361                           
  2362                           ; BSR set to: 15
  2363                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  2364  00074C  A61D               	btfss	CANSetFilter@filter+2,3,c
  2365  00074E  D003               	goto	l433
  2366                           
  2367                           ; BSR set to: 15
  2368                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  2369  000750  010F               	movlb	15	; () banked
  2370  000752  8D01               	bsf	1,6,b	;volatile
  2371  000754  D002               	goto	l434
  2372  000756                     l433:
  2373                           
  2374                           ; BSR set to: 15
  2375                           ;inc\CANlib.h: 859: else
  2376                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  2377  000756  010F               	movlb	15	; () banked
  2378  000758  9D01               	bcf	1,6,b	;volatile
  2379  00075A                     l434:
  2380                           
  2381                           ; BSR set to: 15
  2382                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  2383  00075A  A81D               	btfss	CANSetFilter@filter+2,4,c
  2384  00075C  D003               	goto	l435
  2385                           
  2386                           ; BSR set to: 15
  2387                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  2388  00075E  010F               	movlb	15	; () banked
  2389  000760  8F01               	bsf	1,7,b	;volatile
  2390  000762  D002               	goto	l3531
  2391  000764                     l435:
  2392                           
  2393                           ; BSR set to: 15
  2394                           ;inc\CANlib.h: 864: else
  2395                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  2396  000764  010F               	movlb	15	; () banked
  2397  000766  9F01               	bcf	1,7,b	;volatile
  2398  000768                     l3531:
  2399                           
  2400                           ; BSR set to: 15
  2401                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  2402  000768  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2403  00076C  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2404  000770  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2405  000774  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2406  000778  0E16               	movlw	22
  2407  00077A  D005               	goto	u3900
  2408  00077C                     u3905:
  2409  00077C  90D8               	bcf	status,0,c
  2410  00077E  3223               	rrcf	??_CANSetFilter+3,f,c
  2411  000780  3222               	rrcf	??_CANSetFilter+2,f,c
  2412  000782  3221               	rrcf	??_CANSetFilter+1,f,c
  2413  000784  3220               	rrcf	??_CANSetFilter,f,c
  2414  000786                     u3900:
  2415  000786  2EE8               	decfsz	wreg,f,c
  2416  000788  D7F9               	goto	u3905
  2417  00078A  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2418  00078E  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2419  000792  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2420  000796  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2421                           
  2422                           ; BSR set to: 15
  2423                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  2424  00079A  5025               	movf	CANSetFilter@tamp,w,c
  2425  00079C  6E25               	movwf	CANSetFilter@tamp,c
  2426  00079E  6A26               	clrf	CANSetFilter@tamp+1,c
  2427  0007A0  6A27               	clrf	CANSetFilter@tamp+2,c
  2428  0007A2  6A28               	clrf	CANSetFilter@tamp+3,c
  2429                           
  2430                           ; BSR set to: 15
  2431                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  2432  0007A4  C025  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2433  0007A8                     l3537:
  2434                           
  2435                           ;inc\CANlib.h: 870: }
  2436                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  2437  0007A8  0424               	decf	CANSetFilter@numBuffer,w,c
  2438  0007AA  A4D8               	btfss	status,2,c
  2439  0007AC  D075               	goto	l3571
  2440  0007AE  0EF7               	movlw	247
  2441  0007B0  181F               	xorwf	CANSetFilter@type,w,c
  2442  0007B2  A4D8               	btfss	status,2,c
  2443  0007B4  D071               	goto	l3571
  2444                           
  2445                           ;inc\CANlib.h: 873: {
  2446                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  2447  0007B6  010F               	movlb	15	; () banked
  2448  0007B8  8705               	bsf	5,3,b	;volatile
  2449                           
  2450                           ; BSR set to: 15
  2451                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  2452  0007BA  501B               	movf	CANSetFilter@filter,w,c
  2453  0007BC  6E25               	movwf	CANSetFilter@tamp,c
  2454  0007BE  6A26               	clrf	CANSetFilter@tamp+1,c
  2455  0007C0  6A27               	clrf	CANSetFilter@tamp+2,c
  2456  0007C2  6A28               	clrf	CANSetFilter@tamp+3,c
  2457                           
  2458                           ; BSR set to: 15
  2459                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  2460  0007C4  C025  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  2461                           
  2462                           ; BSR set to: 15
  2463                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  2464  0007C8  0E00               	movlw	0
  2465  0007CA  141B               	andwf	CANSetFilter@filter,w,c
  2466  0007CC  6E25               	movwf	CANSetFilter@tamp,c
  2467  0007CE  0EFF               	movlw	255
  2468  0007D0  141C               	andwf	CANSetFilter@filter+1,w,c
  2469  0007D2  6E26               	movwf	CANSetFilter@tamp+1,c
  2470  0007D4  0E00               	movlw	0
  2471  0007D6  141D               	andwf	CANSetFilter@filter+2,w,c
  2472  0007D8  6E27               	movwf	CANSetFilter@tamp+2,c
  2473  0007DA  0E00               	movlw	0
  2474  0007DC  141E               	andwf	CANSetFilter@filter+3,w,c
  2475  0007DE  6E28               	movwf	CANSetFilter@tamp+3,c
  2476                           
  2477                           ; BSR set to: 15
  2478                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  2479  0007E0  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2480  0007E4  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2481  0007E8  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2482  0007EC  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2483  0007F0  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2484  0007F4  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2485  0007F8  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2486  0007FC  6A23               	clrf	??_CANSetFilter+3,c
  2487  0007FE  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2488  000802  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2489  000806  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2490  00080A  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2491                           
  2492                           ; BSR set to: 15
  2493                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  2494  00080E  C025  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  2495                           
  2496                           ; BSR set to: 15
  2497                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  2498  000812  A01D               	btfss	CANSetFilter@filter+2,0,c
  2499  000814  D003               	goto	l438
  2500                           
  2501                           ; BSR set to: 15
  2502                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  2503  000816  010F               	movlb	15	; () banked
  2504  000818  8105               	bsf	5,0,b	;volatile
  2505  00081A  D002               	goto	l439
  2506  00081C                     l438:
  2507                           
  2508                           ; BSR set to: 15
  2509                           ;inc\CANlib.h: 885: else
  2510                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  2511  00081C  010F               	movlb	15	; () banked
  2512  00081E  9105               	bcf	5,0,b	;volatile
  2513  000820                     l439:
  2514                           
  2515                           ; BSR set to: 15
  2516                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  2517  000820  A21D               	btfss	CANSetFilter@filter+2,1,c
  2518  000822  D003               	goto	l440
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  2522  000824  010F               	movlb	15	; () banked
  2523  000826  8305               	bsf	5,1,b	;volatile
  2524  000828  D002               	goto	l441
  2525  00082A                     l440:
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;inc\CANlib.h: 890: else
  2529                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  2530  00082A  010F               	movlb	15	; () banked
  2531  00082C  9305               	bcf	5,1,b	;volatile
  2532  00082E                     l441:
  2533                           
  2534                           ; BSR set to: 15
  2535                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  2536  00082E  A41D               	btfss	CANSetFilter@filter+2,2,c
  2537  000830  D003               	goto	l442
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  2541  000832  010F               	movlb	15	; () banked
  2542  000834  8B05               	bsf	5,5,b	;volatile
  2543  000836  D002               	goto	l443
  2544  000838                     l442:
  2545                           
  2546                           ; BSR set to: 15
  2547                           ;inc\CANlib.h: 895: else
  2548                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  2549  000838  010F               	movlb	15	; () banked
  2550  00083A  9B05               	bcf	5,5,b	;volatile
  2551  00083C                     l443:
  2552                           
  2553                           ; BSR set to: 15
  2554                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  2555  00083C  A61D               	btfss	CANSetFilter@filter+2,3,c
  2556  00083E  D003               	goto	l444
  2557                           
  2558                           ; BSR set to: 15
  2559                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  2560  000840  010F               	movlb	15	; () banked
  2561  000842  8D05               	bsf	5,6,b	;volatile
  2562  000844  D002               	goto	l445
  2563  000846                     l444:
  2564                           
  2565                           ; BSR set to: 15
  2566                           ;inc\CANlib.h: 900: else
  2567                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  2568  000846  010F               	movlb	15	; () banked
  2569  000848  9D05               	bcf	5,6,b	;volatile
  2570  00084A                     l445:
  2571                           
  2572                           ; BSR set to: 15
  2573                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  2574  00084A  A81D               	btfss	CANSetFilter@filter+2,4,c
  2575  00084C  D003               	goto	l446
  2576                           
  2577                           ; BSR set to: 15
  2578                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  2579  00084E  010F               	movlb	15	; () banked
  2580  000850  8F05               	bsf	5,7,b	;volatile
  2581  000852  D002               	goto	l3565
  2582  000854                     l446:
  2583                           
  2584                           ; BSR set to: 15
  2585                           ;inc\CANlib.h: 905: else
  2586                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  2587  000854  010F               	movlb	15	; () banked
  2588  000856  9F05               	bcf	5,7,b	;volatile
  2589  000858                     l3565:
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  2593  000858  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2594  00085C  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2595  000860  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2596  000864  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2597  000868  0E16               	movlw	22
  2598  00086A  D005               	goto	u3980
  2599  00086C                     u3985:
  2600  00086C  90D8               	bcf	status,0,c
  2601  00086E  3223               	rrcf	??_CANSetFilter+3,f,c
  2602  000870  3222               	rrcf	??_CANSetFilter+2,f,c
  2603  000872  3221               	rrcf	??_CANSetFilter+1,f,c
  2604  000874  3220               	rrcf	??_CANSetFilter,f,c
  2605  000876                     u3980:
  2606  000876  2EE8               	decfsz	wreg,f,c
  2607  000878  D7F9               	goto	u3985
  2608  00087A  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2609  00087E  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2610  000882  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2611  000886  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2612                           
  2613                           ; BSR set to: 15
  2614                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  2615  00088A  5025               	movf	CANSetFilter@tamp,w,c
  2616  00088C  6E25               	movwf	CANSetFilter@tamp,c
  2617  00088E  6A26               	clrf	CANSetFilter@tamp+1,c
  2618  000890  6A27               	clrf	CANSetFilter@tamp+2,c
  2619  000892  6A28               	clrf	CANSetFilter@tamp+3,c
  2620                           
  2621                           ; BSR set to: 15
  2622                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  2623  000894  C025  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  2624  000898                     l3571:
  2625                           
  2626                           ;inc\CANlib.h: 911: }
  2627                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  2628  000898  0E02               	movlw	2
  2629  00089A  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2630  00089C  A4D8               	btfss	status,2,c
  2631  00089E  D075               	goto	l3605
  2632  0008A0  0EF7               	movlw	247
  2633  0008A2  181F               	xorwf	CANSetFilter@type,w,c
  2634  0008A4  A4D8               	btfss	status,2,c
  2635  0008A6  D071               	goto	l3605
  2636                           
  2637                           ;inc\CANlib.h: 915: {
  2638                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  2639  0008A8  010F               	movlb	15	; () banked
  2640  0008AA  8709               	bsf	9,3,b	;volatile
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  2644  0008AC  501B               	movf	CANSetFilter@filter,w,c
  2645  0008AE  6E25               	movwf	CANSetFilter@tamp,c
  2646  0008B0  6A26               	clrf	CANSetFilter@tamp+1,c
  2647  0008B2  6A27               	clrf	CANSetFilter@tamp+2,c
  2648  0008B4  6A28               	clrf	CANSetFilter@tamp+3,c
  2649                           
  2650                           ; BSR set to: 15
  2651                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  2652  0008B6  C025  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  2656  0008BA  0E00               	movlw	0
  2657  0008BC  141B               	andwf	CANSetFilter@filter,w,c
  2658  0008BE  6E25               	movwf	CANSetFilter@tamp,c
  2659  0008C0  0EFF               	movlw	255
  2660  0008C2  141C               	andwf	CANSetFilter@filter+1,w,c
  2661  0008C4  6E26               	movwf	CANSetFilter@tamp+1,c
  2662  0008C6  0E00               	movlw	0
  2663  0008C8  141D               	andwf	CANSetFilter@filter+2,w,c
  2664  0008CA  6E27               	movwf	CANSetFilter@tamp+2,c
  2665  0008CC  0E00               	movlw	0
  2666  0008CE  141E               	andwf	CANSetFilter@filter+3,w,c
  2667  0008D0  6E28               	movwf	CANSetFilter@tamp+3,c
  2668                           
  2669                           ; BSR set to: 15
  2670                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  2671  0008D2  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2672  0008D6  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2673  0008DA  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2674  0008DE  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2675  0008E2  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2676  0008E6  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2677  0008EA  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2678  0008EE  6A23               	clrf	??_CANSetFilter+3,c
  2679  0008F0  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2680  0008F4  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2681  0008F8  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2682  0008FC  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2683                           
  2684                           ; BSR set to: 15
  2685                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  2686  000900  C025  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  2687                           
  2688                           ; BSR set to: 15
  2689                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  2690  000904  A01D               	btfss	CANSetFilter@filter+2,0,c
  2691  000906  D003               	goto	l449
  2692                           
  2693                           ; BSR set to: 15
  2694                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  2695  000908  010F               	movlb	15	; () banked
  2696  00090A  8109               	bsf	9,0,b	;volatile
  2697  00090C  D002               	goto	l450
  2698  00090E                     l449:
  2699                           
  2700                           ; BSR set to: 15
  2701                           ;inc\CANlib.h: 927: else
  2702                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  2703  00090E  010F               	movlb	15	; () banked
  2704  000910  9109               	bcf	9,0,b	;volatile
  2705  000912                     l450:
  2706                           
  2707                           ; BSR set to: 15
  2708                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  2709  000912  A21D               	btfss	CANSetFilter@filter+2,1,c
  2710  000914  D003               	goto	l451
  2711                           
  2712                           ; BSR set to: 15
  2713                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  2714  000916  010F               	movlb	15	; () banked
  2715  000918  8309               	bsf	9,1,b	;volatile
  2716  00091A  D002               	goto	l452
  2717  00091C                     l451:
  2718                           
  2719                           ; BSR set to: 15
  2720                           ;inc\CANlib.h: 932: else
  2721                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  2722  00091C  010F               	movlb	15	; () banked
  2723  00091E  9309               	bcf	9,1,b	;volatile
  2724  000920                     l452:
  2725                           
  2726                           ; BSR set to: 15
  2727                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  2728  000920  A41D               	btfss	CANSetFilter@filter+2,2,c
  2729  000922  D003               	goto	l453
  2730                           
  2731                           ; BSR set to: 15
  2732                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  2733  000924  010F               	movlb	15	; () banked
  2734  000926  8B09               	bsf	9,5,b	;volatile
  2735  000928  D002               	goto	l454
  2736  00092A                     l453:
  2737                           
  2738                           ; BSR set to: 15
  2739                           ;inc\CANlib.h: 937: else
  2740                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  2741  00092A  010F               	movlb	15	; () banked
  2742  00092C  9B09               	bcf	9,5,b	;volatile
  2743  00092E                     l454:
  2744                           
  2745                           ; BSR set to: 15
  2746                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  2747  00092E  A61D               	btfss	CANSetFilter@filter+2,3,c
  2748  000930  D003               	goto	l455
  2749                           
  2750                           ; BSR set to: 15
  2751                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  2752  000932  010F               	movlb	15	; () banked
  2753  000934  8D09               	bsf	9,6,b	;volatile
  2754  000936  D002               	goto	l456
  2755  000938                     l455:
  2756                           
  2757                           ; BSR set to: 15
  2758                           ;inc\CANlib.h: 942: else
  2759                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  2760  000938  010F               	movlb	15	; () banked
  2761  00093A  9D09               	bcf	9,6,b	;volatile
  2762  00093C                     l456:
  2763                           
  2764                           ; BSR set to: 15
  2765                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  2766  00093C  A81D               	btfss	CANSetFilter@filter+2,4,c
  2767  00093E  D003               	goto	l457
  2768                           
  2769                           ; BSR set to: 15
  2770                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  2771  000940  010F               	movlb	15	; () banked
  2772  000942  8F09               	bsf	9,7,b	;volatile
  2773  000944  D002               	goto	l3599
  2774  000946                     l457:
  2775                           
  2776                           ; BSR set to: 15
  2777                           ;inc\CANlib.h: 947: else
  2778                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  2779  000946  010F               	movlb	15	; () banked
  2780  000948  9F09               	bcf	9,7,b	;volatile
  2781  00094A                     l3599:
  2782                           
  2783                           ; BSR set to: 15
  2784                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  2785  00094A  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2786  00094E  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2787  000952  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2788  000956  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2789  00095A  0E16               	movlw	22
  2790  00095C  D005               	goto	u4060
  2791  00095E                     u4065:
  2792  00095E  90D8               	bcf	status,0,c
  2793  000960  3223               	rrcf	??_CANSetFilter+3,f,c
  2794  000962  3222               	rrcf	??_CANSetFilter+2,f,c
  2795  000964  3221               	rrcf	??_CANSetFilter+1,f,c
  2796  000966  3220               	rrcf	??_CANSetFilter,f,c
  2797  000968                     u4060:
  2798  000968  2EE8               	decfsz	wreg,f,c
  2799  00096A  D7F9               	goto	u4065
  2800  00096C  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2801  000970  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2802  000974  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2803  000978  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2804                           
  2805                           ; BSR set to: 15
  2806                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  2807  00097C  5025               	movf	CANSetFilter@tamp,w,c
  2808  00097E  6E25               	movwf	CANSetFilter@tamp,c
  2809  000980  6A26               	clrf	CANSetFilter@tamp+1,c
  2810  000982  6A27               	clrf	CANSetFilter@tamp+2,c
  2811  000984  6A28               	clrf	CANSetFilter@tamp+3,c
  2812                           
  2813                           ; BSR set to: 15
  2814                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  2815  000986  C025  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  2816  00098A                     l3605:
  2817                           
  2818                           ;inc\CANlib.h: 953: }
  2819                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  2820  00098A  0E03               	movlw	3
  2821  00098C  1824               	xorwf	CANSetFilter@numBuffer,w,c
  2822  00098E  A4D8               	btfss	status,2,c
  2823  000990  D075               	goto	l3639
  2824  000992  0EF7               	movlw	247
  2825  000994  181F               	xorwf	CANSetFilter@type,w,c
  2826  000996  A4D8               	btfss	status,2,c
  2827  000998  D071               	goto	l3639
  2828                           
  2829                           ;inc\CANlib.h: 956: {
  2830                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  2831  00099A  010F               	movlb	15	; () banked
  2832  00099C  870D               	bsf	13,3,b	;volatile
  2833                           
  2834                           ; BSR set to: 15
  2835                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  2836  00099E  501B               	movf	CANSetFilter@filter,w,c
  2837  0009A0  6E25               	movwf	CANSetFilter@tamp,c
  2838  0009A2  6A26               	clrf	CANSetFilter@tamp+1,c
  2839  0009A4  6A27               	clrf	CANSetFilter@tamp+2,c
  2840  0009A6  6A28               	clrf	CANSetFilter@tamp+3,c
  2841                           
  2842                           ; BSR set to: 15
  2843                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  2844  0009A8  C025  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  2848  0009AC  0E00               	movlw	0
  2849  0009AE  141B               	andwf	CANSetFilter@filter,w,c
  2850  0009B0  6E25               	movwf	CANSetFilter@tamp,c
  2851  0009B2  0EFF               	movlw	255
  2852  0009B4  141C               	andwf	CANSetFilter@filter+1,w,c
  2853  0009B6  6E26               	movwf	CANSetFilter@tamp+1,c
  2854  0009B8  0E00               	movlw	0
  2855  0009BA  141D               	andwf	CANSetFilter@filter+2,w,c
  2856  0009BC  6E27               	movwf	CANSetFilter@tamp+2,c
  2857  0009BE  0E00               	movlw	0
  2858  0009C0  141E               	andwf	CANSetFilter@filter+3,w,c
  2859  0009C2  6E28               	movwf	CANSetFilter@tamp+3,c
  2860                           
  2861                           ; BSR set to: 15
  2862                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  2863  0009C4  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  2864  0009C8  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2865  0009CC  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2866  0009D0  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2867  0009D4  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  2868  0009D8  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  2869  0009DC  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  2870  0009E0  6A23               	clrf	??_CANSetFilter+3,c
  2871  0009E2  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2872  0009E6  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2873  0009EA  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2874  0009EE  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2875                           
  2876                           ; BSR set to: 15
  2877                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  2878  0009F2  C025  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  2882  0009F6  A01D               	btfss	CANSetFilter@filter+2,0,c
  2883  0009F8  D003               	goto	l460
  2884                           
  2885                           ; BSR set to: 15
  2886                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  2887  0009FA  010F               	movlb	15	; () banked
  2888  0009FC  810D               	bsf	13,0,b	;volatile
  2889  0009FE  D002               	goto	l461
  2890  000A00                     l460:
  2891                           
  2892                           ; BSR set to: 15
  2893                           ;inc\CANlib.h: 968: else
  2894                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  2895  000A00  010F               	movlb	15	; () banked
  2896  000A02  910D               	bcf	13,0,b	;volatile
  2897  000A04                     l461:
  2898                           
  2899                           ; BSR set to: 15
  2900                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  2901  000A04  A21D               	btfss	CANSetFilter@filter+2,1,c
  2902  000A06  D003               	goto	l462
  2903                           
  2904                           ; BSR set to: 15
  2905                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  2906  000A08  010F               	movlb	15	; () banked
  2907  000A0A  830D               	bsf	13,1,b	;volatile
  2908  000A0C  D002               	goto	l463
  2909  000A0E                     l462:
  2910                           
  2911                           ; BSR set to: 15
  2912                           ;inc\CANlib.h: 973: else
  2913                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  2914  000A0E  010F               	movlb	15	; () banked
  2915  000A10  930D               	bcf	13,1,b	;volatile
  2916  000A12                     l463:
  2917                           
  2918                           ; BSR set to: 15
  2919                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  2920  000A12  A41D               	btfss	CANSetFilter@filter+2,2,c
  2921  000A14  D003               	goto	l464
  2922                           
  2923                           ; BSR set to: 15
  2924                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  2925  000A16  010F               	movlb	15	; () banked
  2926  000A18  8B0D               	bsf	13,5,b	;volatile
  2927  000A1A  D002               	goto	l465
  2928  000A1C                     l464:
  2929                           
  2930                           ; BSR set to: 15
  2931                           ;inc\CANlib.h: 978: else
  2932                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  2933  000A1C  010F               	movlb	15	; () banked
  2934  000A1E  9B0D               	bcf	13,5,b	;volatile
  2935  000A20                     l465:
  2936                           
  2937                           ; BSR set to: 15
  2938                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  2939  000A20  A61D               	btfss	CANSetFilter@filter+2,3,c
  2940  000A22  D003               	goto	l466
  2941                           
  2942                           ; BSR set to: 15
  2943                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  2944  000A24  010F               	movlb	15	; () banked
  2945  000A26  8D0D               	bsf	13,6,b	;volatile
  2946  000A28  D002               	goto	l467
  2947  000A2A                     l466:
  2948                           
  2949                           ; BSR set to: 15
  2950                           ;inc\CANlib.h: 983: else
  2951                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  2952  000A2A  010F               	movlb	15	; () banked
  2953  000A2C  9D0D               	bcf	13,6,b	;volatile
  2954  000A2E                     l467:
  2955                           
  2956                           ; BSR set to: 15
  2957                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  2958  000A2E  A81D               	btfss	CANSetFilter@filter+2,4,c
  2959  000A30  D003               	goto	l468
  2960                           
  2961                           ; BSR set to: 15
  2962                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  2963  000A32  010F               	movlb	15	; () banked
  2964  000A34  8F0D               	bsf	13,7,b	;volatile
  2965  000A36  D002               	goto	l3633
  2966  000A38                     l468:
  2967                           
  2968                           ; BSR set to: 15
  2969                           ;inc\CANlib.h: 988: else
  2970                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  2971  000A38  010F               	movlb	15	; () banked
  2972  000A3A  9F0D               	bcf	13,7,b	;volatile
  2973  000A3C                     l3633:
  2974                           
  2975                           ; BSR set to: 15
  2976                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  2977  000A3C  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  2978  000A40  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2979  000A44  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2980  000A48  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2981  000A4C  0E16               	movlw	22
  2982  000A4E  D005               	goto	u4140
  2983  000A50                     u4145:
  2984  000A50  90D8               	bcf	status,0,c
  2985  000A52  3223               	rrcf	??_CANSetFilter+3,f,c
  2986  000A54  3222               	rrcf	??_CANSetFilter+2,f,c
  2987  000A56  3221               	rrcf	??_CANSetFilter+1,f,c
  2988  000A58  3220               	rrcf	??_CANSetFilter,f,c
  2989  000A5A                     u4140:
  2990  000A5A  2EE8               	decfsz	wreg,f,c
  2991  000A5C  D7F9               	goto	u4145
  2992  000A5E  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  2993  000A62  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2994  000A66  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2995  000A6A  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2996                           
  2997                           ; BSR set to: 15
  2998                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  2999  000A6E  5025               	movf	CANSetFilter@tamp,w,c
  3000  000A70  6E25               	movwf	CANSetFilter@tamp,c
  3001  000A72  6A26               	clrf	CANSetFilter@tamp+1,c
  3002  000A74  6A27               	clrf	CANSetFilter@tamp+2,c
  3003  000A76  6A28               	clrf	CANSetFilter@tamp+3,c
  3004                           
  3005                           ; BSR set to: 15
  3006                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  3007  000A78  C025  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3008  000A7C                     l3639:
  3009                           
  3010                           ;inc\CANlib.h: 994: }
  3011                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  3012  000A7C  0E04               	movlw	4
  3013  000A7E  1824               	xorwf	CANSetFilter@numBuffer,w,c
  3014  000A80  A4D8               	btfss	status,2,c
  3015  000A82  D075               	goto	l3673
  3016  000A84  0EF7               	movlw	247
  3017  000A86  181F               	xorwf	CANSetFilter@type,w,c
  3018  000A88  A4D8               	btfss	status,2,c
  3019  000A8A  D071               	goto	l3673
  3020                           
  3021                           ;inc\CANlib.h: 997: {
  3022                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  3023  000A8C  010F               	movlb	15	; () banked
  3024  000A8E  8711               	bsf	17,3,b	;volatile
  3025                           
  3026                           ; BSR set to: 15
  3027                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  3028  000A90  501B               	movf	CANSetFilter@filter,w,c
  3029  000A92  6E25               	movwf	CANSetFilter@tamp,c
  3030  000A94  6A26               	clrf	CANSetFilter@tamp+1,c
  3031  000A96  6A27               	clrf	CANSetFilter@tamp+2,c
  3032  000A98  6A28               	clrf	CANSetFilter@tamp+3,c
  3033                           
  3034                           ; BSR set to: 15
  3035                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  3036  000A9A  C025  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  3037                           
  3038                           ; BSR set to: 15
  3039                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  3040  000A9E  0E00               	movlw	0
  3041  000AA0  141B               	andwf	CANSetFilter@filter,w,c
  3042  000AA2  6E25               	movwf	CANSetFilter@tamp,c
  3043  000AA4  0EFF               	movlw	255
  3044  000AA6  141C               	andwf	CANSetFilter@filter+1,w,c
  3045  000AA8  6E26               	movwf	CANSetFilter@tamp+1,c
  3046  000AAA  0E00               	movlw	0
  3047  000AAC  141D               	andwf	CANSetFilter@filter+2,w,c
  3048  000AAE  6E27               	movwf	CANSetFilter@tamp+2,c
  3049  000AB0  0E00               	movlw	0
  3050  000AB2  141E               	andwf	CANSetFilter@filter+3,w,c
  3051  000AB4  6E28               	movwf	CANSetFilter@tamp+3,c
  3052                           
  3053                           ; BSR set to: 15
  3054                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  3055  000AB6  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  3056  000ABA  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3057  000ABE  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3058  000AC2  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3059  000AC6  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  3060  000ACA  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3061  000ACE  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3062  000AD2  6A23               	clrf	??_CANSetFilter+3,c
  3063  000AD4  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3064  000AD8  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3065  000ADC  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3066  000AE0  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3067                           
  3068                           ; BSR set to: 15
  3069                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  3070  000AE4  C025  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  3071                           
  3072                           ; BSR set to: 15
  3073                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  3074  000AE8  A01D               	btfss	CANSetFilter@filter+2,0,c
  3075  000AEA  D003               	goto	l471
  3076                           
  3077                           ; BSR set to: 15
  3078                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  3079  000AEC  010F               	movlb	15	; () banked
  3080  000AEE  8111               	bsf	17,0,b	;volatile
  3081  000AF0  D002               	goto	l472
  3082  000AF2                     l471:
  3083                           
  3084                           ; BSR set to: 15
  3085                           ;inc\CANlib.h: 1009: else
  3086                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  3087  000AF2  010F               	movlb	15	; () banked
  3088  000AF4  9111               	bcf	17,0,b	;volatile
  3089  000AF6                     l472:
  3090                           
  3091                           ; BSR set to: 15
  3092                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  3093  000AF6  A21D               	btfss	CANSetFilter@filter+2,1,c
  3094  000AF8  D003               	goto	l473
  3095                           
  3096                           ; BSR set to: 15
  3097                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  3098  000AFA  010F               	movlb	15	; () banked
  3099  000AFC  8311               	bsf	17,1,b	;volatile
  3100  000AFE  D002               	goto	l474
  3101  000B00                     l473:
  3102                           
  3103                           ; BSR set to: 15
  3104                           ;inc\CANlib.h: 1014: else
  3105                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  3106  000B00  010F               	movlb	15	; () banked
  3107  000B02  9311               	bcf	17,1,b	;volatile
  3108  000B04                     l474:
  3109                           
  3110                           ; BSR set to: 15
  3111                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  3112  000B04  A41D               	btfss	CANSetFilter@filter+2,2,c
  3113  000B06  D003               	goto	l475
  3114                           
  3115                           ; BSR set to: 15
  3116                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  3117  000B08  010F               	movlb	15	; () banked
  3118  000B0A  8B11               	bsf	17,5,b	;volatile
  3119  000B0C  D002               	goto	l476
  3120  000B0E                     l475:
  3121                           
  3122                           ; BSR set to: 15
  3123                           ;inc\CANlib.h: 1019: else
  3124                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  3125  000B0E  010F               	movlb	15	; () banked
  3126  000B10  9B11               	bcf	17,5,b	;volatile
  3127  000B12                     l476:
  3128                           
  3129                           ; BSR set to: 15
  3130                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  3131  000B12  A61D               	btfss	CANSetFilter@filter+2,3,c
  3132  000B14  D003               	goto	l477
  3133                           
  3134                           ; BSR set to: 15
  3135                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  3136  000B16  010F               	movlb	15	; () banked
  3137  000B18  8D11               	bsf	17,6,b	;volatile
  3138  000B1A  D002               	goto	l478
  3139  000B1C                     l477:
  3140                           
  3141                           ; BSR set to: 15
  3142                           ;inc\CANlib.h: 1024: else
  3143                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  3144  000B1C  010F               	movlb	15	; () banked
  3145  000B1E  9D11               	bcf	17,6,b	;volatile
  3146  000B20                     l478:
  3147                           
  3148                           ; BSR set to: 15
  3149                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  3150  000B20  A81D               	btfss	CANSetFilter@filter+2,4,c
  3151  000B22  D003               	goto	l479
  3152                           
  3153                           ; BSR set to: 15
  3154                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  3155  000B24  010F               	movlb	15	; () banked
  3156  000B26  8F11               	bsf	17,7,b	;volatile
  3157  000B28  D002               	goto	l3667
  3158  000B2A                     l479:
  3159                           
  3160                           ; BSR set to: 15
  3161                           ;inc\CANlib.h: 1029: else
  3162                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  3163  000B2A  010F               	movlb	15	; () banked
  3164  000B2C  9F11               	bcf	17,7,b	;volatile
  3165  000B2E                     l3667:
  3166                           
  3167                           ; BSR set to: 15
  3168                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  3169  000B2E  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  3170  000B32  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3171  000B36  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3172  000B3A  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3173  000B3E  0E16               	movlw	22
  3174  000B40  D005               	goto	u4220
  3175  000B42                     u4225:
  3176  000B42  90D8               	bcf	status,0,c
  3177  000B44  3223               	rrcf	??_CANSetFilter+3,f,c
  3178  000B46  3222               	rrcf	??_CANSetFilter+2,f,c
  3179  000B48  3221               	rrcf	??_CANSetFilter+1,f,c
  3180  000B4A  3220               	rrcf	??_CANSetFilter,f,c
  3181  000B4C                     u4220:
  3182  000B4C  2EE8               	decfsz	wreg,f,c
  3183  000B4E  D7F9               	goto	u4225
  3184  000B50  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3185  000B54  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3186  000B58  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3187  000B5C  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3188                           
  3189                           ; BSR set to: 15
  3190                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  3191  000B60  5025               	movf	CANSetFilter@tamp,w,c
  3192  000B62  6E25               	movwf	CANSetFilter@tamp,c
  3193  000B64  6A26               	clrf	CANSetFilter@tamp+1,c
  3194  000B66  6A27               	clrf	CANSetFilter@tamp+2,c
  3195  000B68  6A28               	clrf	CANSetFilter@tamp+3,c
  3196                           
  3197                           ; BSR set to: 15
  3198                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  3199  000B6A  C025  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3200  000B6E                     l3673:
  3201                           
  3202                           ;inc\CANlib.h: 1035: }
  3203                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  3204  000B6E  0E05               	movlw	5
  3205  000B70  1824               	xorwf	CANSetFilter@numBuffer,w,c
  3206  000B72  A4D8               	btfss	status,2,c
  3207  000B74  0012               	return	
  3208  000B76  0EF7               	movlw	247
  3209  000B78  181F               	xorwf	CANSetFilter@type,w,c
  3210  000B7A  A4D8               	btfss	status,2,c
  3211  000B7C  0012               	return	
  3212                           
  3213                           ;inc\CANlib.h: 1038: {
  3214                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  3215  000B7E  010F               	movlb	15	; () banked
  3216  000B80  8715               	bsf	21,3,b	;volatile
  3217                           
  3218                           ; BSR set to: 15
  3219                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  3220  000B82  501B               	movf	CANSetFilter@filter,w,c
  3221  000B84  6E25               	movwf	CANSetFilter@tamp,c
  3222  000B86  6A26               	clrf	CANSetFilter@tamp+1,c
  3223  000B88  6A27               	clrf	CANSetFilter@tamp+2,c
  3224  000B8A  6A28               	clrf	CANSetFilter@tamp+3,c
  3225                           
  3226                           ; BSR set to: 15
  3227                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  3228  000B8C  C025  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  3229                           
  3230                           ; BSR set to: 15
  3231                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  3232  000B90  0E00               	movlw	0
  3233  000B92  141B               	andwf	CANSetFilter@filter,w,c
  3234  000B94  6E25               	movwf	CANSetFilter@tamp,c
  3235  000B96  0EFF               	movlw	255
  3236  000B98  141C               	andwf	CANSetFilter@filter+1,w,c
  3237  000B9A  6E26               	movwf	CANSetFilter@tamp+1,c
  3238  000B9C  0E00               	movlw	0
  3239  000B9E  141D               	andwf	CANSetFilter@filter+2,w,c
  3240  000BA0  6E27               	movwf	CANSetFilter@tamp+2,c
  3241  000BA2  0E00               	movlw	0
  3242  000BA4  141E               	andwf	CANSetFilter@filter+3,w,c
  3243  000BA6  6E28               	movwf	CANSetFilter@tamp+3,c
  3244                           
  3245                           ; BSR set to: 15
  3246                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  3247  000BA8  C025  F020         	movff	CANSetFilter@tamp,??_CANSetFilter
  3248  000BAC  C026  F021         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3249  000BB0  C027  F022         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3250  000BB4  C028  F023         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3251  000BB8  C021  F020         	movff	??_CANSetFilter+1,??_CANSetFilter
  3252  000BBC  C022  F021         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3253  000BC0  C023  F022         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3254  000BC4  6A23               	clrf	??_CANSetFilter+3,c
  3255  000BC6  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3256  000BCA  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3257  000BCE  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3258  000BD2  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3259                           
  3260                           ; BSR set to: 15
  3261                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  3262  000BD6  C025  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  3263                           
  3264                           ; BSR set to: 15
  3265                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  3266  000BDA  A01D               	btfss	CANSetFilter@filter+2,0,c
  3267  000BDC  D003               	goto	l482
  3268                           
  3269                           ; BSR set to: 15
  3270                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  3271  000BDE  010F               	movlb	15	; () banked
  3272  000BE0  8115               	bsf	21,0,b	;volatile
  3273  000BE2  D002               	goto	l483
  3274  000BE4                     l482:
  3275                           
  3276                           ; BSR set to: 15
  3277                           ;inc\CANlib.h: 1050: else
  3278                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  3279  000BE4  010F               	movlb	15	; () banked
  3280  000BE6  9115               	bcf	21,0,b	;volatile
  3281  000BE8                     l483:
  3282                           
  3283                           ; BSR set to: 15
  3284                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  3285  000BE8  A21D               	btfss	CANSetFilter@filter+2,1,c
  3286  000BEA  D003               	goto	l484
  3287                           
  3288                           ; BSR set to: 15
  3289                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  3290  000BEC  010F               	movlb	15	; () banked
  3291  000BEE  8315               	bsf	21,1,b	;volatile
  3292  000BF0  D002               	goto	l485
  3293  000BF2                     l484:
  3294                           
  3295                           ; BSR set to: 15
  3296                           ;inc\CANlib.h: 1055: else
  3297                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  3298  000BF2  010F               	movlb	15	; () banked
  3299  000BF4  9315               	bcf	21,1,b	;volatile
  3300  000BF6                     l485:
  3301                           
  3302                           ; BSR set to: 15
  3303                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  3304  000BF6  A41D               	btfss	CANSetFilter@filter+2,2,c
  3305  000BF8  D003               	goto	l486
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  3309  000BFA  010F               	movlb	15	; () banked
  3310  000BFC  8B15               	bsf	21,5,b	;volatile
  3311  000BFE  D002               	goto	l487
  3312  000C00                     l486:
  3313                           
  3314                           ; BSR set to: 15
  3315                           ;inc\CANlib.h: 1060: else
  3316                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  3317  000C00  010F               	movlb	15	; () banked
  3318  000C02  9B15               	bcf	21,5,b	;volatile
  3319  000C04                     l487:
  3320                           
  3321                           ; BSR set to: 15
  3322                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  3323  000C04  A61D               	btfss	CANSetFilter@filter+2,3,c
  3324  000C06  D003               	goto	l488
  3325                           
  3326                           ; BSR set to: 15
  3327                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  3328  000C08  010F               	movlb	15	; () banked
  3329  000C0A  8D15               	bsf	21,6,b	;volatile
  3330  000C0C  D002               	goto	l489
  3331  000C0E                     l488:
  3332                           
  3333                           ; BSR set to: 15
  3334                           ;inc\CANlib.h: 1065: else
  3335                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  3336  000C0E  010F               	movlb	15	; () banked
  3337  000C10  9D15               	bcf	21,6,b	;volatile
  3338  000C12                     l489:
  3339                           
  3340                           ; BSR set to: 15
  3341                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  3342  000C12  A81D               	btfss	CANSetFilter@filter+2,4,c
  3343  000C14  D003               	goto	l490
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  3347  000C16  010F               	movlb	15	; () banked
  3348  000C18  8F15               	bsf	21,7,b	;volatile
  3349  000C1A  D002               	goto	l3701
  3350  000C1C                     l490:
  3351                           
  3352                           ; BSR set to: 15
  3353                           ;inc\CANlib.h: 1070: else
  3354                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  3355  000C1C  010F               	movlb	15	; () banked
  3356  000C1E  9F15               	bcf	21,7,b	;volatile
  3357  000C20                     l3701:
  3358                           
  3359                           ; BSR set to: 15
  3360                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  3361  000C20  C01B  F020         	movff	CANSetFilter@filter,??_CANSetFilter
  3362  000C24  C01C  F021         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3363  000C28  C01D  F022         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3364  000C2C  C01E  F023         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3365  000C30  0E16               	movlw	22
  3366  000C32  D005               	goto	u4300
  3367  000C34                     u4305:
  3368  000C34  90D8               	bcf	status,0,c
  3369  000C36  3223               	rrcf	??_CANSetFilter+3,f,c
  3370  000C38  3222               	rrcf	??_CANSetFilter+2,f,c
  3371  000C3A  3221               	rrcf	??_CANSetFilter+1,f,c
  3372  000C3C  3220               	rrcf	??_CANSetFilter,f,c
  3373  000C3E                     u4300:
  3374  000C3E  2EE8               	decfsz	wreg,f,c
  3375  000C40  D7F9               	goto	u4305
  3376  000C42  C020  F025         	movff	??_CANSetFilter,CANSetFilter@tamp
  3377  000C46  C021  F026         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3378  000C4A  C022  F027         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3379  000C4E  C023  F028         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3380                           
  3381                           ; BSR set to: 15
  3382                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  3383  000C52  5025               	movf	CANSetFilter@tamp,w,c
  3384  000C54  6E25               	movwf	CANSetFilter@tamp,c
  3385  000C56  6A26               	clrf	CANSetFilter@tamp+1,c
  3386  000C58  6A27               	clrf	CANSetFilter@tamp+2,c
  3387  000C5A  6A28               	clrf	CANSetFilter@tamp+3,c
  3388                           
  3389                           ; BSR set to: 15
  3390                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  3391  000C5C  C025  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3392  000C60  0012               	return	
  3393  000C62                     __end_of_CANSetFilter:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _CANOperationMode *****************
  3404 ;; Defined at:
  3405 ;;		line 206 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  mode            1    wreg     enum E15923
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  mode            1   26[COMRAM] enum E15923
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3419 ;;      Params:         0       0       0       0
  3420 ;;      Locals:         1       0       0       0
  3421 ;;      Temps:          0       0       0       0
  3422 ;;      Totals:         1       0       0       0
  3423 ;;Total ram usage:        1 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    2
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_CANInitialize
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text5
  3434  001B7C                     __ptext5:
  3435                           	opt stack 0
  3436  001B7C                     _CANOperationMode:
  3437                           	opt stack 26
  3438                           
  3439                           ;incstack = 0
  3440                           ;CANOperationMode@mode stored from wreg
  3441  001B7C  6E1B               	movwf	CANOperationMode@mode,c
  3442                           
  3443                           ;inc\CANlib.h: 208: CANCON = mode;
  3444  001B7E  C01B  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  3445  001B82                     l3297:
  3446  001B82  506E               	movf	3950,w,c	;volatile
  3447  001B84  0BE0               	andlw	224
  3448  001B86  181B               	xorwf	CANOperationMode@mode,w,c
  3449  001B88  B4D8               	btfsc	status,2,c
  3450  001B8A  0012               	return	
  3451  001B8C  D7FA               	goto	l3297
  3452  001B8E                     __end_of_CANOperationMode:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           status	equ	0xFD8
  3461                           
  3462 ;; *************** function _LCD_write_message *****************
  3463 ;; Defined at:
  3464 ;;		line 178 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  buffer          2   38[COMRAM] PTR const unsigned char 
  3467 ;;		 -> STR_1(3), 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3479 ;;      Params:         2       0       0       0
  3480 ;;      Locals:         0       0       0       0
  3481 ;;      Temps:          0       0       0       0
  3482 ;;      Totals:         2       0       0       0
  3483 ;;Total ram usage:        2 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    7
  3486 ;; This function calls:
  3487 ;;		_LCD_write_char
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text6
  3494  001A92                     __ptext6:
  3495                           	opt stack 0
  3496  001A92                     _LCD_write_message:
  3497                           	opt stack 23
  3498                           
  3499                           ;src\LCD_44780.c: 181: while(*buffer) {
  3500                           
  3501                           ;incstack = 0
  3502  001A92  D00A               	goto	l3815
  3503  001A94                     l3811:
  3504                           
  3505                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  3506  001A94  C027  FFF6         	movff	LCD_write_message@buffer,tblptrl
  3507  001A98  C028  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  3508  001A9C                     	if	0	;tblptru may be non-zero
  3509  001A9C                     	endif
  3510  001A9C                     	if	0	;tblptru may be non-zero
  3511  001A9C                     	endif
  3512  001A9C  0008               	tblrd		*
  3513  001A9E  50F5               	movf	tablat,w,c
  3514  001AA0  EC01  F00C         	call	_LCD_write_char
  3515                           
  3516                           ;src\LCD_44780.c: 186: buffer++;
  3517  001AA4  4A27               	infsnz	LCD_write_message@buffer,f,c
  3518  001AA6  2A28               	incf	LCD_write_message@buffer+1,f,c
  3519  001AA8                     l3815:
  3520  001AA8  C027  FFF6         	movff	LCD_write_message@buffer,tblptrl
  3521  001AAC  C028  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  3522  001AB0                     	if	0	;tblptru may be non-zero
  3523  001AB0                     	endif
  3524  001AB0                     	if	0	;tblptru may be non-zero
  3525  001AB0                     	endif
  3526  001AB0  0008               	tblrd		*
  3527  001AB2  50F5               	movf	tablat,w,c
  3528  001AB4  0900               	iorlw	0
  3529  001AB6  B4D8               	btfsc	status,2,c
  3530  001AB8  0012               	return	
  3531  001ABA  D7EC               	goto	l3811
  3532  001ABC                     __end_of_LCD_write_message:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _LCD_write_char *****************
  3543 ;; Defined at:
  3544 ;;		line 145 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  value           1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  value           1    4[BANK0 ] unsigned char 
  3549 ;;  D0              1    3[BANK0 ] unsigned char 
  3550 ;;  D1              1    2[BANK0 ] unsigned char 
  3551 ;;  D2              1    1[BANK0 ] unsigned char 
  3552 ;;  D3              1    0[BANK0 ] unsigned char 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3562 ;;      Params:         0       0       0       0
  3563 ;;      Locals:         0       5       0       0
  3564 ;;      Temps:          0       0       0       0
  3565 ;;      Totals:         0       5       0       0
  3566 ;;Total ram usage:        5 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    6
  3569 ;; This function calls:
  3570 ;;		_LCD_send_command
  3571 ;; This function is called by:
  3572 ;;		_LCD_write_message
  3573 ;;		_main
  3574 ;;		_LCD_write_string
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text7
  3579  001802                     __ptext7:
  3580                           	opt stack 0
  3581  001802                     _LCD_write_char:
  3582                           	opt stack 23
  3583                           
  3584                           ;incstack = 0
  3585                           ;LCD_write_char@value stored from wreg
  3586  001802  0100               	movlb	0	; () banked
  3587  001804  6F64               	movwf	LCD_write_char@value& (0+255),b
  3588                           
  3589                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  3590                           ;src\LCD_44780.c: 149: LATDbits.LATD2 = 1;
  3591  001806  848C               	bsf	3980,2,c	;volatile
  3592                           
  3593                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  3594  001808  0100               	movlb	0	; () banked
  3595  00180A  4564               	rlncf	LCD_write_char@value& (0+255),w,b
  3596  00180C  0B01               	andlw	1
  3597  00180E  0100               	movlb	0	; () banked
  3598  001810  6F60               	movwf	LCD_write_char@D3& (0+255),b
  3599                           
  3600                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  3601  001812  0100               	movlb	0	; () banked
  3602  001814  4564               	rlncf	LCD_write_char@value& (0+255),w,b
  3603  001816  46E8               	rlncf	wreg,f,c
  3604  001818  0B03               	andlw	3
  3605  00181A  0B01               	andlw	1
  3606  00181C  0100               	movlb	0	; () banked
  3607  00181E  6F61               	movwf	LCD_write_char@D2& (0+255),b
  3608                           
  3609                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  3610  001820  0100               	movlb	0	; () banked
  3611  001822  3964               	swapf	LCD_write_char@value& (0+255),w,b
  3612  001824  42E8               	rrncf	wreg,f,c
  3613  001826  0B07               	andlw	7
  3614  001828  0B01               	andlw	1
  3615  00182A  0100               	movlb	0	; () banked
  3616  00182C  6F62               	movwf	LCD_write_char@D1& (0+255),b
  3617                           
  3618                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  3619  00182E  0100               	movlb	0	; () banked
  3620  001830  3964               	swapf	LCD_write_char@value& (0+255),w,b
  3621  001832  0B0F               	andlw	15
  3622  001834  0B01               	andlw	1
  3623  001836  0100               	movlb	0	; () banked
  3624  001838  6F63               	movwf	LCD_write_char@D0& (0+255),b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  3628  00183A  C061  F023         	movff	LCD_write_char@D2,LCD_send_command@D2
  3629  00183E  C062  F024         	movff	LCD_write_char@D1,LCD_send_command@D1
  3630  001842  C063  F025         	movff	LCD_write_char@D0,LCD_send_command@D0
  3631  001846  0100               	movlb	0	; () banked
  3632  001848  5160               	movf	LCD_write_char@D3& (0+255),w,b
  3633  00184A  EC1B  F00D         	call	_LCD_send_command
  3634                           
  3635                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  3636  00184E  0100               	movlb	0	; () banked
  3637  001850  3964               	swapf	LCD_write_char@value& (0+255),w,b
  3638  001852  46E8               	rlncf	wreg,f,c
  3639  001854  0B1F               	andlw	31
  3640  001856  0B01               	andlw	1
  3641  001858  0100               	movlb	0	; () banked
  3642  00185A  6F60               	movwf	LCD_write_char@D3& (0+255),b
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  3646  00185C  0100               	movlb	0	; () banked
  3647  00185E  4164               	rrncf	LCD_write_char@value& (0+255),w,b
  3648  001860  42E8               	rrncf	wreg,f,c
  3649  001862  0B3F               	andlw	63
  3650  001864  0B01               	andlw	1
  3651  001866  0100               	movlb	0	; () banked
  3652  001868  6F61               	movwf	LCD_write_char@D2& (0+255),b
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  3656  00186A  0100               	movlb	0	; () banked
  3657  00186C  90D8               	bcf	status,0,c
  3658  00186E  3164               	rrcf	LCD_write_char@value& (0+255),w,b
  3659  001870  0B01               	andlw	1
  3660  001872  0100               	movlb	0	; () banked
  3661  001874  6F62               	movwf	LCD_write_char@D1& (0+255),b
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  3665  001876  0100               	movlb	0	; () banked
  3666  001878  5164               	movf	LCD_write_char@value& (0+255),w,b
  3667  00187A  0B01               	andlw	1
  3668  00187C  0100               	movlb	0	; () banked
  3669  00187E  6F63               	movwf	LCD_write_char@D0& (0+255),b
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  3673  001880  C061  F023         	movff	LCD_write_char@D2,LCD_send_command@D2
  3674  001884  C062  F024         	movff	LCD_write_char@D1,LCD_send_command@D1
  3675  001888  C063  F025         	movff	LCD_write_char@D0,LCD_send_command@D0
  3676  00188C  0100               	movlb	0	; () banked
  3677  00188E  5160               	movf	LCD_write_char@D3& (0+255),w,b
  3678  001890  EC1B  F00D         	call	_LCD_send_command
  3679                           
  3680                           ;src\LCD_44780.c: 167: LATDbits.LATD2 = 0;
  3681  001894  948C               	bcf	3980,2,c	;volatile
  3682  001896  0012               	return		;funcret
  3683  001898                     __end_of_LCD_write_char:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           tblptrh	equ	0xFF7
  3687                           tblptrl	equ	0xFF6
  3688                           tablat	equ	0xFF5
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _LCD_initialize *****************
  3694 ;; Defined at:
  3695 ;;		line 283 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  quartz_frequ    1    wreg     unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  quartz_frequ    1   40[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3709 ;;      Params:         0       0       0       0
  3710 ;;      Locals:         1       0       0       0
  3711 ;;      Temps:          0       0       0       0
  3712 ;;      Totals:         1       0       0       0
  3713 ;;Total ram usage:        1 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    7
  3716 ;; This function calls:
  3717 ;;		_LCD_clear
  3718 ;;		_LCD_cursor
  3719 ;;		_LCD_send_command
  3720 ;;		_delay_ms
  3721 ;;		_delay_set_quartz
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text8
  3728  001630                     __ptext8:
  3729                           	opt stack 0
  3730  001630                     _LCD_initialize:
  3731                           	opt stack 23
  3732                           
  3733                           ;incstack = 0
  3734                           ;LCD_initialize@quartz_frequency stored from wreg
  3735  001630  6E29               	movwf	LCD_initialize@quartz_frequency,c
  3736                           
  3737                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  3738  001632  5029               	movf	LCD_initialize@quartz_frequency,w,c
  3739  001634  ECC7  F00D         	call	_delay_set_quartz
  3740                           
  3741                           ;src\LCD_44780.c: 287: LATDbits.LATD2 = 0x00;
  3742  001638  948C               	bcf	3980,2,c	;volatile
  3743                           
  3744                           ;src\LCD_44780.c: 288: LATDbits.LATD3 = 0x00;
  3745  00163A  968C               	bcf	3980,3,c	;volatile
  3746                           
  3747                           ;src\LCD_44780.c: 289: LATDbits.LATD1 = 0x00;
  3748  00163C  928C               	bcf	3980,1,c	;volatile
  3749                           
  3750                           ;src\LCD_44780.c: 291: delay_ms (100);
  3751  00163E  0E00               	movlw	0
  3752  001640  6E22               	movwf	delay_ms@value_ms+1,c
  3753  001642  0E64               	movlw	100
  3754  001644  6E21               	movwf	delay_ms@value_ms,c
  3755  001646  EC02  F00D         	call	_delay_ms	;wreg free
  3756                           
  3757                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  3758  00164A  0E00               	movlw	0
  3759  00164C  6E23               	movwf	LCD_send_command@D2,c
  3760  00164E  0E01               	movlw	1
  3761  001650  6E24               	movwf	LCD_send_command@D1,c
  3762  001652  0E01               	movlw	1
  3763  001654  6E25               	movwf	LCD_send_command@D0,c
  3764  001656  0E00               	movlw	0
  3765  001658  EC1B  F00D         	call	_LCD_send_command
  3766                           
  3767                           ;src\LCD_44780.c: 293: delay_ms (100);
  3768  00165C  0E00               	movlw	0
  3769  00165E  6E22               	movwf	delay_ms@value_ms+1,c
  3770  001660  0E64               	movlw	100
  3771  001662  6E21               	movwf	delay_ms@value_ms,c
  3772  001664  EC02  F00D         	call	_delay_ms	;wreg free
  3773                           
  3774                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  3775  001668  0E00               	movlw	0
  3776  00166A  6E23               	movwf	LCD_send_command@D2,c
  3777  00166C  0E01               	movlw	1
  3778  00166E  6E24               	movwf	LCD_send_command@D1,c
  3779  001670  0E01               	movlw	1
  3780  001672  6E25               	movwf	LCD_send_command@D0,c
  3781  001674  0E00               	movlw	0
  3782  001676  EC1B  F00D         	call	_LCD_send_command
  3783                           
  3784                           ;src\LCD_44780.c: 295: delay_ms (10);
  3785  00167A  0E00               	movlw	0
  3786  00167C  6E22               	movwf	delay_ms@value_ms+1,c
  3787  00167E  0E0A               	movlw	10
  3788  001680  6E21               	movwf	delay_ms@value_ms,c
  3789  001682  EC02  F00D         	call	_delay_ms	;wreg free
  3790                           
  3791                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  3792  001686  0E00               	movlw	0
  3793  001688  6E23               	movwf	LCD_send_command@D2,c
  3794  00168A  0E01               	movlw	1
  3795  00168C  6E24               	movwf	LCD_send_command@D1,c
  3796  00168E  0E01               	movlw	1
  3797  001690  6E25               	movwf	LCD_send_command@D0,c
  3798  001692  0E00               	movlw	0
  3799  001694  EC1B  F00D         	call	_LCD_send_command
  3800                           
  3801                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  3802  001698  0E00               	movlw	0
  3803  00169A  6E23               	movwf	LCD_send_command@D2,c
  3804  00169C  0E01               	movlw	1
  3805  00169E  6E24               	movwf	LCD_send_command@D1,c
  3806  0016A0  0E00               	movlw	0
  3807  0016A2  6E25               	movwf	LCD_send_command@D0,c
  3808  0016A4  0E00               	movlw	0
  3809  0016A6  EC1B  F00D         	call	_LCD_send_command
  3810                           
  3811                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  3812  0016AA  0E00               	movlw	0
  3813  0016AC  6E23               	movwf	LCD_send_command@D2,c
  3814  0016AE  0E01               	movlw	1
  3815  0016B0  6E24               	movwf	LCD_send_command@D1,c
  3816  0016B2  0E00               	movlw	0
  3817  0016B4  6E25               	movwf	LCD_send_command@D0,c
  3818  0016B6  0E00               	movlw	0
  3819  0016B8  EC1B  F00D         	call	_LCD_send_command
  3820                           
  3821                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  3822  0016BC  0E00               	movlw	0
  3823  0016BE  6E23               	movwf	LCD_send_command@D2,c
  3824  0016C0  0E00               	movlw	0
  3825  0016C2  6E24               	movwf	LCD_send_command@D1,c
  3826  0016C4  0E00               	movlw	0
  3827  0016C6  6E25               	movwf	LCD_send_command@D0,c
  3828  0016C8  0E01               	movlw	1
  3829  0016CA  EC1B  F00D         	call	_LCD_send_command
  3830                           
  3831                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  3832  0016CE  0E00               	movlw	0
  3833  0016D0  6E23               	movwf	LCD_send_command@D2,c
  3834  0016D2  0E00               	movlw	0
  3835  0016D4  6E24               	movwf	LCD_send_command@D1,c
  3836  0016D6  0E00               	movlw	0
  3837  0016D8  6E25               	movwf	LCD_send_command@D0,c
  3838  0016DA  0E00               	movlw	0
  3839  0016DC  EC1B  F00D         	call	_LCD_send_command
  3840                           
  3841                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  3842  0016E0  0E00               	movlw	0
  3843  0016E2  6E23               	movwf	LCD_send_command@D2,c
  3844  0016E4  0E00               	movlw	0
  3845  0016E6  6E24               	movwf	LCD_send_command@D1,c
  3846  0016E8  0E00               	movlw	0
  3847  0016EA  6E25               	movwf	LCD_send_command@D0,c
  3848  0016EC  0E01               	movlw	1
  3849  0016EE  EC1B  F00D         	call	_LCD_send_command
  3850                           
  3851                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  3852  0016F2  0E00               	movlw	0
  3853  0016F4  6E23               	movwf	LCD_send_command@D2,c
  3854  0016F6  0E00               	movlw	0
  3855  0016F8  6E24               	movwf	LCD_send_command@D1,c
  3856  0016FA  0E00               	movlw	0
  3857  0016FC  6E25               	movwf	LCD_send_command@D0,c
  3858  0016FE  0E00               	movlw	0
  3859  001700  EC1B  F00D         	call	_LCD_send_command
  3860                           
  3861                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  3862  001704  0E00               	movlw	0
  3863  001706  6E23               	movwf	LCD_send_command@D2,c
  3864  001708  0E00               	movlw	0
  3865  00170A  6E24               	movwf	LCD_send_command@D1,c
  3866  00170C  0E01               	movlw	1
  3867  00170E  6E25               	movwf	LCD_send_command@D0,c
  3868  001710  0E00               	movlw	0
  3869  001712  EC1B  F00D         	call	_LCD_send_command
  3870                           
  3871                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  3872  001716  0E00               	movlw	0
  3873  001718  6E23               	movwf	LCD_send_command@D2,c
  3874  00171A  0E00               	movlw	0
  3875  00171C  6E24               	movwf	LCD_send_command@D1,c
  3876  00171E  0E00               	movlw	0
  3877  001720  6E25               	movwf	LCD_send_command@D0,c
  3878  001722  0E00               	movlw	0
  3879  001724  EC1B  F00D         	call	_LCD_send_command
  3880                           
  3881                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  3882  001728  0E01               	movlw	1
  3883  00172A  6E23               	movwf	LCD_send_command@D2,c
  3884  00172C  0E01               	movlw	1
  3885  00172E  6E24               	movwf	LCD_send_command@D1,c
  3886  001730  0E00               	movlw	0
  3887  001732  6E25               	movwf	LCD_send_command@D0,c
  3888  001734  0E00               	movlw	0
  3889  001736  EC1B  F00D         	call	_LCD_send_command
  3890                           
  3891                           ;src\LCD_44780.c: 312: LCD_clear ();
  3892  00173A  EC72  F00D         	call	_LCD_clear	;wreg free
  3893                           
  3894                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  3895  00173E  0E00               	movlw	0
  3896  001740  6E27               	movwf	LCD_cursor@blinking,c
  3897  001742  0E00               	movlw	0
  3898  001744  EC5E  F00D         	call	_LCD_cursor
  3899  001748  0012               	return		;funcret
  3900  00174A                     __end_of_LCD_initialize:
  3901                           	opt stack 0
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _delay_set_quartz *****************
  3911 ;; Defined at:
  3912 ;;		line 115 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  frequency       1    wreg     unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  frequency       1   26[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3926 ;;      Params:         0       0       0       0
  3927 ;;      Locals:         1       0       0       0
  3928 ;;      Temps:          0       0       0       0
  3929 ;;      Totals:         1       0       0       0
  3930 ;;Total ram usage:        1 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    2
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_LCD_initialize
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text9
  3941  001B8E                     __ptext9:
  3942                           	opt stack 0
  3943  001B8E                     _delay_set_quartz:
  3944                           	opt stack 27
  3945                           
  3946                           ;incstack = 0
  3947                           ;delay_set_quartz@frequency stored from wreg
  3948  001B8E  6E1B               	movwf	delay_set_quartz@frequency,c
  3949                           
  3950                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  3951  001B90  C01B  F044         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  3952  001B94  0012               	return		;funcret
  3953  001B96                     __end_of_delay_set_quartz:
  3954                           	opt stack 0
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           postinc0	equ	0xFEE
  3960                           wreg	equ	0xFE8
  3961                           status	equ	0xFD8
  3962                           
  3963 ;; *************** function _LCD_cursor *****************
  3964 ;; Defined at:
  3965 ;;		line 266 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  active          1    wreg     unsigned char 
  3968 ;;  blinking        1   38[COMRAM] unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  active          1   39[COMRAM] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3980 ;;      Params:         1       0       0       0
  3981 ;;      Locals:         1       0       0       0
  3982 ;;      Temps:          0       0       0       0
  3983 ;;      Totals:         2       0       0       0
  3984 ;;Total ram usage:        2 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    6
  3987 ;; This function calls:
  3988 ;;		_LCD_send_command
  3989 ;; This function is called by:
  3990 ;;		_LCD_initialize
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text10
  3995  001ABC                     __ptext10:
  3996                           	opt stack 0
  3997  001ABC                     _LCD_cursor:
  3998                           	opt stack 23
  3999                           
  4000                           ;incstack = 0
  4001                           ;LCD_cursor@active stored from wreg
  4002  001ABC  6E28               	movwf	LCD_cursor@active,c
  4003                           
  4004                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  4005  001ABE  0E00               	movlw	0
  4006  001AC0  6E23               	movwf	LCD_send_command@D2,c
  4007  001AC2  0E00               	movlw	0
  4008  001AC4  6E24               	movwf	LCD_send_command@D1,c
  4009  001AC6  0E00               	movlw	0
  4010  001AC8  6E25               	movwf	LCD_send_command@D0,c
  4011  001ACA  0E00               	movlw	0
  4012  001ACC  EC1B  F00D         	call	_LCD_send_command
  4013                           
  4014                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  4015  001AD0  0E01               	movlw	1
  4016  001AD2  6E23               	movwf	LCD_send_command@D2,c
  4017  001AD4  C028  F024         	movff	LCD_cursor@active,LCD_send_command@D1
  4018  001AD8  C027  F025         	movff	LCD_cursor@blinking,LCD_send_command@D0
  4019  001ADC  0E01               	movlw	1
  4020  001ADE  EC1B  F00D         	call	_LCD_send_command
  4021  001AE2  0012               	return		;funcret
  4022  001AE4                     __end_of_LCD_cursor:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _LCD_clear *****************
  4033 ;; Defined at:
  4034 ;;		line 257 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4048 ;;      Params:         0       0       0       0
  4049 ;;      Locals:         0       0       0       0
  4050 ;;      Temps:          0       0       0       0
  4051 ;;      Totals:         0       0       0       0
  4052 ;;Total ram usage:        0 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    6
  4055 ;; This function calls:
  4056 ;;		_LCD_send_command
  4057 ;; This function is called by:
  4058 ;;		_LCD_initialize
  4059 ;;		_main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text11
  4064  001AE4                     __ptext11:
  4065                           	opt stack 0
  4066  001AE4                     _LCD_clear:
  4067                           	opt stack 23
  4068                           
  4069                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  4070                           
  4071                           ;incstack = 0
  4072  001AE4  0E00               	movlw	0
  4073  001AE6  6E23               	movwf	LCD_send_command@D2,c
  4074  001AE8  0E00               	movlw	0
  4075  001AEA  6E24               	movwf	LCD_send_command@D1,c
  4076  001AEC  0E00               	movlw	0
  4077  001AEE  6E25               	movwf	LCD_send_command@D0,c
  4078  001AF0  0E00               	movlw	0
  4079  001AF2  EC1B  F00D         	call	_LCD_send_command
  4080                           
  4081                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  4082  001AF6  0E00               	movlw	0
  4083  001AF8  6E23               	movwf	LCD_send_command@D2,c
  4084  001AFA  0E00               	movlw	0
  4085  001AFC  6E24               	movwf	LCD_send_command@D1,c
  4086  001AFE  0E01               	movlw	1
  4087  001B00  6E25               	movwf	LCD_send_command@D0,c
  4088  001B02  0E00               	movlw	0
  4089  001B04  EC1B  F00D         	call	_LCD_send_command
  4090  001B08  0012               	return		;funcret
  4091  001B0A                     __end_of_LCD_clear:
  4092                           	opt stack 0
  4093                           tblptru	equ	0xFF8
  4094                           tblptrh	equ	0xFF7
  4095                           tblptrl	equ	0xFF6
  4096                           tablat	equ	0xFF5
  4097                           postinc0	equ	0xFEE
  4098                           wreg	equ	0xFE8
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _LCD_goto_xy *****************
  4102 ;; Defined at:
  4103 ;;		line 136 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  x               1    wreg     unsigned char 
  4106 ;;  y               1   41[COMRAM] unsigned char 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  x               1    0[BANK0 ] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4118 ;;      Params:         1       0       0       0
  4119 ;;      Locals:         0       1       0       0
  4120 ;;      Temps:          0       0       0       0
  4121 ;;      Totals:         1       1       0       0
  4122 ;;Total ram usage:        2 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    7
  4125 ;; This function calls:
  4126 ;;		_LCD_goto_line
  4127 ;;		_LCD_shift_cursor
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text12
  4134  001B4E                     __ptext12:
  4135                           	opt stack 0
  4136  001B4E                     _LCD_goto_xy:
  4137                           	opt stack 23
  4138                           
  4139                           ;incstack = 0
  4140                           ;LCD_goto_xy@x stored from wreg
  4141  001B4E  0100               	movlb	0	; () banked
  4142  001B50  6F60               	movwf	LCD_goto_xy@x& (0+255),b
  4143                           
  4144                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
  4145  001B52  502A               	movf	LCD_goto_xy@y,w,c
  4146  001B54  ECA5  F00B         	call	_LCD_goto_line
  4147                           
  4148                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
  4149  001B58  0100               	movlb	0	; () banked
  4150  001B5A  0560               	decf	LCD_goto_xy@x& (0+255),w,b
  4151  001B5C  6E27               	movwf	LCD_shift_cursor@number_of_shift,c
  4152  001B5E  0E01               	movlw	1
  4153  001B60  ECE6  F00C         	call	_LCD_shift_cursor
  4154  001B64  0012               	return		;funcret
  4155  001B66                     __end_of_LCD_goto_xy:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           postinc0	equ	0xFEE
  4162                           wreg	equ	0xFE8
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _LCD_shift_cursor *****************
  4166 ;; Defined at:
  4167 ;;		line 98 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  shift           1    wreg     unsigned char 
  4170 ;;  number_of_sh    1   38[COMRAM] unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  shift           1   39[COMRAM] unsigned char 
  4173 ;;  i               1   40[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4183 ;;      Params:         1       0       0       0
  4184 ;;      Locals:         2       0       0       0
  4185 ;;      Temps:          0       0       0       0
  4186 ;;      Totals:         3       0       0       0
  4187 ;;Total ram usage:        3 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    6
  4190 ;; This function calls:
  4191 ;;		_LCD_send_command
  4192 ;; This function is called by:
  4193 ;;		_LCD_goto_xy
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text13
  4198  0019CC                     __ptext13:
  4199                           	opt stack 0
  4200  0019CC                     _LCD_shift_cursor:
  4201                           	opt stack 23
  4202                           
  4203                           ;incstack = 0
  4204                           ;LCD_shift_cursor@shift stored from wreg
  4205  0019CC  6E28               	movwf	LCD_shift_cursor@shift,c
  4206                           
  4207                           ;src\LCD_44780.c: 100: unsigned char i;
  4208                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
  4209  0019CE  0E00               	movlw	0
  4210  0019D0  6E29               	movwf	LCD_shift_cursor@i,c
  4211  0019D2  D013               	goto	l3771
  4212  0019D4                     l3767:
  4213                           
  4214                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
  4215  0019D4  0E00               	movlw	0
  4216  0019D6  6E23               	movwf	LCD_send_command@D2,c
  4217  0019D8  0E00               	movlw	0
  4218  0019DA  6E24               	movwf	LCD_send_command@D1,c
  4219  0019DC  0E01               	movlw	1
  4220  0019DE  6E25               	movwf	LCD_send_command@D0,c
  4221  0019E0  0E00               	movlw	0
  4222  0019E2  EC1B  F00D         	call	_LCD_send_command
  4223                           
  4224                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
  4225  0019E6  C028  F023         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
  4226  0019EA  0E00               	movlw	0
  4227  0019EC  6E24               	movwf	LCD_send_command@D1,c
  4228  0019EE  0E00               	movlw	0
  4229  0019F0  6E25               	movwf	LCD_send_command@D0,c
  4230  0019F2  0E00               	movlw	0
  4231  0019F4  EC1B  F00D         	call	_LCD_send_command
  4232  0019F8  2A29               	incf	LCD_shift_cursor@i,f,c
  4233  0019FA                     l3771:
  4234  0019FA  5027               	movf	LCD_shift_cursor@number_of_shift,w,c
  4235  0019FC  5C29               	subwf	LCD_shift_cursor@i,w,c
  4236  0019FE  B0D8               	btfsc	status,0,c
  4237  001A00  0012               	return	
  4238  001A02  D7E8               	goto	l3767
  4239  001A04                     __end_of_LCD_shift_cursor:
  4240                           	opt stack 0
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function _LCD_goto_line *****************
  4250 ;; Defined at:
  4251 ;;		line 111 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  line            1    wreg     unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  line            1   38[COMRAM] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4265 ;;      Params:         0       0       0       0
  4266 ;;      Locals:         1       0       0       0
  4267 ;;      Temps:          0       0       0       0
  4268 ;;      Totals:         1       0       0       0
  4269 ;;Total ram usage:        1 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    6
  4272 ;; This function calls:
  4273 ;;		_LCD_send_command
  4274 ;; This function is called by:
  4275 ;;		_LCD_goto_xy
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text14
  4280  00174A                     __ptext14:
  4281                           	opt stack 0
  4282  00174A                     _LCD_goto_line:
  4283                           	opt stack 23
  4284                           
  4285                           ;incstack = 0
  4286                           ;LCD_goto_line@line stored from wreg
  4287  00174A  6E27               	movwf	LCD_goto_line@line,c
  4288                           
  4289                           ;src\LCD_44780.c: 113: switch(line) {
  4290  00174C  D04C               	goto	l3783
  4291  00174E                     l3775:
  4292  00174E  0E00               	movlw	0
  4293  001750  6E23               	movwf	LCD_send_command@D2,c
  4294  001752  0E00               	movlw	0
  4295  001754  6E24               	movwf	LCD_send_command@D1,c
  4296  001756  0E00               	movlw	0
  4297  001758  6E25               	movwf	LCD_send_command@D0,c
  4298  00175A  0E01               	movlw	1
  4299  00175C  EC1B  F00D         	call	_LCD_send_command
  4300                           
  4301                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  4302  001760  0E00               	movlw	0
  4303  001762  6E23               	movwf	LCD_send_command@D2,c
  4304  001764  0E00               	movlw	0
  4305  001766  6E24               	movwf	LCD_send_command@D1,c
  4306  001768  0E00               	movlw	0
  4307  00176A  6E25               	movwf	LCD_send_command@D0,c
  4308  00176C  0E00               	movlw	0
  4309  00176E  EC1B  F00D         	call	_LCD_send_command
  4310                           
  4311                           ;src\LCD_44780.c: 117: break;
  4312  001772  0012               	return	
  4313  001774                     l3777:
  4314  001774  0E01               	movlw	1
  4315  001776  6E23               	movwf	LCD_send_command@D2,c
  4316  001778  0E00               	movlw	0
  4317  00177A  6E24               	movwf	LCD_send_command@D1,c
  4318  00177C  0E00               	movlw	0
  4319  00177E  6E25               	movwf	LCD_send_command@D0,c
  4320  001780  0E01               	movlw	1
  4321  001782  EC1B  F00D         	call	_LCD_send_command
  4322                           
  4323                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  4324  001786  0E00               	movlw	0
  4325  001788  6E23               	movwf	LCD_send_command@D2,c
  4326  00178A  0E00               	movlw	0
  4327  00178C  6E24               	movwf	LCD_send_command@D1,c
  4328  00178E  0E00               	movlw	0
  4329  001790  6E25               	movwf	LCD_send_command@D0,c
  4330  001792  0E00               	movlw	0
  4331  001794  EC1B  F00D         	call	_LCD_send_command
  4332                           
  4333                           ;src\LCD_44780.c: 121: break;
  4334  001798  0012               	return	
  4335  00179A                     l3779:
  4336  00179A  0E00               	movlw	0
  4337  00179C  6E23               	movwf	LCD_send_command@D2,c
  4338  00179E  0E00               	movlw	0
  4339  0017A0  6E24               	movwf	LCD_send_command@D1,c
  4340  0017A2  0E01               	movlw	1
  4341  0017A4  6E25               	movwf	LCD_send_command@D0,c
  4342  0017A6  0E01               	movlw	1
  4343  0017A8  EC1B  F00D         	call	_LCD_send_command
  4344                           
  4345                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  4346  0017AC  0E01               	movlw	1
  4347  0017AE  6E23               	movwf	LCD_send_command@D2,c
  4348  0017B0  0E00               	movlw	0
  4349  0017B2  6E24               	movwf	LCD_send_command@D1,c
  4350  0017B4  0E00               	movlw	0
  4351  0017B6  6E25               	movwf	LCD_send_command@D0,c
  4352  0017B8  0E00               	movlw	0
  4353  0017BA  EC1B  F00D         	call	_LCD_send_command
  4354                           
  4355                           ;src\LCD_44780.c: 125: break;
  4356  0017BE  0012               	return	
  4357  0017C0                     l3781:
  4358  0017C0  0E01               	movlw	1
  4359  0017C2  6E23               	movwf	LCD_send_command@D2,c
  4360  0017C4  0E00               	movlw	0
  4361  0017C6  6E24               	movwf	LCD_send_command@D1,c
  4362  0017C8  0E01               	movlw	1
  4363  0017CA  6E25               	movwf	LCD_send_command@D0,c
  4364  0017CC  0E01               	movlw	1
  4365  0017CE  EC1B  F00D         	call	_LCD_send_command
  4366                           
  4367                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  4368  0017D2  0E01               	movlw	1
  4369  0017D4  6E23               	movwf	LCD_send_command@D2,c
  4370  0017D6  0E00               	movlw	0
  4371  0017D8  6E24               	movwf	LCD_send_command@D1,c
  4372  0017DA  0E00               	movlw	0
  4373  0017DC  6E25               	movwf	LCD_send_command@D0,c
  4374  0017DE  0E00               	movlw	0
  4375  0017E0  EC1B  F00D         	call	_LCD_send_command
  4376                           
  4377                           ;src\LCD_44780.c: 129: }
  4378  0017E4  0012               	return	
  4379  0017E6                     l3783:
  4380  0017E6  5027               	movf	LCD_goto_line@line,w,c
  4381                           
  4382                           ; Switch size 1, requested type "space"
  4383                           ; Number of cases is 4, Range of values is 1 to 4
  4384                           ; switch strategies available:
  4385                           ; Name         Instructions Cycles
  4386                           ; simple_byte           13     7 (average)
  4387                           ;	Chosen strategy is simple_byte
  4388  0017E8  0A01               	xorlw	1	; case 1
  4389  0017EA  B4D8               	btfsc	status,2,c
  4390  0017EC  D7B0               	goto	l3775
  4391  0017EE  0A03               	xorlw	3	; case 2
  4392  0017F0  B4D8               	btfsc	status,2,c
  4393  0017F2  D7C0               	goto	l3777
  4394  0017F4  0A01               	xorlw	1	; case 3
  4395  0017F6  B4D8               	btfsc	status,2,c
  4396  0017F8  D7D0               	goto	l3779
  4397  0017FA  0A07               	xorlw	7	; case 4
  4398  0017FC  A4D8               	btfss	status,2,c
  4399  0017FE  0012               	return	
  4400  001800  D7DF               	goto	l3781
  4401  001802                     __end_of_LCD_goto_line:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           postinc0	equ	0xFEE
  4408                           wreg	equ	0xFE8
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _LCD_send_command *****************
  4412 ;; Defined at:
  4413 ;;		line 61 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  D3              1    wreg     unsigned char 
  4416 ;;  D2              1   34[COMRAM] unsigned char 
  4417 ;;  D1              1   35[COMRAM] unsigned char 
  4418 ;;  D0              1   36[COMRAM] unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  D3              1   37[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4430 ;;      Params:         3       0       0       0
  4431 ;;      Locals:         1       0       0       0
  4432 ;;      Temps:          0       0       0       0
  4433 ;;      Totals:         4       0       0       0
  4434 ;;Total ram usage:        4 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    5
  4437 ;; This function calls:
  4438 ;;		_LCD_enable_pulse
  4439 ;; This function is called by:
  4440 ;;		_LCD_shift_cursor
  4441 ;;		_LCD_goto_line
  4442 ;;		_LCD_write_char
  4443 ;;		_LCD_clear
  4444 ;;		_LCD_cursor
  4445 ;;		_LCD_initialize
  4446 ;;		_LCD_home
  4447 ;;		_LCD_shift
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text15
  4452  001A36                     __ptext15:
  4453                           	opt stack 0
  4454  001A36                     _LCD_send_command:
  4455                           	opt stack 23
  4456                           
  4457                           ;incstack = 0
  4458                           ;LCD_send_command@D3 stored from wreg
  4459  001A36  6E26               	movwf	LCD_send_command@D3,c
  4460                           
  4461                           ;src\LCD_44780.c: 63: LATDbits.LATD4 = D0;
  4462  001A38  B025               	btfsc	LCD_send_command@D0,0,c
  4463  001A3A  D002               	bra	u4315
  4464  001A3C  988C               	bcf	3980,4,c	;volatile
  4465  001A3E  D001               	bra	u4316
  4466  001A40                     u4315:
  4467  001A40  888C               	bsf	3980,4,c	;volatile
  4468  001A42                     u4316:
  4469                           
  4470                           ;src\LCD_44780.c: 64: LATDbits.LATD5 = D1;
  4471  001A42  B024               	btfsc	LCD_send_command@D1,0,c
  4472  001A44  D002               	bra	u4325
  4473  001A46  9A8C               	bcf	3980,5,c	;volatile
  4474  001A48  D001               	bra	u4326
  4475  001A4A                     u4325:
  4476  001A4A  8A8C               	bsf	3980,5,c	;volatile
  4477  001A4C                     u4326:
  4478                           
  4479                           ;src\LCD_44780.c: 65: LATDbits.LATD6 = D2;
  4480  001A4C  B023               	btfsc	LCD_send_command@D2,0,c
  4481  001A4E  D002               	bra	u4335
  4482  001A50  9C8C               	bcf	3980,6,c	;volatile
  4483  001A52  D001               	bra	u4336
  4484  001A54                     u4335:
  4485  001A54  8C8C               	bsf	3980,6,c	;volatile
  4486  001A56                     u4336:
  4487                           
  4488                           ;src\LCD_44780.c: 66: LATDbits.LATD7 = D3;
  4489  001A56  B026               	btfsc	LCD_send_command@D3,0,c
  4490  001A58  D002               	bra	u4345
  4491  001A5A  9E8C               	bcf	3980,7,c	;volatile
  4492  001A5C  D001               	bra	u4346
  4493  001A5E                     u4345:
  4494  001A5E  8E8C               	bsf	3980,7,c	;volatile
  4495  001A60                     u4346:
  4496                           
  4497                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  4498  001A60  EC98  F00D         	call	_LCD_enable_pulse	;wreg free
  4499  001A64  0012               	return		;funcret
  4500  001A66                     __end_of_LCD_send_command:
  4501                           	opt stack 0
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           postinc0	equ	0xFEE
  4507                           wreg	equ	0xFE8
  4508                           status	equ	0xFD8
  4509                           
  4510 ;; *************** function _LCD_enable_pulse *****************
  4511 ;; Defined at:
  4512 ;;		line 49 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4526 ;;      Params:         0       0       0       0
  4527 ;;      Locals:         0       0       0       0
  4528 ;;      Temps:          0       0       0       0
  4529 ;;      Totals:         0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    4
  4533 ;; This function calls:
  4534 ;;		_delay_ms
  4535 ;; This function is called by:
  4536 ;;		_LCD_send_command
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text16
  4541  001B30                     __ptext16:
  4542                           	opt stack 0
  4543  001B30                     _LCD_enable_pulse:
  4544                           	opt stack 23
  4545                           
  4546                           ;src\LCD_44780.c: 51: LATDbits.LATD3 = 1;
  4547                           
  4548                           ;incstack = 0
  4549  001B30  868C               	bsf	3980,3,c	;volatile
  4550                           
  4551                           ;src\LCD_44780.c: 52: delay_ms (1);
  4552  001B32  0E00               	movlw	0
  4553  001B34  6E22               	movwf	delay_ms@value_ms+1,c
  4554  001B36  0E01               	movlw	1
  4555  001B38  6E21               	movwf	delay_ms@value_ms,c
  4556  001B3A  EC02  F00D         	call	_delay_ms	;wreg free
  4557                           
  4558                           ;src\LCD_44780.c: 53: LATDbits.LATD3 = 0;
  4559  001B3E  968C               	bcf	3980,3,c	;volatile
  4560                           
  4561                           ;src\LCD_44780.c: 54: delay_ms (1);
  4562  001B40  0E00               	movlw	0
  4563  001B42  6E22               	movwf	delay_ms@value_ms+1,c
  4564  001B44  0E01               	movlw	1
  4565  001B46  6E21               	movwf	delay_ms@value_ms,c
  4566  001B48  EC02  F00D         	call	_delay_ms	;wreg free
  4567  001B4C  0012               	return		;funcret
  4568  001B4E                     __end_of_LCD_enable_pulse:
  4569                           	opt stack 0
  4570                           tblptru	equ	0xFF8
  4571                           tblptrh	equ	0xFF7
  4572                           tblptrl	equ	0xFF6
  4573                           tablat	equ	0xFF5
  4574                           postinc0	equ	0xFEE
  4575                           wreg	equ	0xFE8
  4576                           status	equ	0xFD8
  4577                           
  4578 ;; *************** function _delay_ms *****************
  4579 ;; Defined at:
  4580 ;;		line 61 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  value_ms        2   32[COMRAM] unsigned int 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  1    wreg      void 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4594 ;;      Params:         2       0       0       0
  4595 ;;      Locals:         0       0       0       0
  4596 ;;      Temps:          0       0       0       0
  4597 ;;      Totals:         2       0       0       0
  4598 ;;Total ram usage:        2 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    3
  4601 ;; This function calls:
  4602 ;;		___wmul
  4603 ;; This function is called by:
  4604 ;;		_LCD_enable_pulse
  4605 ;;		_LCD_initialize
  4606 ;;		_main
  4607 ;;		_delay_s
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text17
  4612  001A04                     __ptext17:
  4613                           	opt stack 0
  4614  001A04                     _delay_ms:
  4615                           	opt stack 27
  4616                           
  4617                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  4618                           
  4619                           ;incstack = 0
  4620  001A04  C044  F01B         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  4621  001A08  6A1C               	clrf	___wmul@multiplier+1,c
  4622  001A0A  C021  F01D         	movff	delay_ms@value_ms,___wmul@multiplicand
  4623  001A0E  C022  F01E         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  4624  001A12  EC85  F00D         	call	___wmul	;wreg free
  4625  001A16  C01B  F031         	movff	?___wmul,_clock_counter_reference	;volatile
  4626  001A1A  C01C  F032         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  4627                           
  4628                           ;src\delay.c: 75: while (clock_counter_reference) {
  4629  001A1E  D006               	goto	l533
  4630  001A20                     l3285:
  4631                           
  4632                           ;src\delay.c: 85: _delay(240);
  4633  001A20  0E50               	movlw	80
  4634  001A22                     u4517:
  4635  001A22  2EE8               	decfsz	wreg,f,c
  4636  001A24  D7FE               	goto	u4517
  4637                           
  4638                           ;src\delay.c: 88: clock_counter_reference--;
  4639  001A26  0631               	decf	_clock_counter_reference,f,c	;volatile
  4640  001A28  A0D8               	btfss	status,0,c
  4641  001A2A  0632               	decf	_clock_counter_reference+1,f,c	;volatile
  4642  001A2C                     l533:
  4643  001A2C  5031               	movf	_clock_counter_reference,w,c	;volatile
  4644  001A2E  1032               	iorwf	_clock_counter_reference+1,w,c	;volatile
  4645  001A30  B4D8               	btfsc	status,2,c
  4646  001A32  0012               	return	
  4647  001A34  D7F5               	goto	l3285
  4648  001A36                     __end_of_delay_ms:
  4649                           	opt stack 0
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           postinc0	equ	0xFEE
  4655                           wreg	equ	0xFE8
  4656                           status	equ	0xFD8
  4657                           
  4658 ;; *************** function ___wmul *****************
  4659 ;; Defined at:
  4660 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  multiplier      2   26[COMRAM] unsigned int 
  4663 ;;  multiplicand    2   28[COMRAM] unsigned int 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  product         2   30[COMRAM] unsigned int 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  2   26[COMRAM] unsigned int 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, prodl, prodh
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4675 ;;      Params:         4       0       0       0
  4676 ;;      Locals:         2       0       0       0
  4677 ;;      Temps:          0       0       0       0
  4678 ;;      Totals:         6       0       0       0
  4679 ;;Total ram usage:        6 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    2
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_delay_ms
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text18
  4690  001B0A                     __ptext18:
  4691                           	opt stack 0
  4692  001B0A                     ___wmul:
  4693                           	opt stack 27
  4694                           
  4695                           ;incstack = 0
  4696  001B0A  501B               	movf	___wmul@multiplier,w,c
  4697  001B0C  021D               	mulwf	___wmul@multiplicand,c
  4698  001B0E  CFF3 F01F          	movff	prodl,___wmul@product
  4699  001B12  CFF4 F020          	movff	prodh,___wmul@product+1
  4700  001B16  501B               	movf	___wmul@multiplier,w,c
  4701  001B18  021E               	mulwf	___wmul@multiplicand+1,c
  4702  001B1A  50F3               	movf	prodl,w,c
  4703  001B1C  2620               	addwf	___wmul@product+1,f,c
  4704  001B1E  501C               	movf	___wmul@multiplier+1,w,c
  4705  001B20  021D               	mulwf	___wmul@multiplicand,c
  4706  001B22  50F3               	movf	prodl,w,c
  4707  001B24  2620               	addwf	___wmul@product+1,f,c
  4708  001B26  C01F  F01B         	movff	___wmul@product,?___wmul
  4709  001B2A  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  4710  001B2E  0012               	return	
  4711  001B30                     __end_of___wmul:
  4712                           	opt stack 0
  4713                           tblptru	equ	0xFF8
  4714                           tblptrh	equ	0xFF7
  4715                           tblptrl	equ	0xFF6
  4716                           tablat	equ	0xFF5
  4717                           prodh	equ	0xFF4
  4718                           prodl	equ	0xFF3
  4719                           postinc0	equ	0xFEE
  4720                           wreg	equ	0xFE8
  4721                           status	equ	0xFD8
  4722                           
  4723 ;; *************** function _ISR_Alta *****************
  4724 ;; Defined at:
  4725 ;;		line 14 in file "lcdCan.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4739 ;;      Params:         0       0       0       0
  4740 ;;      Locals:         0       0       0       0
  4741 ;;      Temps:         14       0       0       0
  4742 ;;      Totals:        14       0       0       0
  4743 ;;Total ram usage:       14 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    1
  4746 ;; This function calls:
  4747 ;;		_CANisRxReady
  4748 ;;		_CANreceiveMessage
  4749 ;; This function is called by:
  4750 ;;		Interrupt level 2
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	intcode
  4755  000008                     __pintcode:
  4756                           	opt stack 0
  4757  000008                     _ISR_Alta:
  4758                           	opt stack 23
  4759                           
  4760                           ;incstack = 0
  4761  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4762  00000A  CFFA F00D          	movff	pclath,??_ISR_Alta
  4763  00000E  CFFB F00E          	movff	pclatu,??_ISR_Alta+1
  4764  000012  ED4C  F00C         	call	int_func,f	;refresh shadow registers
  4765                           pclatu	equ	0xFFB
  4766                           pclath	equ	0xFFA
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           postinc0	equ	0xFEE
  4774                           wreg	equ	0xFE8
  4775                           status	equ	0xFD8
  4776                           
  4777                           	psect	intcode_body
  4778  001898                     __pintcode_body:
  4779                           	opt stack 23
  4780  001898                     int_func:
  4781                           	opt stack 23
  4782  001898  0006               	pop		; remove dummy address from shadow register refresh
  4783  00189A  CFE9 F00F          	movff	fsr0l,??_ISR_Alta+2
  4784  00189E  CFEA F010          	movff	fsr0h,??_ISR_Alta+3
  4785  0018A2  CFE1 F011          	movff	fsr1l,??_ISR_Alta+4
  4786  0018A6  CFE2 F012          	movff	fsr1h,??_ISR_Alta+5
  4787  0018AA  CFD9 F013          	movff	fsr2l,??_ISR_Alta+6
  4788  0018AE  CFDA F014          	movff	fsr2h,??_ISR_Alta+7
  4789  0018B2  CFF3 F015          	movff	prodl,??_ISR_Alta+8
  4790  0018B6  CFF4 F016          	movff	prodh,??_ISR_Alta+9
  4791  0018BA  CFF6 F017          	movff	tblptrl,??_ISR_Alta+10
  4792  0018BE  CFF7 F018          	movff	tblptrh,??_ISR_Alta+11
  4793  0018C2  CFF8 F019          	movff	tblptru,??_ISR_Alta+12
  4794  0018C6  CFF5 F01A          	movff	tablat,??_ISR_Alta+13
  4795                           
  4796                           ;lcdCan.c: 15: if (CANisRxReady()) {
  4797  0018CA  ECB3  F00D         	call	_CANisRxReady	;wreg free
  4798  0018CE  0900               	iorlw	0
  4799  0018D0  B4D8               	btfsc	status,2,c
  4800  0018D2  D008               	goto	i2l628
  4801                           
  4802                           ;lcdCan.c: 16: CANreceiveMessage(&msg);
  4803  0018D4  0E35               	movlw	low _msg
  4804  0018D6  6E01               	movwf	CANreceiveMessage@msg,c
  4805  0018D8  0E00               	movlw	high _msg
  4806  0018DA  6E02               	movwf	CANreceiveMessage@msg+1,c
  4807  0018DC  EC31  F006         	call	_CANreceiveMessage	;wreg free
  4808                           
  4809                           ;lcdCan.c: 17: PIR3bits.RXB0IF = 0;
  4810  0018E0  90A4               	bcf	4004,0,c	;volatile
  4811                           
  4812                           ;lcdCan.c: 18: PIR3bits.RXB1IF = 0;
  4813  0018E2  92A4               	bcf	4004,1,c	;volatile
  4814  0018E4                     i2l628:
  4815  0018E4  C01A  FFF5         	movff	??_ISR_Alta+13,tablat
  4816  0018E8  C019  FFF8         	movff	??_ISR_Alta+12,tblptru
  4817  0018EC  C018  FFF7         	movff	??_ISR_Alta+11,tblptrh
  4818  0018F0  C017  FFF6         	movff	??_ISR_Alta+10,tblptrl
  4819  0018F4  C016  FFF4         	movff	??_ISR_Alta+9,prodh
  4820  0018F8  C015  FFF3         	movff	??_ISR_Alta+8,prodl
  4821  0018FC  C014  FFDA         	movff	??_ISR_Alta+7,fsr2h
  4822  001900  C013  FFD9         	movff	??_ISR_Alta+6,fsr2l
  4823  001904  C012  FFE2         	movff	??_ISR_Alta+5,fsr1h
  4824  001908  C011  FFE1         	movff	??_ISR_Alta+4,fsr1l
  4825  00190C  C010  FFEA         	movff	??_ISR_Alta+3,fsr0h
  4826  001910  C00F  FFE9         	movff	??_ISR_Alta+2,fsr0l
  4827  001914  C00E  FFFB         	movff	??_ISR_Alta+1,pclatu
  4828  001918  C00D  FFFA         	movff	??_ISR_Alta,pclath
  4829  00191C  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4830  00191E  0011               	retfie		f
  4831  001920                     __end_of_ISR_Alta:
  4832                           	opt stack 0
  4833                           pclatu	equ	0xFFB
  4834                           pclath	equ	0xFFA
  4835                           tblptru	equ	0xFF8
  4836                           tblptrh	equ	0xFF7
  4837                           tblptrl	equ	0xFF6
  4838                           tablat	equ	0xFF5
  4839                           prodh	equ	0xFF4
  4840                           prodl	equ	0xFF3
  4841                           postinc0	equ	0xFEE
  4842                           fsr0h	equ	0xFEA
  4843                           fsr0l	equ	0xFE9
  4844                           wreg	equ	0xFE8
  4845                           fsr1h	equ	0xFE2
  4846                           fsr1l	equ	0xFE1
  4847                           fsr2h	equ	0xFDA
  4848                           fsr2l	equ	0xFD9
  4849                           status	equ	0xFD8
  4850                           
  4851 ;; *************** function _CANreceiveMessage *****************
  4852 ;; Defined at:
  4853 ;;		line 528 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  msg             2    0[COMRAM] PTR struct .
  4856 ;;		 -> msg(15), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  tamp            1   11[COMRAM] unsigned char 
  4859 ;;  error           1   10[COMRAM] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4869 ;;      Params:         2       0       0       0
  4870 ;;      Locals:         2       0       0       0
  4871 ;;      Temps:          8       0       0       0
  4872 ;;      Totals:        12       0       0       0
  4873 ;;Total ram usage:       12 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_ISR_Alta
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text20
  4883  000C62                     __ptext20:
  4884                           	opt stack 0
  4885  000C62                     _CANreceiveMessage:
  4886                           	opt stack 23
  4887                           
  4888                           ;inc\CANlib.h: 530: BYTE tamp;
  4889                           ;inc\CANlib.h: 531: BYTE error = 0;
  4890                           
  4891                           ;incstack = 0
  4892  000C62  0E00               	movlw	0
  4893  000C64  6E0B               	movwf	CANreceiveMessage@error,c
  4894                           
  4895                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  4896  000C66  BE74               	btfsc	3956,7,c	;volatile
  4897                           
  4898                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  4899  000C68  800B               	bsf	CANreceiveMessage@error,0,c
  4900                           
  4901                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  4902  000C6A  BC74               	btfsc	3956,6,c	;volatile
  4903                           
  4904                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  4905  000C6C  820B               	bsf	CANreceiveMessage@error,1,c
  4906                           
  4907                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  4908  000C6E  010F               	movlb	15	; () banked
  4909  000C70  AF50               	btfss	80,7,b	;volatile
  4910  000C72  D143               	goto	i2l374
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;inc\CANlib.h: 541: {
  4914                           ;inc\CANlib.h: 542: msg->identifier = 0;
  4915  000C74  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  4916  000C78  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  4917  000C7C  6ADE               	clrf	postinc2,c
  4918  000C7E  6ADE               	clrf	postinc2,c
  4919  000C80  6ADE               	clrf	postinc2,c
  4920  000C82  6ADD               	clrf	postdec2,c
  4921                           
  4922                           ; BSR set to: 15
  4923                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  4924  000C84  EE20 F004          	lfsr	2,4
  4925  000C88  5001               	movf	CANreceiveMessage@msg,w,c
  4926  000C8A  26D9               	addwf	fsr2l,f,c
  4927  000C8C  5002               	movf	CANreceiveMessage@msg+1,w,c
  4928  000C8E  22DA               	addwfc	fsr2h,f,c
  4929  000C90  CF56 FFDF          	movff	3926,indf2	;volatile
  4930                           
  4931                           ; BSR set to: 15
  4932                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  4933  000C94  EE20 F005          	lfsr	2,5
  4934  000C98  5001               	movf	CANreceiveMessage@msg,w,c
  4935  000C9A  26D9               	addwf	fsr2l,f,c
  4936  000C9C  5002               	movf	CANreceiveMessage@msg+1,w,c
  4937  000C9E  22DA               	addwfc	fsr2h,f,c
  4938  000CA0  CF57 FFDF          	movff	3927,indf2	;volatile
  4939                           
  4940                           ; BSR set to: 15
  4941                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  4942  000CA4  EE20 F006          	lfsr	2,6
  4943  000CA8  5001               	movf	CANreceiveMessage@msg,w,c
  4944  000CAA  26D9               	addwf	fsr2l,f,c
  4945  000CAC  5002               	movf	CANreceiveMessage@msg+1,w,c
  4946  000CAE  22DA               	addwfc	fsr2h,f,c
  4947  000CB0  CF58 FFDF          	movff	3928,indf2	;volatile
  4948                           
  4949                           ; BSR set to: 15
  4950                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  4951  000CB4  EE20 F007          	lfsr	2,7
  4952  000CB8  5001               	movf	CANreceiveMessage@msg,w,c
  4953  000CBA  26D9               	addwf	fsr2l,f,c
  4954  000CBC  5002               	movf	CANreceiveMessage@msg+1,w,c
  4955  000CBE  22DA               	addwfc	fsr2h,f,c
  4956  000CC0  CF59 FFDF          	movff	3929,indf2	;volatile
  4957                           
  4958                           ; BSR set to: 15
  4959                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  4960  000CC4  EE20 F008          	lfsr	2,8
  4961  000CC8  5001               	movf	CANreceiveMessage@msg,w,c
  4962  000CCA  26D9               	addwf	fsr2l,f,c
  4963  000CCC  5002               	movf	CANreceiveMessage@msg+1,w,c
  4964  000CCE  22DA               	addwfc	fsr2h,f,c
  4965  000CD0  CF5A FFDF          	movff	3930,indf2	;volatile
  4966                           
  4967                           ; BSR set to: 15
  4968                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  4969  000CD4  EE20 F009          	lfsr	2,9
  4970  000CD8  5001               	movf	CANreceiveMessage@msg,w,c
  4971  000CDA  26D9               	addwf	fsr2l,f,c
  4972  000CDC  5002               	movf	CANreceiveMessage@msg+1,w,c
  4973  000CDE  22DA               	addwfc	fsr2h,f,c
  4974  000CE0  CF5B FFDF          	movff	3931,indf2	;volatile
  4975                           
  4976                           ; BSR set to: 15
  4977                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  4978  000CE4  EE20 F00A          	lfsr	2,10
  4979  000CE8  5001               	movf	CANreceiveMessage@msg,w,c
  4980  000CEA  26D9               	addwf	fsr2l,f,c
  4981  000CEC  5002               	movf	CANreceiveMessage@msg+1,w,c
  4982  000CEE  22DA               	addwfc	fsr2h,f,c
  4983  000CF0  CF5C FFDF          	movff	3932,indf2	;volatile
  4984                           
  4985                           ; BSR set to: 15
  4986                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  4987  000CF4  EE20 F00B          	lfsr	2,11
  4988  000CF8  5001               	movf	CANreceiveMessage@msg,w,c
  4989  000CFA  26D9               	addwf	fsr2l,f,c
  4990  000CFC  5002               	movf	CANreceiveMessage@msg+1,w,c
  4991  000CFE  22DA               	addwfc	fsr2h,f,c
  4992  000D00  CF5D FFDF          	movff	3933,indf2	;volatile
  4993                           
  4994                           ; BSR set to: 15
  4995                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  4996  000D04  EE20 F00E          	lfsr	2,14
  4997  000D08  5001               	movf	CANreceiveMessage@msg,w,c
  4998  000D0A  26D9               	addwf	fsr2l,f,c
  4999  000D0C  5002               	movf	CANreceiveMessage@msg+1,w,c
  5000  000D0E  22DA               	addwfc	fsr2h,f,c
  5001  000D10  010F               	movlb	15	; () banked
  5002  000D12  AD55               	btfss	85,6,b	;volatile
  5003  000D14  D002               	goto	i2u298_40
  5004  000D16  0E01               	movlw	1
  5005  000D18  D001               	goto	i2u298_46
  5006  000D1A                     i2u298_40:
  5007  000D1A  0E00               	movlw	0
  5008  000D1C                     i2u298_46:
  5009  000D1C  6EDF               	movwf	indf2,c
  5010                           
  5011                           ; BSR set to: 15
  5012                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  5013  000D1E  EE20 F00D          	lfsr	2,13
  5014  000D22  5001               	movf	CANreceiveMessage@msg,w,c
  5015  000D24  26D9               	addwf	fsr2l,f,c
  5016  000D26  5002               	movf	CANreceiveMessage@msg+1,w,c
  5017  000D28  22DA               	addwfc	fsr2h,f,c
  5018  000D2A  010F               	movlb	15	; () banked
  5019  000D2C  5155               	movf	85,w,b	;volatile
  5020  000D2E  0B0F               	andlw	15
  5021  000D30  6EDF               	movwf	indf2,c
  5022                           
  5023                           ; BSR set to: 15
  5024                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  5025  000D32  EE20 F00C          	lfsr	2,12
  5026  000D36  5001               	movf	CANreceiveMessage@msg,w,c
  5027  000D38  26D9               	addwf	fsr2l,f,c
  5028  000D3A  5002               	movf	CANreceiveMessage@msg+1,w,c
  5029  000D3C  22DA               	addwfc	fsr2h,f,c
  5030  000D3E  010F               	movlb	15	; () banked
  5031  000D40  A752               	btfss	82,3,b	;volatile
  5032  000D42  D002               	goto	i2u299_40
  5033  000D44  0E01               	movlw	1
  5034  000D46  D001               	goto	i2u299_46
  5035  000D48                     i2u299_40:
  5036  000D48  0E00               	movlw	0
  5037  000D4A                     i2u299_46:
  5038  000D4A  6EDF               	movwf	indf2,c
  5039                           
  5040                           ; BSR set to: 15
  5041                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  5042  000D4C  010F               	movlb	15	; () banked
  5043  000D4E  B752               	btfsc	82,3,b	;volatile
  5044  000D50  D044               	goto	i2l2979
  5045                           
  5046                           ; BSR set to: 15
  5047                           ;inc\CANlib.h: 559: {
  5048                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  5049  000D52  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  5050  000D56  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5051  000D58  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5052  000D5A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5053  000D5C  0E03               	movlw	3
  5054  000D5E                     i2u301_45:
  5055  000D5E  90D8               	bcf	status,0,c
  5056  000D60  3603               	rlcf	??_CANreceiveMessage,f,c
  5057  000D62  3604               	rlcf	??_CANreceiveMessage+1,f,c
  5058  000D64  3605               	rlcf	??_CANreceiveMessage+2,f,c
  5059  000D66  3606               	rlcf	??_CANreceiveMessage+3,f,c
  5060  000D68  2EE8               	decfsz	wreg,f,c
  5061  000D6A  D7F9               	goto	i2u301_45
  5062  000D6C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5063  000D70  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5064  000D74  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  5065  000D78  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  5066  000D7C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  5067  000D80  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  5071  000D84  010F               	movlb	15	; () banked
  5072  000D86  3952               	swapf	82,w,b	;volatile
  5073  000D88  42E8               	rrncf	wreg,f,c
  5074  000D8A  0B07               	andlw	7
  5075  000D8C  0B07               	andlw	7
  5076  000D8E  6E0C               	movwf	CANreceiveMessage@tamp,c
  5077                           
  5078                           ; BSR set to: 15
  5079                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  5080  000D90  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5081  000D94  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5082  000D98  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  5083  000D9C  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  5084  000DA0  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  5085  000DA4  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  5086  000DA8  500C               	movf	CANreceiveMessage@tamp,w,c
  5087  000DAA  2403               	addwf	??_CANreceiveMessage,w,c
  5088  000DAC  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  5089  000DAE  0E00               	movlw	0
  5090  000DB0  2004               	addwfc	??_CANreceiveMessage+1,w,c
  5091  000DB2  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  5092  000DB4  0E00               	movlw	0
  5093  000DB6  2005               	addwfc	??_CANreceiveMessage+2,w,c
  5094  000DB8  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  5095  000DBA  0E00               	movlw	0
  5096  000DBC  2006               	addwfc	??_CANreceiveMessage+3,w,c
  5097  000DBE  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  5098  000DC0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5099  000DC4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5100  000DC8  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  5101  000DCC  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  5102  000DD0  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  5103  000DD4  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  5104                           
  5105                           ;inc\CANlib.h: 563: }
  5106  000DD8  D08D               	goto	i2l3005
  5107  000DDA                     i2l2979:
  5108                           
  5109                           ; BSR set to: 15
  5110                           ;inc\CANlib.h: 564: else
  5111                           ;inc\CANlib.h: 565: {
  5112                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  5113  000DDA  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  5114  000DDE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5115  000DE0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5116  000DE2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5117  000DE4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5118  000DE8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5119  000DEC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  5120  000DF0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  5121  000DF4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  5122  000DF8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  5123                           
  5124                           ; BSR set to: 15
  5125                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  5126  000DFC  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  5127  000E00  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5128  000E02  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5129  000E04  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5130  000E06  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  5131  000E0A  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  5132  000E0E  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  5133  000E12  6A03               	clrf	??_CANreceiveMessage,c
  5134  000E14  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5135  000E18  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5136  000E1C  5003               	movf	??_CANreceiveMessage,w,c
  5137  000E1E  26DE               	addwf	postinc2,f,c
  5138  000E20  5004               	movf	??_CANreceiveMessage+1,w,c
  5139  000E22  22DE               	addwfc	postinc2,f,c
  5140  000E24  5005               	movf	??_CANreceiveMessage+2,w,c
  5141  000E26  22DE               	addwfc	postinc2,f,c
  5142  000E28  5006               	movf	??_CANreceiveMessage+3,w,c
  5143  000E2A  22DE               	addwfc	postinc2,f,c
  5144                           
  5145                           ; BSR set to: 15
  5146                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  5147  000E2C  010F               	movlb	15	; () banked
  5148  000E2E  A152               	btfss	82,0,b	;volatile
  5149  000E30  D00C               	goto	i2l2987
  5150                           
  5151                           ; BSR set to: 15
  5152                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  5153  000E32  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5154  000E36  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5155  000E3A  0E00               	movlw	0
  5156  000E3C  12DE               	iorwf	postinc2,f,c
  5157  000E3E  0E00               	movlw	0
  5158  000E40  12DE               	iorwf	postinc2,f,c
  5159  000E42  0E01               	movlw	1
  5160  000E44  12DE               	iorwf	postinc2,f,c
  5161  000E46  0E00               	movlw	0
  5162  000E48  12DE               	iorwf	postinc2,f,c
  5163  000E4A                     i2l2987:
  5164                           
  5165                           ; BSR set to: 15
  5166                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  5167  000E4A  010F               	movlb	15	; () banked
  5168  000E4C  A352               	btfss	82,1,b	;volatile
  5169  000E4E  D00C               	goto	i2l2991
  5170                           
  5171                           ; BSR set to: 15
  5172                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  5173  000E50  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5174  000E54  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5175  000E58  0E00               	movlw	0
  5176  000E5A  12DE               	iorwf	postinc2,f,c
  5177  000E5C  0E00               	movlw	0
  5178  000E5E  12DE               	iorwf	postinc2,f,c
  5179  000E60  0E02               	movlw	2
  5180  000E62  12DE               	iorwf	postinc2,f,c
  5181  000E64  0E00               	movlw	0
  5182  000E66  12DE               	iorwf	postinc2,f,c
  5183  000E68                     i2l2991:
  5184                           
  5185                           ; BSR set to: 15
  5186                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  5187  000E68  010F               	movlb	15	; () banked
  5188  000E6A  AB52               	btfss	82,5,b	;volatile
  5189  000E6C  D00C               	goto	i2l2995
  5190                           
  5191                           ; BSR set to: 15
  5192                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  5193  000E6E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5194  000E72  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5195  000E76  0E00               	movlw	0
  5196  000E78  12DE               	iorwf	postinc2,f,c
  5197  000E7A  0E00               	movlw	0
  5198  000E7C  12DE               	iorwf	postinc2,f,c
  5199  000E7E  0E04               	movlw	4
  5200  000E80  12DE               	iorwf	postinc2,f,c
  5201  000E82  0E00               	movlw	0
  5202  000E84  12DE               	iorwf	postinc2,f,c
  5203  000E86                     i2l2995:
  5204                           
  5205                           ; BSR set to: 15
  5206                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  5207  000E86  010F               	movlb	15	; () banked
  5208  000E88  AD52               	btfss	82,6,b	;volatile
  5209  000E8A  D00C               	goto	i2l2999
  5210                           
  5211                           ; BSR set to: 15
  5212                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  5213  000E8C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5214  000E90  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5215  000E94  0E00               	movlw	0
  5216  000E96  12DE               	iorwf	postinc2,f,c
  5217  000E98  0E00               	movlw	0
  5218  000E9A  12DE               	iorwf	postinc2,f,c
  5219  000E9C  0E08               	movlw	8
  5220  000E9E  12DE               	iorwf	postinc2,f,c
  5221  000EA0  0E00               	movlw	0
  5222  000EA2  12DE               	iorwf	postinc2,f,c
  5223  000EA4                     i2l2999:
  5224                           
  5225                           ; BSR set to: 15
  5226                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  5227  000EA4  010F               	movlb	15	; () banked
  5228  000EA6  AF52               	btfss	82,7,b	;volatile
  5229  000EA8  D00C               	goto	i2l3003
  5230                           
  5231                           ; BSR set to: 15
  5232                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  5233  000EAA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5234  000EAE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5235  000EB2  0E00               	movlw	0
  5236  000EB4  12DE               	iorwf	postinc2,f,c
  5237  000EB6  0E00               	movlw	0
  5238  000EB8  12DE               	iorwf	postinc2,f,c
  5239  000EBA  0E10               	movlw	16
  5240  000EBC  12DE               	iorwf	postinc2,f,c
  5241  000EBE  0E00               	movlw	0
  5242  000EC0  12DE               	iorwf	postinc2,f,c
  5243  000EC2                     i2l3003:
  5244                           
  5245                           ; BSR set to: 15
  5246                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  5247  000EC2  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  5248  000EC6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5249  000EC8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5250  000ECA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5251  000ECC  0E15               	movlw	21
  5252  000ECE                     i2u307_45:
  5253  000ECE  90D8               	bcf	status,0,c
  5254  000ED0  3603               	rlcf	??_CANreceiveMessage,f,c
  5255  000ED2  3604               	rlcf	??_CANreceiveMessage+1,f,c
  5256  000ED4  3605               	rlcf	??_CANreceiveMessage+2,f,c
  5257  000ED6  3606               	rlcf	??_CANreceiveMessage+3,f,c
  5258  000ED8  2EE8               	decfsz	wreg,f,c
  5259  000EDA  D7F9               	goto	i2u307_45
  5260  000EDC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5261  000EE0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5262  000EE4  5003               	movf	??_CANreceiveMessage,w,c
  5263  000EE6  12DE               	iorwf	postinc2,f,c
  5264  000EE8  5004               	movf	??_CANreceiveMessage+1,w,c
  5265  000EEA  12DE               	iorwf	postinc2,f,c
  5266  000EEC  5005               	movf	??_CANreceiveMessage+2,w,c
  5267  000EEE  12DE               	iorwf	postinc2,f,c
  5268  000EF0  5006               	movf	??_CANreceiveMessage+3,w,c
  5269  000EF2  12DE               	iorwf	postinc2,f,c
  5270  000EF4                     i2l3005:
  5271                           
  5272                           ; BSR set to: 15
  5273                           ;inc\CANlib.h: 581: }
  5274                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  5275  000EF4  010F               	movlb	15	; () banked
  5276  000EF6  9F50               	bcf	80,7,b	;volatile
  5277                           
  5278                           ; BSR set to: 15
  5279                           ;inc\CANlib.h: 584: return (error);
  5280                           ;	Return value of _CANreceiveMessage is never used
  5281  000EF8  0012               	return	
  5282  000EFA                     i2l374:
  5283                           
  5284                           ; BSR set to: 15
  5285                           ;inc\CANlib.h: 585: }
  5286                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  5287  000EFA  AE60               	btfss	3936,7,c	;volatile
  5288  000EFC  0012               	return	
  5289                           
  5290                           ; BSR set to: 15
  5291                           ;inc\CANlib.h: 588: {
  5292                           ;inc\CANlib.h: 589: msg->identifier = 0;
  5293  000EFE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5294  000F02  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5295  000F06  6ADE               	clrf	postinc2,c
  5296  000F08  6ADE               	clrf	postinc2,c
  5297  000F0A  6ADE               	clrf	postinc2,c
  5298  000F0C  6ADD               	clrf	postdec2,c
  5299                           
  5300                           ; BSR set to: 15
  5301                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  5302  000F0E  EE20 F004          	lfsr	2,4
  5303  000F12  5001               	movf	CANreceiveMessage@msg,w,c
  5304  000F14  26D9               	addwf	fsr2l,f,c
  5305  000F16  5002               	movf	CANreceiveMessage@msg+1,w,c
  5306  000F18  22DA               	addwfc	fsr2h,f,c
  5307  000F1A  CF66 FFDF          	movff	3942,indf2	;volatile
  5308                           
  5309                           ; BSR set to: 15
  5310                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  5311  000F1E  EE20 F005          	lfsr	2,5
  5312  000F22  5001               	movf	CANreceiveMessage@msg,w,c
  5313  000F24  26D9               	addwf	fsr2l,f,c
  5314  000F26  5002               	movf	CANreceiveMessage@msg+1,w,c
  5315  000F28  22DA               	addwfc	fsr2h,f,c
  5316  000F2A  CF67 FFDF          	movff	3943,indf2	;volatile
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  5320  000F2E  EE20 F006          	lfsr	2,6
  5321  000F32  5001               	movf	CANreceiveMessage@msg,w,c
  5322  000F34  26D9               	addwf	fsr2l,f,c
  5323  000F36  5002               	movf	CANreceiveMessage@msg+1,w,c
  5324  000F38  22DA               	addwfc	fsr2h,f,c
  5325  000F3A  CF68 FFDF          	movff	3944,indf2	;volatile
  5326                           
  5327                           ; BSR set to: 15
  5328                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  5329  000F3E  EE20 F007          	lfsr	2,7
  5330  000F42  5001               	movf	CANreceiveMessage@msg,w,c
  5331  000F44  26D9               	addwf	fsr2l,f,c
  5332  000F46  5002               	movf	CANreceiveMessage@msg+1,w,c
  5333  000F48  22DA               	addwfc	fsr2h,f,c
  5334  000F4A  CF69 FFDF          	movff	3945,indf2	;volatile
  5335                           
  5336                           ; BSR set to: 15
  5337                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  5338  000F4E  EE20 F008          	lfsr	2,8
  5339  000F52  5001               	movf	CANreceiveMessage@msg,w,c
  5340  000F54  26D9               	addwf	fsr2l,f,c
  5341  000F56  5002               	movf	CANreceiveMessage@msg+1,w,c
  5342  000F58  22DA               	addwfc	fsr2h,f,c
  5343  000F5A  CF6A FFDF          	movff	3946,indf2	;volatile
  5344                           
  5345                           ; BSR set to: 15
  5346                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  5347  000F5E  EE20 F009          	lfsr	2,9
  5348  000F62  5001               	movf	CANreceiveMessage@msg,w,c
  5349  000F64  26D9               	addwf	fsr2l,f,c
  5350  000F66  5002               	movf	CANreceiveMessage@msg+1,w,c
  5351  000F68  22DA               	addwfc	fsr2h,f,c
  5352  000F6A  CF6B FFDF          	movff	3947,indf2	;volatile
  5353                           
  5354                           ; BSR set to: 15
  5355                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  5356  000F6E  EE20 F00A          	lfsr	2,10
  5357  000F72  5001               	movf	CANreceiveMessage@msg,w,c
  5358  000F74  26D9               	addwf	fsr2l,f,c
  5359  000F76  5002               	movf	CANreceiveMessage@msg+1,w,c
  5360  000F78  22DA               	addwfc	fsr2h,f,c
  5361  000F7A  CF6C FFDF          	movff	3948,indf2	;volatile
  5362                           
  5363                           ; BSR set to: 15
  5364                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  5365  000F7E  EE20 F00B          	lfsr	2,11
  5366  000F82  5001               	movf	CANreceiveMessage@msg,w,c
  5367  000F84  26D9               	addwf	fsr2l,f,c
  5368  000F86  5002               	movf	CANreceiveMessage@msg+1,w,c
  5369  000F88  22DA               	addwfc	fsr2h,f,c
  5370  000F8A  CF6D FFDF          	movff	3949,indf2	;volatile
  5371                           
  5372                           ; BSR set to: 15
  5373                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  5374  000F8E  EE20 F00E          	lfsr	2,14
  5375  000F92  5001               	movf	CANreceiveMessage@msg,w,c
  5376  000F94  26D9               	addwf	fsr2l,f,c
  5377  000F96  5002               	movf	CANreceiveMessage@msg+1,w,c
  5378  000F98  22DA               	addwfc	fsr2h,f,c
  5379  000F9A  AC65               	btfss	3941,6,c	;volatile
  5380  000F9C  D002               	goto	i2u309_40
  5381  000F9E  0E01               	movlw	1
  5382  000FA0  D001               	goto	i2u309_46
  5383  000FA2                     i2u309_40:
  5384  000FA2  0E00               	movlw	0
  5385  000FA4                     i2u309_46:
  5386  000FA4  6EDF               	movwf	indf2,c
  5387                           
  5388                           ; BSR set to: 15
  5389                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  5390  000FA6  EE20 F00D          	lfsr	2,13
  5391  000FAA  5001               	movf	CANreceiveMessage@msg,w,c
  5392  000FAC  26D9               	addwf	fsr2l,f,c
  5393  000FAE  5002               	movf	CANreceiveMessage@msg+1,w,c
  5394  000FB0  22DA               	addwfc	fsr2h,f,c
  5395  000FB2  5065               	movf	3941,w,c	;volatile
  5396  000FB4  0B0F               	andlw	15
  5397  000FB6  6EDF               	movwf	indf2,c
  5398                           
  5399                           ; BSR set to: 15
  5400                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  5401  000FB8  EE20 F00C          	lfsr	2,12
  5402  000FBC  5001               	movf	CANreceiveMessage@msg,w,c
  5403  000FBE  26D9               	addwf	fsr2l,f,c
  5404  000FC0  5002               	movf	CANreceiveMessage@msg+1,w,c
  5405  000FC2  22DA               	addwfc	fsr2h,f,c
  5406  000FC4  A662               	btfss	3938,3,c	;volatile
  5407  000FC6  D002               	goto	i2u310_40
  5408  000FC8  0E01               	movlw	1
  5409  000FCA  D001               	goto	i2u310_46
  5410  000FCC                     i2u310_40:
  5411  000FCC  0E00               	movlw	0
  5412  000FCE                     i2u310_46:
  5413  000FCE  6EDF               	movwf	indf2,c
  5414                           
  5415                           ; BSR set to: 15
  5416                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  5417  000FD0  B662               	btfsc	3938,3,c	;volatile
  5418  000FD2  D043               	goto	i2l3041
  5419                           
  5420                           ; BSR set to: 15
  5421                           ;inc\CANlib.h: 606: {
  5422                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  5423  000FD4  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  5424  000FD8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5425  000FDA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5426  000FDC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5427  000FDE  0E03               	movlw	3
  5428  000FE0                     i2u312_45:
  5429  000FE0  90D8               	bcf	status,0,c
  5430  000FE2  3603               	rlcf	??_CANreceiveMessage,f,c
  5431  000FE4  3604               	rlcf	??_CANreceiveMessage+1,f,c
  5432  000FE6  3605               	rlcf	??_CANreceiveMessage+2,f,c
  5433  000FE8  3606               	rlcf	??_CANreceiveMessage+3,f,c
  5434  000FEA  2EE8               	decfsz	wreg,f,c
  5435  000FEC  D7F9               	goto	i2u312_45
  5436  000FEE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5437  000FF2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5438  000FF6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  5439  000FFA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  5440  000FFE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  5441  001002  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  5442                           
  5443                           ; BSR set to: 15
  5444                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  5445  001006  3862               	swapf	3938,w,c	;volatile
  5446  001008  42E8               	rrncf	wreg,f,c
  5447  00100A  0B07               	andlw	7
  5448  00100C  0B07               	andlw	7
  5449  00100E  6E0C               	movwf	CANreceiveMessage@tamp,c
  5450                           
  5451                           ; BSR set to: 15
  5452                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  5453  001010  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5454  001014  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5455  001018  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  5456  00101C  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  5457  001020  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  5458  001024  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  5459  001028  500C               	movf	CANreceiveMessage@tamp,w,c
  5460  00102A  2403               	addwf	??_CANreceiveMessage,w,c
  5461  00102C  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  5462  00102E  0E00               	movlw	0
  5463  001030  2004               	addwfc	??_CANreceiveMessage+1,w,c
  5464  001032  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  5465  001034  0E00               	movlw	0
  5466  001036  2005               	addwfc	??_CANreceiveMessage+2,w,c
  5467  001038  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  5468  00103A  0E00               	movlw	0
  5469  00103C  2006               	addwfc	??_CANreceiveMessage+3,w,c
  5470  00103E  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  5471  001040  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5472  001044  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5473  001048  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  5474  00104C  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  5475  001050  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  5476  001054  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  5477                           
  5478                           ;inc\CANlib.h: 610: }
  5479  001058  D088               	goto	i2l3067
  5480  00105A                     i2l3041:
  5481                           
  5482                           ; BSR set to: 15
  5483                           ;inc\CANlib.h: 611: else
  5484                           ;inc\CANlib.h: 612: {
  5485                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  5486  00105A  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  5487  00105E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5488  001060  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5489  001062  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5490  001064  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5491  001068  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5492  00106C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  5493  001070  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  5494  001074  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  5495  001078  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  5496                           
  5497                           ; BSR set to: 15
  5498                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  5499  00107C  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  5500  001080  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5501  001082  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5502  001084  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5503  001086  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  5504  00108A  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  5505  00108E  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  5506  001092  6A03               	clrf	??_CANreceiveMessage,c
  5507  001094  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5508  001098  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5509  00109C  5003               	movf	??_CANreceiveMessage,w,c
  5510  00109E  26DE               	addwf	postinc2,f,c
  5511  0010A0  5004               	movf	??_CANreceiveMessage+1,w,c
  5512  0010A2  22DE               	addwfc	postinc2,f,c
  5513  0010A4  5005               	movf	??_CANreceiveMessage+2,w,c
  5514  0010A6  22DE               	addwfc	postinc2,f,c
  5515  0010A8  5006               	movf	??_CANreceiveMessage+3,w,c
  5516  0010AA  22DE               	addwfc	postinc2,f,c
  5517                           
  5518                           ; BSR set to: 15
  5519                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  5520  0010AC  A062               	btfss	3938,0,c	;volatile
  5521  0010AE  D00C               	goto	i2l3049
  5522                           
  5523                           ; BSR set to: 15
  5524                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  5525  0010B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5526  0010B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5527  0010B8  0E00               	movlw	0
  5528  0010BA  12DE               	iorwf	postinc2,f,c
  5529  0010BC  0E00               	movlw	0
  5530  0010BE  12DE               	iorwf	postinc2,f,c
  5531  0010C0  0E01               	movlw	1
  5532  0010C2  12DE               	iorwf	postinc2,f,c
  5533  0010C4  0E00               	movlw	0
  5534  0010C6  12DE               	iorwf	postinc2,f,c
  5535  0010C8                     i2l3049:
  5536                           
  5537                           ; BSR set to: 15
  5538                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  5539  0010C8  A262               	btfss	3938,1,c	;volatile
  5540  0010CA  D00C               	goto	i2l3053
  5541                           
  5542                           ; BSR set to: 15
  5543                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  5544  0010CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5545  0010D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5546  0010D4  0E00               	movlw	0
  5547  0010D6  12DE               	iorwf	postinc2,f,c
  5548  0010D8  0E00               	movlw	0
  5549  0010DA  12DE               	iorwf	postinc2,f,c
  5550  0010DC  0E02               	movlw	2
  5551  0010DE  12DE               	iorwf	postinc2,f,c
  5552  0010E0  0E00               	movlw	0
  5553  0010E2  12DE               	iorwf	postinc2,f,c
  5554  0010E4                     i2l3053:
  5555                           
  5556                           ; BSR set to: 15
  5557                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  5558  0010E4  AA62               	btfss	3938,5,c	;volatile
  5559  0010E6  D00C               	goto	i2l3057
  5560                           
  5561                           ; BSR set to: 15
  5562                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  5563  0010E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5564  0010EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5565  0010F0  0E00               	movlw	0
  5566  0010F2  12DE               	iorwf	postinc2,f,c
  5567  0010F4  0E00               	movlw	0
  5568  0010F6  12DE               	iorwf	postinc2,f,c
  5569  0010F8  0E04               	movlw	4
  5570  0010FA  12DE               	iorwf	postinc2,f,c
  5571  0010FC  0E00               	movlw	0
  5572  0010FE  12DE               	iorwf	postinc2,f,c
  5573  001100                     i2l3057:
  5574                           
  5575                           ; BSR set to: 15
  5576                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  5577  001100  AC62               	btfss	3938,6,c	;volatile
  5578  001102  D00C               	goto	i2l3061
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  5582  001104  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5583  001108  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5584  00110C  0E00               	movlw	0
  5585  00110E  12DE               	iorwf	postinc2,f,c
  5586  001110  0E00               	movlw	0
  5587  001112  12DE               	iorwf	postinc2,f,c
  5588  001114  0E08               	movlw	8
  5589  001116  12DE               	iorwf	postinc2,f,c
  5590  001118  0E00               	movlw	0
  5591  00111A  12DE               	iorwf	postinc2,f,c
  5592  00111C                     i2l3061:
  5593                           
  5594                           ; BSR set to: 15
  5595                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  5596  00111C  AE62               	btfss	3938,7,c	;volatile
  5597  00111E  D00C               	goto	i2l3065
  5598                           
  5599                           ; BSR set to: 15
  5600                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  5601  001120  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5602  001124  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5603  001128  0E00               	movlw	0
  5604  00112A  12DE               	iorwf	postinc2,f,c
  5605  00112C  0E00               	movlw	0
  5606  00112E  12DE               	iorwf	postinc2,f,c
  5607  001130  0E10               	movlw	16
  5608  001132  12DE               	iorwf	postinc2,f,c
  5609  001134  0E00               	movlw	0
  5610  001136  12DE               	iorwf	postinc2,f,c
  5611  001138                     i2l3065:
  5612                           
  5613                           ; BSR set to: 15
  5614                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  5615  001138  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  5616  00113C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  5617  00113E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  5618  001140  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  5619  001142  0E15               	movlw	21
  5620  001144                     i2u318_45:
  5621  001144  90D8               	bcf	status,0,c
  5622  001146  3603               	rlcf	??_CANreceiveMessage,f,c
  5623  001148  3604               	rlcf	??_CANreceiveMessage+1,f,c
  5624  00114A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  5625  00114C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  5626  00114E  2EE8               	decfsz	wreg,f,c
  5627  001150  D7F9               	goto	i2u318_45
  5628  001152  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  5629  001156  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  5630  00115A  5003               	movf	??_CANreceiveMessage,w,c
  5631  00115C  12DE               	iorwf	postinc2,f,c
  5632  00115E  5004               	movf	??_CANreceiveMessage+1,w,c
  5633  001160  12DE               	iorwf	postinc2,f,c
  5634  001162  5005               	movf	??_CANreceiveMessage+2,w,c
  5635  001164  12DE               	iorwf	postinc2,f,c
  5636  001166  5006               	movf	??_CANreceiveMessage+3,w,c
  5637  001168  12DE               	iorwf	postinc2,f,c
  5638  00116A                     i2l3067:
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;inc\CANlib.h: 629: }
  5642                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  5643  00116A  9E60               	bcf	3936,7,c	;volatile
  5644                           
  5645                           ; BSR set to: 15
  5646                           ;inc\CANlib.h: 632: return (error);
  5647                           ;	Return value of _CANreceiveMessage is never used
  5648  00116C  0012               	return	
  5649  00116E                     __end_of_CANreceiveMessage:
  5650                           	opt stack 0
  5651                           pclatu	equ	0xFFB
  5652                           pclath	equ	0xFFA
  5653                           tblptru	equ	0xFF8
  5654                           tblptrh	equ	0xFF7
  5655                           tblptrl	equ	0xFF6
  5656                           tablat	equ	0xFF5
  5657                           prodh	equ	0xFF4
  5658                           prodl	equ	0xFF3
  5659                           postinc0	equ	0xFEE
  5660                           fsr0h	equ	0xFEA
  5661                           fsr0l	equ	0xFE9
  5662                           wreg	equ	0xFE8
  5663                           fsr1h	equ	0xFE2
  5664                           fsr1l	equ	0xFE1
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _CANisRxReady *****************
  5673 ;; Defined at:
  5674 ;;		line 1163 in file "I:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      unsigned char 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5688 ;;      Params:         0       0       0       0
  5689 ;;      Locals:         1       0       0       0
  5690 ;;      Temps:          0       0       0       0
  5691 ;;      Totals:         1       0       0       0
  5692 ;;Total ram usage:        1 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_ISR_Alta
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text21
  5702  001B66                     __ptext21:
  5703                           	opt stack 0
  5704  001B66                     _CANisRxReady:
  5705                           	opt stack 23
  5706                           
  5707                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;incstack = 0
  5711  001B66  0E01               	movlw	1
  5712  001B68  6E01               	movwf	_CANisRxReady$2542,c
  5713  001B6A  BE60               	btfsc	3936,7,c	;volatile
  5714  001B6C  D005               	goto	i2l525
  5715  001B6E  010F               	movlb	15	; () banked
  5716  001B70  BF50               	btfsc	80,7,b	;volatile
  5717  001B72  D002               	goto	i2l525
  5718                           
  5719                           ; BSR set to: 15
  5720  001B74  0E00               	movlw	0
  5721  001B76  6E01               	movwf	_CANisRxReady$2542,c
  5722  001B78                     i2l525:
  5723  001B78  5001               	movf	_CANisRxReady$2542,w,c
  5724  001B7A  0012               	return	
  5725  001B7C                     __end_of_CANisRxReady:
  5726                           	opt stack 0
  5727                           pclatu	equ	0xFFB
  5728                           pclath	equ	0xFFA
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           prodh	equ	0xFF4
  5734                           prodl	equ	0xFF3
  5735                           postinc0	equ	0xFEE
  5736                           fsr0h	equ	0xFEA
  5737                           fsr0l	equ	0xFE9
  5738                           wreg	equ	0xFE8
  5739                           fsr1h	equ	0xFE2
  5740                           fsr1l	equ	0xFE1
  5741                           indf2	equ	0xFDF
  5742                           postinc2	equ	0xFDE
  5743                           postdec2	equ	0xFDD
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8
  5747                           pclatu	equ	0xFFB
  5748                           pclath	equ	0xFFA
  5749                           tblptru	equ	0xFF8
  5750                           tblptrh	equ	0xFF7
  5751                           tblptrl	equ	0xFF6
  5752                           tablat	equ	0xFF5
  5753                           prodh	equ	0xFF4
  5754                           prodl	equ	0xFF3
  5755                           postinc0	equ	0xFEE
  5756                           fsr0h	equ	0xFEA
  5757                           fsr0l	equ	0xFE9
  5758                           wreg	equ	0xFE8
  5759                           fsr1h	equ	0xFE2
  5760                           fsr1l	equ	0xFE1
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           fsr2h	equ	0xFDA
  5765                           fsr2l	equ	0xFD9
  5766                           status	equ	0xFD8
  5767                           
  5768                           	psect	rparam
  5769  0000                     pclatu	equ	0xFFB
  5770                           pclath	equ	0xFFA
  5771                           tblptru	equ	0xFF8
  5772                           tblptrh	equ	0xFF7
  5773                           tblptrl	equ	0xFF6
  5774                           tablat	equ	0xFF5
  5775                           prodh	equ	0xFF4
  5776                           prodl	equ	0xFF3
  5777                           postinc0	equ	0xFEE
  5778                           fsr0h	equ	0xFEA
  5779                           fsr0l	equ	0xFE9
  5780                           wreg	equ	0xFE8
  5781                           fsr1h	equ	0xFE2
  5782                           fsr1l	equ	0xFE1
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790                           	psect	temp
  5791  000045                     btemp:
  5792                           	opt stack 0
  5793  000045                     	ds	1
  5794  0000                     int$flags	set	btemp
  5795                           pclatu	equ	0xFFB
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           postinc0	equ	0xFEE
  5804                           fsr0h	equ	0xFEA
  5805                           fsr0l	equ	0xFE9
  5806                           wreg	equ	0xFE8
  5807                           fsr1h	equ	0xFE2
  5808                           fsr1l	equ	0xFE1
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        1
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160     12      12
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _main->_LCD_goto_xy
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->_CANreceiveMessage

Critical Paths under _main in BANK0

    _configurazione->_CANInitialize
    _LCD_write_message->_LCD_write_char

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   79749
                          _LCD_clear
                        _LCD_goto_xy
                     _LCD_initialize
                     _LCD_write_char
                  _LCD_write_message
                     _configurazione
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    8194
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8194
                                              0 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             26 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             26 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2    9134
                                             38 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    8992
                                              0 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       1     1      0   26557
                                             40 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (2) _delay_set_quartz                                     1     1      0      15
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor                                           2     1      1    8611
                                             38 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    8472
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_goto_xy                                          2     1      1   17444
                                             41 COMRAM     1     0      1
                                              0 BANK0      1     1      0
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_shift_cursor                                     3     2      1    8648
                                             38 COMRAM     3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8503
                                             38 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8472
                                             34 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0     956
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     956
                                             32 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Alta                                            14    14      0    1161
                                             12 COMRAM    14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (8) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_xy
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_shift_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_char
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul

 _ISR_Alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C       C       4        7.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50       9        0.0%
DATA                 0      0      50      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Feb 03 18:17:36 2016

      __size_of_delay_set_quartz 0008             __end_of_CANSetFilter 0C62  
                             _id 0034              ___wmul@multiplicand 001D  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                      __CFG_OSC$HS 000000  
                    __CFG_LVP$ON 000000                              l400 132E  
                            l401 1332                              l410 1412  
                            l402 133C                              l322 1532  
                            l411 141C                              l403 1340  
                            l323 153C                              l412 1420  
                            l404 134A                              l413 142A  
                            l430 073E                              l414 142E  
                            l431 0748                              l415 1438  
                            l407 1400                              l440 082A  
                            l432 074C                              l408 1404  
                            l441 082E                              l433 0756  
                            l409 140E                              l450 0912  
                            l442 0838                              l434 075A  
                            l451 091C                              l443 083C  
                            l435 0764                              l427 072C  
                            l460 0A00                              l452 0920  
                            l444 0846                              l428 0730  
                            l533 1A2C                              l461 0A04  
                            l453 092A                              l445 084A  
                            l429 073A                              l462 0A0E  
                            l454 092E                              l446 0854  
                            l438 081C                              l471 0AF2  
                            l463 0A12                              l455 0938  
                            l439 0820                              l472 0AF6  
                            l464 0A1C                              l456 093C  
                            l473 0B00                              l465 0A20  
                            l457 0946                              l449 090E  
                            l490 0C1C                              l482 0BE4  
                            l474 0B04                              l466 0A2A  
                            l483 0BE8                              l475 0B0E  
                            l467 0A2E                              l484 0BF2  
                            l476 0B12                              l468 0A38  
                            l396 1312                              l485 0BF6  
                            l477 0B1C                              l397 1316  
                            l486 0C00                              l478 0B20  
                            l398 1320                              l487 0C04  
                            l479 0B2A                              l399 1324  
                            l488 0C0E                              l489 0C12  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                    ?_LCD_cursor 0027                              _msg 0035  
                            wreg 000FE8                  ?_configurazione 0001  
         __size_of_LCD_goto_line 00B8                     __CFG_WDT$OFF 000000  
                           l3331 12A2                             l3315 1208  
                           l3413 03A4                             l3503 06B8  
                           l3431 0440                             l3531 0768  
                           l3363 138E                             l3285 1A20  
                           l3701 0C20                             l3605 098A  
                           l3357 134E                             l3297 1B82  
                           l3633 0A3C                             l3537 07A8  
                           l3449 04DE                             l3811 1A94  
                           l3571 0898                             l3467 057C  
                           l3565 0858                             l3485 061A  
                           l3389 143C                             l3815 1AA8  
                           l3639 0A7C                             l3751 152A  
                           l3673 0B6E                             l3753 1540  
                           l3771 19FA                             l3667 0B2E  
                           l3781 17C0                             l3757 1548  
                           l3775 174E                             l3783 17E6  
                           l3767 19D4                             l3599 094A  
                           l3759 158C                             l3777 1774  
                           l3779 179A                             l3955 192A  
                           STR_1 0301                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           u3410 1234                             u4300 0C3E  
                           u4220 0B4C                             u4140 0A5A  
                           u4060 0968                             u3500 136C  
                           u3415 122A                             u4305 0C34  
                           u4225 0B42                             u4145 0A50  
                           u4065 095E                             u3505 1362  
                           u3425 1280                             u3610 0336  
                           u3370 119A                             u4315 1A40  
                           u4316 1A42                             u4325 1A4A  
                           u4326 1A4C                             u4335 1A54  
                           u3615 032C                             u3375 1190  
                           u4336 1A56                             u4345 1A5E  
                           u3705 04BC                             u3625 0382  
                           u3385 11E6                             u4346 1A60  
                           u3810 064A                             u3730 050E  
                           u3650 03D2                             u3900 0786  
                           u3580 145A                             u4517 1A22  
                           u3815 0640                             u3735 0504  
                           u3655 03C8                             u3905 077C  
                           u3825 0696                             u3745 055A  
                           u3665 041E                             u3585 1450  
                           u3770 05AC                             u3690 0470  
                           u3775 05A2                             u3695 0466  
                           u3785 05F8                             u3980 0876  
                           u3985 086C              __size_of_CANSetMask 0310  
                   ?_LCD_goto_xy 002A                             _data 0033  
                           _main 1920        __size_of_LCD_send_command 0030  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 0045  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 0016  
                  __CFG_IESO$OFF 000000               __size_of_LCD_clear 0026  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000010  
       __end_of_LCD_enable_pulse 1B4E                 _CANOperationMode 1B7C  
        __size_of_LCD_initialize 011A       __size_of_CANreceiveMessage 050C  
                          ?_main 0001                            i2l525 1B78  
                          i2l374 0EFA                            i2l628 18E4  
              _CANisRxReady$2542 0001                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_PWRT$OFF 000000                 __end_of_ISR_Alta 1920  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000               CANInitialize@flags 0064  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
      __size_of_LCD_shift_cursor 0038             __end_of_CANisRxReady 1B7C  
                          tablat 000FF5                            status 000FD8  
                 __CFG_PBADEN$ON 000000              __size_of_LCD_cursor 0028  
                __initialization 1A66                     __end_of_main 197A  
                  _LCD_goto_line 174A                           ??_main 002B  
                  __activetblptr 000002                __end_of_LCD_clear 1B0A  
                         _CANCON 000F6F                  __CFG_BBSIZ$1024 000000  
                         i2l3003 0EC2                           i2l3005 0EF4  
                         i2l3041 105A                           i2l3061 111C  
                         i2l3053 10E4                           i2l3065 1138  
                         i2l3057 1100                           i2l3049 10C8  
                         i2l3067 116A                           i2l2991 0E68  
                         i2l2995 0E86                           i2l2987 0E4A  
                         i2l2979 0DDA                           i2l2999 0EA4  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F56  
                         _RXB0D5 000F6B                           _RXB1D1 000F57  
                         _RXB0D6 000F6C                           _RXB1D2 000F58  
                         _RXB0D7 000F6D                           _RXB1D3 000F59  
                         _RXB1D4 000F5A                           _RXB1D5 000F5B  
                         _RXB1D6 000F5C                           _RXB1D7 000F5D  
                         _TXB0D0 000F46                           _TXB0D1 000F47  
                         _TXB0D2 000F48                           _TXB0D3 000F49  
                         _TXB1D0 000F36                           _TXB0D4 000F4A  
                         _TXB1D1 000F37                           _TXB0D5 000F4B  
                         _TXB1D2 000F38                           _TXB0D6 000F4C  
                         _TXB1D3 000F39                           _TXB0D7 000F4D  
                         _TXB2D0 000F26                           _TXB1D4 000F3A  
                         _TXB2D1 000F27                           _TXB1D5 000F3B  
                         _TXB2D2 000F28                           _TXB1D6 000F3C  
                         _TXB2D3 000F29                           _TXB1D7 000F3D  
                         _TXB2D4 000F2A                           _TXB2D5 000F2B  
                         _TXB2D6 000F2C                           _TXB2D7 000F2D  
               __end_of_delay_ms 1A36            __size_of_CANSetFilter 095C  
                 __CFG_XINST$OFF 000000                   ?_LCD_goto_line 0001  
               _delay_set_quartz 1B8E                           ___wmul 1B0A  
                 __CFG_STVREN$ON 000000                     ??_CANSetMask 0020  
        __size_of_LCD_write_char 0096   LCD_initialize@quartz_frequency 0029  
                         clear_0 1A6C                  __CFG_BOREN$BOHW 000000  
                   __pdataCOMRAM 0044                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                     _CANSetFilter 0306  
                     __accesstop 0060          __end_of__initialization 1A84  
             __end_of_CANSetMask 147E                 _LCD_send_command 1A36  
                  ___rparam_used 000001             __size_of_LCD_goto_xy 0018  
                 __pcstackCOMRAM 0001                        ?_ISR_Alta 0001  
                   LCD_goto_xy@x 0060                     LCD_goto_xy@y 002A  
                 _LCD_initialize 1630                _LCD_write_message 1A92  
               ??_configurazione 0029            CANSetFilter@numBuffer 0024  
             ?_LCD_write_message 0027                     ??_LCD_cursor 0028  
          __size_of_CANisRxReady 0016              ??_LCD_write_message 0029  
               _LCD_shift_cursor 19CC         __end_of_CANOperationMode 1B8E  
                ??_LCD_goto_line 0027               __end_of_LCD_cursor 1AE4  
                     ??_ISR_Alta 000D           __end_of_LCD_initialize 174A  
                        ?___wmul 001B        __end_of_LCD_write_message 1ABC  
              ?_LCD_enable_pulse 0001                     _CANisRxReady 1B66  
                        _CANSTAT 000F6E               ??_LCD_enable_pulse 0023  
                        _BRGCON1 000F70                          _BRGCON2 000F71  
                        _BRGCON3 000F72           __size_of_CANInitialize 01B2  
               LCD_cursor@active 0028                        ?_delay_ms 0021  
                        _RXB0DLC 000F65                          _RXB1DLC 000F55  
                        _RXB0CON 000F60                          _RXB1CON 000F50  
                        _TXB0DLC 000F45                          _TXB1DLC 000F35  
                        _TXB2DLC 000F25                          __Hparam 0000  
                        __Lparam 0000                 delay_ms@value_ms 0021  
                ?_LCD_initialize 0001                  __size_of___wmul 0026  
                 _LCD_write_char 1802                     __psmallconst 0300  
           CANInitialize@propSeg 0069                          __pcinit 1A66  
                        __ramtop 0300              LCD_write_char@value 0064  
                        __ptext0 1920                          __ptext1 197A  
                        __ptext2 147E                          __ptext3 116E  
                        __ptext4 0306                          __ptext5 1B7C  
                        __ptext6 1A92                          __ptext7 1802  
                        __ptext8 1630                          __ptext9 1B8E  
               LCD_write_char@D0 0063                 LCD_write_char@D1 0062  
               LCD_write_char@D2 0061                 LCD_write_char@D3 0060  
                     ??_delay_ms 0023           CANreceiveMessage@error 000B  
       __end_of_delay_set_quartz 1B96                   __pintcode_body 1898  
                      _LCD_clear 1AE4             end_of_initialization 1A84  
                  __Lmediumconst 0000                          int_func 1898  
                  _CANInitialize 147E               LCD_cursor@blinking 0027  
         __end_of_LCD_write_char 1898                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
     __size_of_LCD_write_message 002A                   CANSetMask@mask 001B  
                 CANSetMask@tamp 0025         __end_of_LCD_send_command 1A66  
                 CANSetMask@type 001F                       ?_LCD_clear 0001  
        _clock_counter_reference 0031                 CANInitialize@BRP 0063  
               CANInitialize@SJW 0062                   ?_CANInitialize 0060  
        LCD_write_integer@F16315 002B                  ?_LCD_write_char 0001  
       __end_of_LCD_shift_cursor 1A04                __size_of_ISR_Alta 1918  
                 __end_of___wmul 1B30                    __pidataCOMRAM 1B96  
              LCD_shift_cursor@i 0029              start_initialization 1A66  
            CANSetMask@numBuffer 0024                ?_CANOperationMode 0001  
                  ??_LCD_goto_xy 002B               ??_CANOperationMode 001B  
     CANInitialize@FilterConfig1 006A       CANInitialize@FilterConfig2 006B  
                       ??___wmul 001F                 __CFG_LPT1OSC$OFF 000000  
         CANInitialize@phaseSeg1 0060           CANInitialize@phaseSeg2 0061  
                    __pbssCOMRAM 002B                    __pcstackBANK0 0060  
                    _BRGCON2bits 000F71                      _BRGCON3bits 000F72  
      __size_of_LCD_enable_pulse 001E                __size_of_delay_ms 0032  
                    ??_LCD_clear 0027          LCD_write_message@buffer 0027  
                ??_CANInitialize 0065                 ??_LCD_initialize 0029  
             CANSetFilter@filter 001B        delay_set_quartz@frequency 001B  
             LCD_send_command@D0 0025               LCD_send_command@D1 0024  
             LCD_send_command@D2 0023               LCD_send_command@D3 0026  
            __end_of_LCD_goto_xy 1B66            __end_of_LCD_goto_line 1802  
                      __pintcode 0008                      __smallconst 0300  
                    _COMSTATbits 000F74                ?_delay_set_quartz 0001  
        __size_of_configurazione 0052            CANreceiveMessage@tamp 000C  
             ??_delay_set_quartz 001B                   ___wmul@product 001F  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
   _delay_quartz_frequency_value 0044                         _IPR3bits 000FA5  
                       _PIE3bits 000FA3                         i2u301_45 0D5E  
                       i2u310_40 0FCC                         i2u310_46 0FCE  
                       i2u312_45 0FE0                         i2u307_45 0ECE  
                       i2u309_40 0FA2                         i2u309_46 0FA4  
                       i2u318_45 1144                         _PIR3bits 000FA4  
                       i2u298_40 0D1A                         i2u298_46 0D1C  
                       i2u299_40 0D48                         i2u299_46 0D4A  
                       _RXB0EIDH 000F63                         _RXB0EIDL 000F64  
                       _RXB1EIDH 000F53                         _RXB1EIDL 000F54  
                       _ISR_Alta 0008                 __CFG_WDTPS$32768 000000  
                       _RXB0SIDH 000F61                         _RXB0SIDL 000F62  
                       _RXF0EIDH 000F02                         _RXB1SIDH 000F51  
                       _RXF0EIDL 000F03                         _RXB1SIDL 000F52  
                       _RXF1EIDH 000F06                         _RXF1EIDL 000F07  
                       _RXF2EIDH 000F0A                         _RXF2EIDL 000F0B  
                       _RXF3EIDH 000F0E                         _RXF3EIDL 000F0F  
                       _RXF4EIDH 000F12                         _RXF4EIDL 000F13  
                       _RXF5EIDH 000F16                         _RXF5EIDL 000F17  
                       _RXF0SIDH 000F00                         _RXF0SIDL 000F01  
                       _TXB0EIDH 000F43                         _RXF1SIDH 000F04  
                       _TXB0EIDL 000F44                         _RXF1SIDL 000F05  
                       _TXB1EIDH 000F33                         _RXF2SIDH 000F08  
                       _TXB1EIDL 000F34                         _RXF2SIDL 000F09  
                       _TXB2EIDH 000F23                         _RXF3SIDH 000F0C  
                       _TXB2EIDL 000F24                         _RXF3SIDL 000F0D  
                       _RXF4SIDH 000F10                         _RXF4SIDL 000F11  
                       _RXF5SIDH 000F14                         _RXF5SIDL 000F15  
                       _RXM0EIDH 000F1A                         _RXM0EIDL 000F1B  
                       _TXB0SIDH 000F41                         _RXM1EIDH 000F1E  
                       _TXB0SIDL 000F42                         _RXM1EIDL 000F1F  
                       _TXB1SIDH 000F31                         _TXB1SIDL 000F32  
                       _TXB2SIDH 000F21                         _TXB2SIDL 000F22  
                       _RXM0SIDH 000F18                         _RXM0SIDL 000F19  
                       _RXM1SIDH 000F1C                         _RXM1SIDL 000F1D  
                       _RXERRCNT 000F75                         _TXERRCNT 000F76  
              ___wmul@multiplier 001B                ?_LCD_send_command 0023  
             ??_LCD_send_command 0026                    ?_CANSetFilter 001B  
                     _CANCONbits 000F6F                      _LCD_goto_xy 1B4E  
               ??_LCD_write_char 0027                LCD_goto_line@line 0027  
                       __Hrparam 0000                     _RXB0SIDLbits 000F62  
                       __Lrparam 0000                     _RXB1SIDLbits 000F52  
                     _CANSetMask 116E                ?_LCD_shift_cursor 0027  
             ??_LCD_shift_cursor 0028                     _RXF0SIDLbits 000F01  
                       _delay_ms 1A04                     _RXF1SIDLbits 000F05  
                 ??_CANSetFilter 0020                 _LCD_enable_pulse 1B30  
                       __ptext10 1ABC                         __ptext11 1AE4  
                       __ptext20 0C62                         __ptext12 1B4E  
                       __ptext21 1B66                         __ptext13 19CC  
                       __ptext14 174A                         __ptext15 1A36  
                       __ptext16 1B30                         __ptext17 1A04  
                       __ptext18 1B0A                     _RXF2SIDLbits 000F09  
                   _RXF3SIDLbits 000F0D                     _RXF4SIDLbits 000F11  
                   _RXF5SIDLbits 000F15                    __size_of_main 005A  
           CANreceiveMessage@msg 0001            LCD_shift_cursor@shift 0028  
                   _TXB0SIDLbits 000F42                     _TXB1SIDLbits 000F32  
                   _TXB2SIDLbits 000F22                         int$flags 0045  
      __size_of_CANOperationMode 0012                    ?_CANisRxReady 0001  
                    _RXB0DLCbits 000F65                      _RXB1DLCbits 000F55  
                   _RXM0SIDLbits 000F19                      _RXB0CONbits 000F60  
                     _LCD_cursor 1ABC                      _RXB1CONbits 000F50  
              _CANreceiveMessage 0C62                     _RXM1SIDLbits 000F1D  
             ?_CANreceiveMessage 0001                   _configurazione 197A  
                       intlevel2 0000                 CANSetFilter@tamp 0025  
               CANSetFilter@type 001F              ??_CANreceiveMessage 0003  
                    _TXB0DLCbits 000F45                      _TXB1DLCbits 000F35  
                    _TXB0CONbits 000F40                      _TXB2DLCbits 000F25  
                    _TXB1CONbits 000F30                      _TXB2CONbits 000F20  
           CANOperationMode@mode 001B                   ??_CANisRxReady 0001  
                    ?_CANSetMask 001B        __end_of_CANreceiveMessage 116E  
LCD_shift_cursor@number_of_shift 0027           __end_of_configurazione 19CC  
          __end_of_CANInitialize 1630  
